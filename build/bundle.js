!function(e){var t={};function r(n){if(t[n])return t[n].exports;var u=t[n]={i:n,l:!1,exports:{}};return e[n].call(u.exports,u,u.exports,r),u.l=!0,u.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var u in e)r.d(n,u,function(t){return e[t]}.bind(null,u));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t){e.exports=require("react")},function(e,t){e.exports=require("redux")},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=n(r(3)),o=n(r(4)),i=n(r(11)),l=u.default();l.use(u.default.static("public")),l.get("*",function(e,t){var r=i.default();t.send(o.default(e,r))}),l.listen(3e3,function(){return console.log("listening on port 3000")})},function(e,t){e.exports=require("express")},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=n(r(0)),o=r(5),i=r(6),l=r(7),a=n(r(8));t.default=function(e,t){return'\n  <html>\n    <head></head>\n      <body>\n        <div id="root">'+o.renderToString(u.default.createElement(l.Provider,{store:t},u.default.createElement(i.StaticRouter,{location:e.path,context:{}},u.default.createElement(a.default,null))))+'</div>\n        <script src="bundle.js"><\/script>\n      </body>\n  </html>\n  '}},function(e,t){e.exports=require("react-dom/server")},function(e,t){e.exports=require("react-router-dom")},function(e,t){e.exports=require("react-redux")},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=n(r(0)),o=r(9),i=n(r(10)),l=n(r(16));t.default=function(){return u.default.createElement(o.Switch,null,u.default.createElement(o.Route,{exact:!0,path:"/",component:i.default}),u.default.createElement(o.Route,{path:"/users",component:l.default}))}},function(e,t){e.exports=require("react-router")},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=n(r(0));t.default=function(){return u.default.createElement("div",null,u.default.createElement("h1",null,"I am Home!!!"),u.default.createElement("button",{onClick:function(){return console.log("yoooo")}},"Click Me!"))}},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=r(1),o=n(r(12)),i=n(r(13));t.default=function(){return u.createStore(i.default,{},u.applyMiddleware(o.default))}},function(e,t){e.exports=require("redux-thunk")},function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var u=r(1),o=n(r(14)),i=u.combineReducers({users:o.default});t.default=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(15);t.default=function(e,t){switch(void 0===e&&(e=[]),t.type){case n.FETCH_USERS:return t.payload.data;default:return e}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FETCH_USERS="FETCH_USERS"},function(e,t,r){"use strict";var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var u=n(r(0)),o=r(7),i=r(17);t.default=o.connect(function(e){return{users:e.users}},{fetchUsers:i.fetchUsers})(function(e){return u.useEffect(function(){e.fetchUsers()},[]),u.default.createElement("div",null,u.default.createElement("p",null,"Here is a big list of users"),u.default.createElement("ul",null,e.users.map(function(e){return u.default.createElement("li",{key:e.id},e.name)})))})},function(e,t,r){"use strict";var n=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))(function(u,o){function i(e){try{a(n.next(e))}catch(e){o(e)}}function l(e){try{a(n.throw(e))}catch(e){o(e)}}function a(e){e.done?u(e.value):new r(function(t){t(e.value)}).then(i,l)}a((n=n.apply(e,t||[])).next())})},u=this&&this.__generator||function(e,t){var r,n,u,o,i={label:0,sent:function(){if(1&u[0])throw u[1];return u[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;i;)try{if(r=1,n&&(u=2&o[0]?n.return:o[0]?n.throw||((u=n.return)&&u.call(n),0):n.next)&&!(u=u.call(n,o[1])).done)return u;switch(n=0,u&&(o=[2&o[0],u.value]),o[0]){case 0:case 1:u=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,n=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(u=(u=i.trys).length>0&&u[u.length-1])&&(6===o[0]||2===o[0])){i=0;continue}if(3===o[0]&&(!u||o[1]>u[0]&&o[1]<u[3])){i.label=o[1];break}if(6===o[0]&&i.label<u[1]){i.label=u[1],u=o;break}if(u&&i.label<u[2]){i.label=u[2],i.ops.push(o);break}u[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],n=0}finally{r=u=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},i=this;Object.defineProperty(t,"__esModule",{value:!0});var l=o(r(18)),a=r(15);t.fetchUsers=function(){return function(e){return n(i,void 0,void 0,function(){var t;return u(this,function(r){switch(r.label){case 0:return[4,l.default.get("http://react-ssr-api.herokuapp.com/users")];case 1:return t=r.sent(),e({type:a.FETCH_USERS,payload:t}),[2]}})})}}},function(e,t){e.exports=require("axios")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,