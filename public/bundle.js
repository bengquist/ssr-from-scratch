!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=20)}([function(e,t,n){"use strict";e.exports=n(21)},function(e,t,n){"use strict";function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";function r(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";var r=!0,o="Invariant failed";t.a=function(e,t){if(!e)throw r?new Error(o):new Error(o+": "+(t||""))}},function(e,t,n){"use strict";var r=n(1);function o(e){return"/"===e.charAt(0)}function i(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],a=e&&o(e),u=t&&o(t),l=a||u;if(e&&o(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var c=void 0;if(r.length){var s=r[r.length-1];c="."===s||".."===s||""===s}else c=!1;for(var f=0,d=r.length;d>=0;d--){var p=r[d];"."===p?i(r,d):".."===p?(i(r,d),f++):f&&(i(r,d),f--)}if(!l)for(;f--;f)r.unshift("..");!l||""===r[0]||r[0]&&o(r[0])||r.unshift("");var h=r.join("/");return c&&"/"!==h.substr(-1)&&(h+="/"),h},u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var l=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":u(t);if(r!==(void 0===n?"undefined":u(n)))return!1;if("object"===r){var o=t.valueOf(),i=n.valueOf();if(o!==t||i!==n)return e(o,i);var a=Object.keys(t),l=Object.keys(n);return a.length===l.length&&a.every(function(r){return e(t[r],n[r])})}return!1},c=n(4);function s(e){return"/"===e.charAt(0)?e:"/"+e}function f(e){return"/"===e.charAt(0)?e.substr(1):e}function d(e,t){return function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)}(e,t)?e.substr(t.length):e}function p(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function h(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function m(e,t,n,o){var i;"string"==typeof e?(i=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(i=Object(r.a)({},e)).pathname&&(i.pathname=""),i.search?"?"!==i.search.charAt(0)&&(i.search="?"+i.search):i.search="",i.hash?"#"!==i.hash.charAt(0)&&(i.hash="#"+i.hash):i.hash="",void 0!==t&&void 0===i.state&&(i.state=t));try{i.pathname=decodeURI(i.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+i.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(i.key=n),o?i.pathname?"/"!==i.pathname.charAt(0)&&(i.pathname=a(i.pathname,o.pathname)):i.pathname=o.pathname:i.pathname||(i.pathname="/"),i}function v(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&l(e.state,t.state)}function y(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}}n.d(t,"a",function(){return T}),n.d(t,"b",function(){return P}),n.d(t,"d",function(){return R}),n.d(t,"c",function(){return m}),n.d(t,"f",function(){return v}),n.d(t,"e",function(){return h});var g=!("undefined"==typeof window||!window.document||!window.document.createElement);function b(e,t){t(window.confirm(e))}var w="popstate",x="hashchange";function k(){try{return window.history.state||{}}catch(e){return{}}}function T(e){void 0===e&&(e={}),g||Object(c.a)(!1);var t,n=window.history,o=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,i=!(-1===window.navigator.userAgent.indexOf("Trident")),a=e,u=a.forceRefresh,l=void 0!==u&&u,f=a.getUserConfirmation,v=void 0===f?b:f,T=a.keyLength,E=void 0===T?6:T,S=e.basename?p(s(e.basename)):"";function C(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return S&&(i=d(i,S)),m(i,r,n)}function _(){return Math.random().toString(36).substr(2,E)}var P=y();function O(e){Object(r.a)(B,e),B.length=n.length,P.notifyListeners(B.location,B.action)}function R(e){(function(e){void 0===e.state&&navigator.userAgent.indexOf("CriOS")})(e)||M(C(e.state))}function N(){M(C(k()))}var j=!1;function M(e){if(j)j=!1,O();else{P.confirmTransitionTo(e,"POP",v,function(t){t?O({action:"POP",location:e}):function(e){var t=B.location,n=A.indexOf(t.key);-1===n&&(n=0);var r=A.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(j=!0,I(o))}(e)})}}var U=C(k()),A=[U.key];function D(e){return S+h(e)}function I(e){n.go(e)}var L=0;function F(e){1===(L+=e)&&1===e?(window.addEventListener(w,R),i&&window.addEventListener(x,N)):0===L&&(window.removeEventListener(w,R),i&&window.removeEventListener(x,N))}var z=!1;var B={length:n.length,action:"POP",location:U,createHref:D,push:function(e,t){var r=m(e,t,_(),B.location);P.confirmTransitionTo(r,"PUSH",v,function(e){if(e){var t=D(r),i=r.key,a=r.state;if(o)if(n.pushState({key:i,state:a},null,t),l)window.location.href=t;else{var u=A.indexOf(B.location.key),c=A.slice(0,-1===u?0:u+1);c.push(r.key),A=c,O({action:"PUSH",location:r})}else window.location.href=t}})},replace:function(e,t){var r=m(e,t,_(),B.location);P.confirmTransitionTo(r,"REPLACE",v,function(e){if(e){var t=D(r),i=r.key,a=r.state;if(o)if(n.replaceState({key:i,state:a},null,t),l)window.location.replace(t);else{var u=A.indexOf(B.location.key);-1!==u&&(A[u]=r.key),O({action:"REPLACE",location:r})}else window.location.replace(t)}})},go:I,goBack:function(){I(-1)},goForward:function(){I(1)},block:function(e){void 0===e&&(e=!1);var t=P.setPrompt(e);return z||(F(1),z=!0),function(){return z&&(z=!1,F(-1)),t()}},listen:function(e){var t=P.appendListener(e);return F(1),function(){F(-1),t()}}};return B}var E="hashchange",S={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+f(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:f,decodePath:s},slash:{encodePath:s,decodePath:s}};function C(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function _(e){var t=window.location.href.indexOf("#");window.location.replace(window.location.href.slice(0,t>=0?t:0)+"#"+e)}function P(e){void 0===e&&(e={}),g||Object(c.a)(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),o=n.getUserConfirmation,i=void 0===o?b:o,a=n.hashType,u=void 0===a?"slash":a,l=e.basename?p(s(e.basename)):"",f=S[u],w=f.encodePath,x=f.decodePath;function k(){var e=x(C());return l&&(e=d(e,l)),m(e)}var T=y();function P(e){Object(r.a)(z,e),z.length=t.length,T.notifyListeners(z.location,z.action)}var O=!1,R=null;function N(){var e=C(),t=w(e);if(e!==t)_(t);else{var n=k(),r=z.location;if(!O&&v(r,n))return;if(R===h(n))return;R=null,function(e){if(O)O=!1,P();else{T.confirmTransitionTo(e,"POP",i,function(t){t?P({action:"POP",location:e}):function(e){var t=z.location,n=A.lastIndexOf(h(t));-1===n&&(n=0);var r=A.lastIndexOf(h(e));-1===r&&(r=0);var o=n-r;o&&(O=!0,D(o))}(e)})}}(n)}}var j=C(),M=w(j);j!==M&&_(M);var U=k(),A=[h(U)];function D(e){t.go(e)}var I=0;function L(e){1===(I+=e)&&1===e?window.addEventListener(E,N):0===I&&window.removeEventListener(E,N)}var F=!1;var z={length:t.length,action:"POP",location:U,createHref:function(e){return"#"+w(l+h(e))},push:function(e,t){var n=m(e,void 0,void 0,z.location);T.confirmTransitionTo(n,"PUSH",i,function(e){if(e){var t=h(n),r=w(l+t);if(C()!==r){R=t,function(e){window.location.hash=e}(r);var o=A.lastIndexOf(h(z.location)),i=A.slice(0,-1===o?0:o+1);i.push(t),A=i,P({action:"PUSH",location:n})}else P()}})},replace:function(e,t){var n=m(e,void 0,void 0,z.location);T.confirmTransitionTo(n,"REPLACE",i,function(e){if(e){var t=h(n),r=w(l+t);C()!==r&&(R=t,_(r));var o=A.indexOf(h(z.location));-1!==o&&(A[o]=t),P({action:"REPLACE",location:n})}})},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},block:function(e){void 0===e&&(e=!1);var t=T.setPrompt(e);return F||(L(1),F=!0),function(){return F&&(F=!1,L(-1)),t()}},listen:function(e){var t=T.appendListener(e);return L(1),function(){L(-1),t()}}};return z}function O(e,t,n){return Math.min(Math.max(e,t),n)}function R(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,o=t.initialEntries,i=void 0===o?["/"]:o,a=t.initialIndex,u=void 0===a?0:a,l=t.keyLength,c=void 0===l?6:l,s=y();function f(e){Object(r.a)(w,e),w.length=w.entries.length,s.notifyListeners(w.location,w.action)}function d(){return Math.random().toString(36).substr(2,c)}var p=O(u,0,i.length-1),v=i.map(function(e){return m(e,void 0,"string"==typeof e?d():e.key||d())}),g=h;function b(e){var t=O(w.index+e,0,w.entries.length-1),r=w.entries[t];s.confirmTransitionTo(r,"POP",n,function(e){e?f({action:"POP",location:r,index:t}):f()})}var w={length:v.length,action:"POP",location:v[p],index:p,entries:v,createHref:g,push:function(e,t){var r=m(e,t,d(),w.location);s.confirmTransitionTo(r,"PUSH",n,function(e){if(e){var t=w.index+1,n=w.entries.slice(0);n.length>t?n.splice(t,n.length-t,r):n.push(r),f({action:"PUSH",location:r,index:t,entries:n})}})},replace:function(e,t){var r=m(e,t,d(),w.location);s.confirmTransitionTo(r,"REPLACE",n,function(e){e&&(w.entries[w.index]=r,f({action:"REPLACE",location:r}))})},go:b,goBack:function(){b(-1)},goForward:function(){b(1)},canGo:function(e){var t=w.index+e;return t>=0&&t<w.entries.length},block:function(e){return void 0===e&&(e=!1),s.setPrompt(e)},listen:function(e){return s.appendListener(e)}};return w}},function(e,t,n){e.exports=n(27)()},function(e,t,n){"use strict";n.r(t),n.d(t,"MemoryRouter",function(){return g}),n.d(t,"Prompt",function(){return w}),n.d(t,"Redirect",function(){return S}),n.d(t,"Route",function(){return R}),n.d(t,"Router",function(){return y}),n.d(t,"StaticRouter",function(){return D}),n.d(t,"Switch",function(){return I}),n.d(t,"generatePath",function(){return E}),n.d(t,"matchPath",function(){return O}),n.d(t,"withRouter",function(){return L}),n.d(t,"__RouterContext",function(){return v});var r=n(18),o=n.n(r),i=n(3),a=n(0),u=n.n(a),l=(n(6),n(5)),c=n(4),s=n(14),f=n.n(s),d=n(1),p=(n(10),n(2)),h=n(8),m=n.n(h),v=function(e){var t=o()();return t.Provider.displayName=e+".Provider",t.Consumer.displayName=e+".Consumer",t}("Router"),y=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen(function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e})),n}Object(i.a)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return u.a.createElement(v.Provider,{children:this.props.children||null,value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}})},t}(u.a.Component);var g=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=Object(l.d)(t.props),t}return Object(i.a)(t,e),t.prototype.render=function(){return u.a.createElement(y,{history:this.history,children:this.props.children})},t}(u.a.Component);var b=function(e){function t(){return e.apply(this,arguments)||this}Object(i.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},n.componentDidUpdate=function(e){this.props.onUpdate&&this.props.onUpdate.call(this,this,e)},n.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},n.render=function(){return null},t}(u.a.Component);function w(e){var t=e.message,n=e.when,r=void 0===n||n;return u.a.createElement(v.Consumer,null,function(e){if(e||Object(c.a)(!1),!r||e.staticContext)return null;var n=e.history.block;return u.a.createElement(b,{onMount:function(e){e.release=n(t)},onUpdate:function(e,r){r.message!==t&&(e.release(),e.release=n(t))},onUnmount:function(e){e.release()},message:t})})}var x={},k=1e4,T=0;function E(e,t){return void 0===e&&(e="/"),void 0===t&&(t={}),"/"===e?e:function(e){if(x[e])return x[e];var t=f.a.compile(e);return T<k&&(x[e]=t,T++),t}(e)(t,{pretty:!0})}function S(e){var t=e.computedMatch,n=e.to,r=e.push,o=void 0!==r&&r;return u.a.createElement(v.Consumer,null,function(e){e||Object(c.a)(!1);var r=e.history,i=e.staticContext,a=o?r.push:r.replace,s=Object(l.c)(t?"string"==typeof n?E(n,t.params):Object(d.a)({},n,{pathname:E(n.pathname,t.params)}):n);return i?(a(s),null):u.a.createElement(b,{onMount:function(){a(s)},onUpdate:function(e,t){Object(l.f)(t.to,s)||a(s)},to:n})})}var C={},_=1e4,P=0;function O(e,t){void 0===t&&(t={}),"string"==typeof t&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,u=void 0!==a&&a,l=n.sensitive,c=void 0!==l&&l;return[].concat(r).reduce(function(t,n){if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=C[n]||(C[n]={});if(r[e])return r[e];var o=[],i={regexp:f()(e,o,t),keys:o};return P<_&&(r[e]=i,P++),i}(n,{end:i,strict:u,sensitive:c}),o=r.regexp,a=r.keys,l=o.exec(e);if(!l)return null;var s=l[0],d=l.slice(1),p=e===s;return i&&!p?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:p,params:a.reduce(function(e,t,n){return e[t.name]=d[n],e},{})}},null)}var R=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this;return u.a.createElement(v.Consumer,null,function(t){t||Object(c.a)(!1);var n=e.props.location||t.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?O(n.pathname,e.props):t.match,o=Object(d.a)({},t,{location:n,match:r}),i=e.props,a=i.children,l=i.component,s=i.render;(Array.isArray(a)&&0===a.length&&(a=null),"function"==typeof a)&&(void 0===(a=a(o))&&(a=null));return u.a.createElement(v.Provider,{value:o},a&&!function(e){return 0===u.a.Children.count(e)}(a)?a:o.match?l?u.a.createElement(l,o):s?s(o):null:null)})},t}(u.a.Component);function N(e){return"/"===e.charAt(0)?e:"/"+e}function j(e,t){if(!e)return t;var n=N(e);return 0!==t.pathname.indexOf(n)?t:Object(d.a)({},t,{pathname:t.pathname.substr(n.length)})}function M(e){return"string"==typeof e?e:Object(l.e)(e)}function U(e){return function(){Object(c.a)(!1)}}function A(){}var D=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).handlePush=function(e){return t.navigateTo(e,"PUSH")},t.handleReplace=function(e){return t.navigateTo(e,"REPLACE")},t.handleListen=function(){return A},t.handleBlock=function(){return A},t}Object(i.a)(t,e);var n=t.prototype;return n.navigateTo=function(e,t){var n=this.props,r=n.basename,o=void 0===r?"":r,i=n.context;i.action=t,i.location=function(e,t){return e?Object(d.a)({},t,{pathname:N(e)+t.pathname}):t}(o,Object(l.c)(e)),i.url=M(i.location)},n.render=function(){var e=this.props,t=e.basename,n=void 0===t?"":t,r=e.context,o=void 0===r?{}:r,i=e.location,a=void 0===i?"/":i,c=Object(p.a)(e,["basename","context","location"]),s={createHref:function(e){return N(n+M(e))},action:"POP",location:j(n,Object(l.c)(a)),push:this.handlePush,replace:this.handleReplace,go:U(),goBack:U(),goForward:U(),listen:this.handleListen,block:this.handleBlock};return u.a.createElement(y,Object(d.a)({},c,{history:s,staticContext:o}))},t}(u.a.Component);var I=function(e){function t(){return e.apply(this,arguments)||this}return Object(i.a)(t,e),t.prototype.render=function(){var e=this;return u.a.createElement(v.Consumer,null,function(t){t||Object(c.a)(!1);var n,r,o=e.props.location||t.location;return u.a.Children.forEach(e.props.children,function(e){if(null==r&&u.a.isValidElement(e)){n=e;var i=e.props.path||e.props.from;r=i?O(o.pathname,Object(d.a)({},e.props,{path:i})):t.match}}),r?u.a.cloneElement(n,{location:o,computedMatch:r}):null})},t}(u.a.Component);function L(e){var t=function(t){var n=t.wrappedComponentRef,r=Object(p.a)(t,["wrappedComponentRef"]);return u.a.createElement(R,{children:function(t){return u.a.createElement(e,Object(d.a)({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,m()(t,e)}},function(e,t,n){"use strict";var r=n(10),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},u={};function l(e){return r.isMemo(e)?a:u[e.$$typeof]||o}u[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0};var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=p(n);o&&o!==h&&e(t,o,r)}var a=s(n);f&&(a=a.concat(f(n)));for(var u=l(t),m=l(n),v=0;v<a.length;++v){var y=a[v];if(!(i[y]||r&&r[y]||m&&m[y]||u&&u[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}return t}return t}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,u){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,u],s=0;(l=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw l.framesToPop=1,l}}},function(e,t,n){"use strict";e.exports=n(33)},function(e,t,n){"use strict";n.r(t),n.d(t,"createStore",function(){return u}),n.d(t,"combineReducers",function(){return c}),n.d(t,"bindActionCreators",function(){return f}),n.d(t,"applyMiddleware",function(){return h}),n.d(t,"compose",function(){return p}),n.d(t,"__DO_NOT_USE__ActionTypes",function(){return i});var r=n(15),o=function(){return Math.random().toString(36).substring(7).split("").join(".")},i={INIT:"@@redux/INIT"+o(),REPLACE:"@@redux/REPLACE"+o(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+o()}};function a(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function u(e,t,n){var o;if("function"==typeof t&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function");if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(u)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var l=e,c=t,s=[],f=s,d=!1;function p(){f===s&&(f=s.slice())}function h(){if(d)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return c}function m(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(d)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return p(),f.push(e),function(){if(t){if(d)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,p();var n=f.indexOf(e);f.splice(n,1)}}}function v(e){if(!a(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(d)throw new Error("Reducers may not dispatch actions.");try{d=!0,c=l(c,e)}finally{d=!1}for(var t=s=f,n=0;n<t.length;n++){(0,t[n])()}return e}return v({type:i.INIT}),(o={dispatch:v,subscribe:m,getState:h,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");l=e,v({type:i.REPLACE})}})[r.a]=function(){var e,t=m;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(h())}return n(),{unsubscribe:t(n)}}})[r.a]=function(){return this},e},o}function l(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function c(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var o=t[r];0,"function"==typeof e[o]&&(n[o]=e[o])}var a,u=Object.keys(n);try{!function(e){Object.keys(e).forEach(function(t){var n=e[t];if(void 0===n(void 0,{type:i.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:i.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+i.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')})}(n)}catch(e){a=e}return function(e,t){if(void 0===e&&(e={}),a)throw a;for(var r=!1,o={},i=0;i<u.length;i++){var c=u[i],s=n[c],f=e[c],d=s(f,t);if(void 0===d){var p=l(c,t);throw new Error(p)}o[c]=d,r=r||d!==f}return r?o:e}}function s(e,t){return function(){return t(e.apply(this,arguments))}}function f(e,t){if("function"==typeof e)return s(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var n=Object.keys(e),r={},o=0;o<n.length;o++){var i=n[o],a=e[i];"function"==typeof a&&(r[i]=s(a,t))}return r}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}function h(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){var n=e.apply(void 0,arguments),r=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},o={getState:n.getState,dispatch:function(){return r.apply(void 0,arguments)}},i=t.map(function(e){return e(o)});return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){d(e,t,n[t])})}return e}({},n,{dispatch:r=p.apply(void 0,i)(n.dispatch)})}}}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(22)},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var r=n(32);e.exports=p,e.exports.parse=i,e.exports.compile=function(e,t){return u(i(e,t))},e.exports.tokensToFunction=u,e.exports.tokensToRegExp=d;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,u="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],d=n[1],p=n.index;if(u+=e.slice(a,p),a=p+f.length,d)u+=d[1];else{var h=e[a],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];u&&(r.push(u),u="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,T="?"===b||"*"===b,E=n[2]||s,S=y||g;r.push({name:v||i++,prefix:m||"",delimiter:E,optional:T,repeat:k,partial:x,asterisk:!!w,pattern:S?c(S):w?".*":"[^"+l(E)+"]+?"})}}return a<e.length&&(u+=e.substr(a)),u&&r.push(u),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function u(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",u=n||{},l=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=u[s.name];if(null==d){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=l(d[p]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):l(d),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function l(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",u=0;u<e.length;u++){var c=e[u];if("string"==typeof c)a+=l(c);else{var d=l(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),a+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=l(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+a,f(n)),t)}function p(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(p(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return d(i(e,n),t,n)}(e,t,n)}},function(e,t,n){"use strict";(function(e,r){var o,i=n(19);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var a=Object(i.a)(o);t.a=a}).call(this,n(13),n(36)(e))},,function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var c in n=Object(arguments[l]))o.call(n,c)&&(u[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(u[a[s]]=n[a[s]])}}return u}},function(e,t,n){"use strict";t.__esModule=!0;var r=i(n(0)),o=i(n(26));function i(e){return e&&e.__esModule?e:{default:e}}t.default=r.default.createContext||o.default,e.exports=t.default},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0)),i=r(n(12)),a=r(n(25)),u=n(35),l=n(11),c=n(41),s=r(n(37)),f=r(n(38)),d=l.createStore(f.default,{},l.applyMiddleware(s.default));i.default.hydrate(o.default.createElement(c.Provider,{store:d},o.default.createElement(u.BrowserRouter,null,o.default.createElement(a.default,null))),document.getElementById("root"))},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(17),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,u=o?Symbol.for("react.fragment"):60107,l=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,i,a,u],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function k(){}function T(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=x.prototype;var E=T.prototype=new k;E.constructor=T,r(E,x.prototype),E.isPureReactComponent=!0;var S={current:null},C={current:null},_=Object.prototype.hasOwnProperty,P={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r=void 0,o={},a=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(a=""+t.key),t)_.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:i,type:e,key:a,ref:u,props:o,_owner:C.current}}function R(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var N=/\/+/g,j=[];function M(e,t,n,r){if(j.length){var o=j.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function U(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function A(e,t,n){return null==e?0:function e(t,n,r,o){var u=typeof t;"undefined"!==u&&"boolean"!==u||(t=null);var l=!1;if(null===t)l=!0;else switch(u){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case i:case a:l=!0}}if(l)return r(o,t,""===n?"."+D(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+D(u=t[c],c);l+=e(u,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(u=t.next()).done;)l+=e(u=u.value,s=n+D(u,c++),r,o);else"object"===u&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return l}(e,"",t,n)}function D(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,function(e){return e}):null!=e&&(R(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(N,"$&/")+"/"),A(e,L,t=M(t,i,r,o)),U(t)}function z(){var e=S.current;return null===e&&g("321"),e}var B={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;A(e,I,t=M(null,null,t,n)),U(t)},count:function(e){return A(e,function(){return null},null)},toArray:function(e){var t=[];return F(e,t,null,function(e){return e}),t},only:function(e){return R(e)||g("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:T,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return z().useCallback(e,t)},useContext:function(e,t){return z().useContext(e,t)},useEffect:function(e,t){return z().useEffect(e,t)},useImperativeHandle:function(e,t,n){return z().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return z().useLayoutEffect(e,t)},useMemo:function(e,t){return z().useMemo(e,t)},useReducer:function(e,t,n){return z().useReducer(e,t,n)},useRef:function(e){return z().useRef(e)},useState:function(e){return z().useState(e)},Fragment:u,StrictMode:l,Suspense:h,createElement:O,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,a=r({},e.props),u=e.key,l=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,c=C.current),void 0!==t.key&&(u=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)_.call(t,o)&&!P.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:u,ref:l,props:a,_owner:c}},createFactory:function(e){var t=O.bind(null,e);return t.type=e,t},isValidElement:R,version:"16.8.6",unstable_ConcurrentMode:d,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:C,assign:r}},W={default:B},$=W&&B||W;e.exports=$.default||$},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(17),i=n(23);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,u){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,o,i,a,u],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var u=!1,l=null,c=!1,s=null,f={onError:function(e){u=!0,l=e}};function d(e,t,n,r,o,i,a,c,s){u=!1,l=null,function(e,t,n,r,o,i,a,u,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var p=null,h={};function m(){if(p)for(var e in h){var t=h[e],n=p.indexOf(e);if(-1<n||a("96",e),!y[n])for(var r in t.extractEvents||a("97",e),y[n]=t,n=t.eventTypes){var o=void 0,i=n[r],u=t,l=r;g.hasOwnProperty(l)&&a("99",l),g[l]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&v(c[o],u,l);o=!0}else i.registrationName?(v(i.registrationName,u,l),o=!0):o=!1;o||a("98",r,e)}}}function v(e,t,n){b[e]&&a("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var y=[],g={},b={},w={},x=null,k=null,T=null;function E(e,t,n){var r=e.type||"unknown-event";e.currentTarget=T(n),function(e,t,n,r,o,i,f,p,h){if(d.apply(this,arguments),u){if(u){var m=l;u=!1,l=null}else a("198"),m=void 0;c||(c=!0,s=m)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function C(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var _=null;function P(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)E(e,t[r],n[r]);else t&&E(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var O={injectEventPluginOrder:function(e){p&&a("101"),p=Array.prototype.slice.call(e),m()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&a("102",t),h[t]=r,n=!0)}n&&m()}};function R(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function N(e){if(null!==e&&(_=S(_,e)),e=_,_=null,e&&(C(e,P),_&&a("95"),c))throw e=s,c=!1,s=null,e}var j=Math.random().toString(36).slice(2),M="__reactInternalInstance$"+j,U="__reactEventHandlers$"+j;function A(e){if(e[M])return e[M];for(;!e[M];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[M]).tag||6===e.tag?e:null}function D(e){return!(e=e[M])||5!==e.tag&&6!==e.tag?null:e}function I(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function L(e){return e[U]||null}function F(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function z(e,t,n){(t=R(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function B(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=F(t);for(t=n.length;0<t--;)z(n[t],"captured",e);for(t=0;t<n.length;t++)z(n[t],"bubbled",e)}}function W(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=R(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function $(e){e&&e.dispatchConfig.registrationName&&W(e._targetInst,null,e)}function H(e){C(e,B)}var V=!("undefined"==typeof window||!window.document||!window.document.createElement);function q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var K={animationend:q("Animation","AnimationEnd"),animationiteration:q("Animation","AnimationIteration"),animationstart:q("Animation","AnimationStart"),transitionend:q("Transition","TransitionEnd")},Q={},Y={};function X(e){if(Q[e])return Q[e];if(!K[e])return e;var t,n=K[e];for(t in n)if(n.hasOwnProperty(t)&&t in Y)return Q[e]=n[t];return e}V&&(Y=document.createElement("div").style,"AnimationEvent"in window||(delete K.animationend.animation,delete K.animationiteration.animation,delete K.animationstart.animation),"TransitionEvent"in window||delete K.transitionend.transition);var G=X("animationend"),J=X("animationiteration"),Z=X("animationstart"),ee=X("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function ue(){return!1}function le(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:ue,this.isPropagationStopped=ue,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(le.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:ue,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ue,this._dispatchInstances=this._dispatchListeners=null}}),le.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},le.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(le);var de=le.extend({data:null}),pe=le.extend({data:null}),he=[9,13,27,32],me=V&&"CompositionEvent"in window,ve=null;V&&"documentMode"in document&&(ve=document.documentMode);var ye=V&&"TextEvent"in window&&!ve,ge=V&&(!me||ve&&8<ve&&11>=ve),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function ke(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Te(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ee=!1;var Se={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(me)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Ee?ke(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(Ee||o!==we.compositionStart?o===we.compositionEnd&&Ee&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Ee=!0)),o=de.getPooled(o,t,n,r),i?o.data=i:null!==(i=Te(n))&&(o.data=i),H(o),i=o):i=null,(e=ye?function(e,t){switch(e){case"compositionend":return Te(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}(e,n):function(e,t){if(Ee)return"compositionend"===e||!me&&ke(e,t)?(e=ie(),oe=re=ne=null,Ee=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(we.beforeInput,t,n,r)).data=e,H(t)):t=null,null===i?t:null===t?i:[i,t]}},Ce=null,_e=null,Pe=null;function Oe(e){if(e=k(e)){"function"!=typeof Ce&&a("280");var t=x(e.stateNode);Ce(e.stateNode,e.type,t)}}function Re(e){_e?Pe?Pe.push(e):Pe=[e]:_e=e}function Ne(){if(_e){var e=_e,t=Pe;if(Pe=_e=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function je(e,t){return e(t)}function Me(e,t,n){return e(t,n)}function Ue(){}var Ae=!1;function De(e,t){if(Ae)return e(t);Ae=!0;try{return je(e,t)}finally{Ae=!1,(null!==_e||null!==Pe)&&(Ue(),Ne())}}var Ie={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Le(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ie[e.type]:"textarea"===t}function Fe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ze(e){if(!V)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function Be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function We(e){e._valueTracker||(e._valueTracker=function(e){var t=Be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function $e(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var He=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;He.hasOwnProperty("ReactCurrentDispatcher")||(He.ReactCurrentDispatcher={current:null});var Ve=/^(.*)[\\\/]/,qe="function"==typeof Symbol&&Symbol.for,Ke=qe?Symbol.for("react.element"):60103,Qe=qe?Symbol.for("react.portal"):60106,Ye=qe?Symbol.for("react.fragment"):60107,Xe=qe?Symbol.for("react.strict_mode"):60108,Ge=qe?Symbol.for("react.profiler"):60114,Je=qe?Symbol.for("react.provider"):60109,Ze=qe?Symbol.for("react.context"):60110,et=qe?Symbol.for("react.concurrent_mode"):60111,tt=qe?Symbol.for("react.forward_ref"):60112,nt=qe?Symbol.for("react.suspense"):60113,rt=qe?Symbol.for("react.memo"):60115,ot=qe?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function ut(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ye:return"Fragment";case Qe:return"Portal";case Ge:return"Profiler";case Xe:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return ut(e.type);case ot:if(e=1===e._status?e._result:null)return ut(e)}return null}function lt(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ut(e.type);n=null,r&&(n=ut(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Ve,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},dt={};function pt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new pt(e,5,!1,e.toLowerCase(),null)});var mt=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(dt,e)||!st.call(ft,e)&&(ct.test(e)?dt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function kt(e,t){xt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Et(e,t.type,n):t.hasOwnProperty("defaultValue")&&Et(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Tt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Et(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(mt,vt);ht[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(mt,vt);ht[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(mt,vt);ht[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){ht[e]=new pt(e,1,!1,e.toLowerCase(),null)});var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ct(e,t,n){return(e=le.getPooled(St.change,e,t,n)).type="change",Re(n),H(e),e}var _t=null,Pt=null;function Ot(e){N(e)}function Rt(e){if($e(I(e)))return e}function Nt(e,t){if("change"===e)return t}var jt=!1;function Mt(){_t&&(_t.detachEvent("onpropertychange",Ut),Pt=_t=null)}function Ut(e){"value"===e.propertyName&&Rt(Pt)&&De(Ot,e=Ct(Pt,e,Fe(e)))}function At(e,t,n){"focus"===e?(Mt(),Pt=n,(_t=t).attachEvent("onpropertychange",Ut)):"blur"===e&&Mt()}function Dt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Rt(Pt)}function It(e,t){if("click"===e)return Rt(t)}function Lt(e,t){if("input"===e||"change"===e)return Rt(t)}V&&(jt=ze("input")&&(!document.documentMode||9<document.documentMode));var Ft={eventTypes:St,_isInputEventSupported:jt,extractEvents:function(e,t,n,r){var o=t?I(t):window,i=void 0,a=void 0,u=o.nodeName&&o.nodeName.toLowerCase();if("select"===u||"input"===u&&"file"===o.type?i=Nt:Le(o)?jt?i=Lt:(i=Dt,a=At):(u=o.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=It),i&&(i=i(e,t)))return Ct(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Et(o,"number",o.value)}},zt=le.extend({view:null,detail:null}),Bt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Wt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Bt[e])&&!!t[e]}function $t(){return Wt}var Ht=0,Vt=0,qt=!1,Kt=!1,Qt=zt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:$t,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ht;return Ht=e.screenX,qt?"mousemove"===e.type?e.screenX-t:0:(qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Vt;return Vt=e.screenY,Kt?"mousemove"===e.type?e.screenY-t:0:(Kt=!0,0)}}),Yt=Qt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Gt={eventTypes:Xt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?A(t):null):i=null,i===t)return null;var a=void 0,u=void 0,l=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Qt,u=Xt.mouseLeave,l=Xt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Yt,u=Xt.pointerLeave,l=Xt.pointerEnter,c="pointer");var s=null==i?o:I(i);if(o=null==t?o:I(t),(e=a.getPooled(u,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(l,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=F(a))c++;for(a=0,l=o;l;l=F(l))a++;for(;0<c-a;)t=F(t),c--;for(;0<a-c;)o=F(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=F(t),o=F(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=F(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=F(r);for(r=0;r<t.length;r++)W(t[r],"bubbled",e);for(r=i.length;0<r--;)W(i[r],"captured",n);return[e,n]}};function Jt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Jt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Jt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var u=o.child;u;){if(u===n)return nn(o),e;if(u===r)return nn(o),t;u=u.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{u=!1;for(var l=o.child;l;){if(l===n){u=!0,n=o,r=i;break}if(l===r){u=!0,r=o,n=i;break}l=l.sibling}if(!u){for(l=i.child;l;){if(l===n){u=!0,n=i,r=o;break}if(l===r){u=!0,r=i,n=o;break}l=l.sibling}u||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=le.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=le.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),un=zt.extend({relatedTarget:null});function ln(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=zt.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=ln(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:$t,charCode:function(e){return"keypress"===e.type?ln(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ln(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),dn=Qt.extend({dataTransfer:null}),pn=zt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:$t}),hn=le.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),mn=Qt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[G,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),vn.forEach(function(e){bn(e,!1)});var wn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===ln(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=un;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Qt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=dn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case G:case J:case Z:e=on;break;case ee:e=hn;break;case"scroll":e=zt;break;case"wheel":e=mn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Yt;break;default:e=le}return H(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,kn=[];function Tn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=A(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Fe(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,u=0;u<y.length;u++){var l=y[u];l&&(l=l.extractEvents(r,t,i,o))&&(a=S(a,l))}N(a)}}var En=!0;function Sn(e,t){if(!t)return null;var n=(xn(e)?_n:Pn).bind(null,e);t.addEventListener(e,n,!1)}function Cn(e,t){if(!t)return null;var n=(xn(e)?_n:Pn).bind(null,e);t.addEventListener(e,n,!0)}function _n(e,t){Me(Pn,e,t)}function Pn(e,t){if(En){var n=Fe(t);if(null===(n=A(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),kn.length){var r=kn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{De(Tn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>kn.length&&kn.push(e)}}}var On={},Rn=0,Nn="_reactListenersID"+(""+Math.random()).slice(2);function jn(e){return Object.prototype.hasOwnProperty.call(e,Nn)||(e[Nn]=Rn++,On[e[Nn]]={}),On[e[Nn]]}function Mn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Un(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function An(e,t){var n,r=Un(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Un(r)}}function Dn(){for(var e=window,t=Mn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Mn((e=t.contentWindow).document)}return t}function In(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Ln(e){var t=Dn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&In(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,i=Math.min(r.start,o);r=void 0===r.end?i:Math.min(r.end,o),!e.extend&&i>r&&(o=r,r=i,i=o),o=An(n,i);var a=An(n,r);o&&a&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Fn=V&&"documentMode"in document&&11>=document.documentMode,zn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Bn=null,Wn=null,$n=null,Hn=!1;function Vn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Hn||null==Bn||Bn!==Mn(n)?null:("selectionStart"in(n=Bn)&&In(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},$n&&en($n,n)?null:($n=n,(e=le.getPooled(zn.select,Wn,e,t)).type="select",e.target=Bn,H(e),e))}var qn={eventTypes:zn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=jn(i),o=w.onSelect;for(var a=0;a<o.length;a++){var u=o[a];if(!i.hasOwnProperty(u)||!i[u]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?I(t):window,e){case"focus":(Le(i)||"true"===i.contentEditable)&&(Bn=i,Wn=t,$n=null);break;case"blur":$n=Wn=Bn=null;break;case"mousedown":Hn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hn=!1,Vn(n,r);case"selectionchange":if(Fn)break;case"keydown":case"keyup":return Vn(n,r)}return null}};function Kn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Qn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Yn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Xn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Gn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Jn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}O.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=L,k=D,T=I,O.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Gt,ChangeEventPlugin:Ft,SelectEventPlugin:qn,BeforeInputEventPlugin:Se});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr,rr=void 0,or=(nr=function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return nr(e,t)})}:nr);function ir(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ur=["Webkit","ms","Moz","O"];function lr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function cr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=lr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){ur.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function fr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function dr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=jn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Cn("scroll",e);break;case"focus":case"blur":Cn("focus",e),Cn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":ze(o)&&Cn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function hr(){}var mr=null,vr=null;function yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,wr="function"==typeof clearTimeout?clearTimeout:void 0,xr=i.unstable_scheduleCallback,kr=i.unstable_cancelCallback;function Tr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Er(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Sr=[],Cr=-1;function _r(e){0>Cr||(e.current=Sr[Cr],Sr[Cr]=null,Cr--)}function Pr(e,t){Sr[++Cr]=e.current,e.current=t}var Or={},Rr={current:Or},Nr={current:!1},jr=Or;function Mr(e,t){var n=e.type.contextTypes;if(!n)return Or;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Ur(e){return null!=(e=e.childContextTypes)}function Ar(e){_r(Nr),_r(Rr)}function Dr(e){_r(Nr),_r(Rr)}function Ir(e,t,n){Rr.current!==Or&&a("168"),Pr(Rr,t),Pr(Nr,n)}function Lr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",ut(t)||"Unknown",i);return o({},n,r)}function Fr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Or,jr=Rr.current,Pr(Rr,t),Pr(Nr,Nr.current),!0}function zr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Lr(e,t,jr),r.__reactInternalMemoizedMergedChildContext=t,_r(Nr),_r(Rr),Pr(Rr,t)):_r(Nr),Pr(Nr,n)}var Br=null,Wr=null;function $r(e){return function(t){try{return e(t)}catch(e){}}}function Hr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Vr(e,t,n,r){return new Hr(e,t,n,r)}function qr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Kr(e,t){var n=e.alternate;return null===n?((n=Vr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Qr(e,t,n,r,o,i){var u=2;if(r=e,"function"==typeof e)qr(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case Ye:return Yr(n.children,o,i,t);case et:return Xr(n,3|o,i,t);case Xe:return Xr(n,2|o,i,t);case Ge:return(e=Vr(12,n,t,4|o)).elementType=Ge,e.type=Ge,e.expirationTime=i,e;case nt:return(e=Vr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:u=10;break e;case Ze:u=9;break e;case tt:u=11;break e;case rt:u=14;break e;case ot:u=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=Vr(u,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Yr(e,t,n,r){return(e=Vr(7,e,r,t)).expirationTime=n,e}function Xr(e,t,n,r){return e=Vr(8,e,r,t),t=0==(1&t)?Xe:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Gr(e,t,n){return(e=Vr(6,e,null,t)).expirationTime=n,e}function Jr(e,t,n){return(t=Vr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Zr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),no(t,e)}function eo(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),no(t,e)}function to(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function no(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function ro(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var oo=(new r.Component).refs;function io(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=ku(),o=Xi(r=Ya(r,e));o.payload=t,null!=n&&(o.callback=n),$a(),Ji(e,o),Ja(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=ku(),o=Xi(r=Ya(r,e));o.tag=Hi,o.payload=t,null!=n&&(o.callback=n),$a(),Ji(e,o),Ja(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=ku(),r=Xi(n=Ya(n,e));r.tag=Vi,null!=t&&(r.callback=t),$a(),Ji(e,r),Ja(e,n)}};function uo(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function lo(e,t,n){var r=!1,o=Or,i=t.contextType;return"object"==typeof i&&null!==i?i=Wi(i):(o=Ur(t)?jr:Rr.current,i=(r=null!=(r=t.contextTypes))?Mr(e,o):Or),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function co(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function so(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=oo;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Wi(i):(i=Ur(t)?jr:Rr.current,o.context=Mr(e,i)),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(io(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(na(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var fo=Array.isArray;function po(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("309"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===oo&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function ho(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function mo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Kr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Gr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=po(e,t,n),r.return=e,r):((r=Qr(n.type,n.key,n.props,null,e.mode,r)).ref=po(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Jr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Yr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Gr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ke:return(n=Qr(t.type,t.key,t.props,null,e.mode,n)).ref=po(e,null,t),n.return=e,n;case Qe:return(t=Jr(t,e.mode,n)).return=e,t}if(fo(t)||at(t))return(t=Yr(t,e.mode,n,null)).return=e,t;ho(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ke:return n.key===o?n.type===Ye?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Qe:return n.key===o?s(e,t,n,r):null}if(fo(n)||at(n))return null!==o?null:f(e,t,n,r,null);ho(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ke:return e=e.get(null===r.key?n:r.key)||null,r.type===Ye?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Qe:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(fo(r)||at(r))return f(t,e=e.get(n)||null,r,o,null);ho(t,r)}return null}function m(o,a,u,l){for(var c=null,s=null,f=a,m=a=0,v=null;null!==f&&m<u.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(o,f,u[m],l);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===u.length)return n(o,f),c;if(null===f){for(;m<u.length;m++)(f=d(o,u[m],l))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<u.length;m++)(v=h(f,o,m,u[m],l))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach(function(e){return t(o,e)}),c}function v(o,u,l,c){var s=at(l);"function"!=typeof s&&a("150"),null==(l=s.call(l))&&a("151");for(var f=s=null,m=u,v=u=0,y=null,g=l.next();null!==m&&!g.done;v++,g=l.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(o,m,g.value,c);if(null===b){m||(m=y);break}e&&m&&null===b.alternate&&t(o,m),u=i(b,u,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;v++,g=l.next())null!==(g=d(o,g.value,c))&&(u=i(g,u,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;v++,g=l.next())null!==(g=h(m,o,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),u=i(g,u,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach(function(e){return t(o,e)}),s}return function(e,r,i,l){var c="object"==typeof i&&null!==i&&i.type===Ye&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Ke:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Ye:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Ye?i.props.children:i.props)).ref=po(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Ye?((r=Yr(i.props.children,e.mode,l,i.key)).return=e,e=r):((l=Qr(i.type,i.key,i.props,null,e.mode,l)).ref=po(e,r,i),l.return=e,e=l)}return u(e);case Qe:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Jr(i,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Gr(i,e.mode,l)).return=e,e=r),u(e);if(fo(i))return m(e,r,i,l);if(at(i))return v(e,r,i,l);if(s&&ho(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:a("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var vo=mo(!0),yo=mo(!1),go={},bo={current:go},wo={current:go},xo={current:go};function ko(e){return e===go&&a("174"),e}function To(e,t){Pr(xo,t),Pr(wo,e),Pr(bo,go);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}_r(bo),Pr(bo,t)}function Eo(e){_r(bo),_r(wo),_r(xo)}function So(e){ko(xo.current);var t=ko(bo.current),n=tr(t,e.type);t!==n&&(Pr(wo,e),Pr(bo,n))}function Co(e){wo.current===e&&(_r(bo),_r(wo))}var _o=0,Po=2,Oo=4,Ro=8,No=16,jo=32,Mo=64,Uo=128,Ao=He.ReactCurrentDispatcher,Do=0,Io=null,Lo=null,Fo=null,zo=null,Bo=null,Wo=null,$o=0,Ho=null,Vo=0,qo=!1,Ko=null,Qo=0;function Yo(){a("321")}function Xo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Jt(e[n],t[n]))return!1;return!0}function Go(e,t,n,r,o,i){if(Do=i,Io=t,Fo=null!==e?e.memoizedState:null,Ao.current=null===Fo?si:fi,t=n(r,o),qo){do{qo=!1,Qo+=1,Fo=null!==e?e.memoizedState:null,Wo=zo,Ho=Bo=Lo=null,Ao.current=fi,t=n(r,o)}while(qo);Ko=null,Qo=0}return Ao.current=ci,(e=Io).memoizedState=zo,e.expirationTime=$o,e.updateQueue=Ho,e.effectTag|=Vo,e=null!==Lo&&null!==Lo.next,Do=0,Wo=Bo=zo=Fo=Lo=Io=null,$o=0,Ho=null,Vo=0,e&&a("300"),t}function Jo(){Ao.current=ci,Do=0,Wo=Bo=zo=Fo=Lo=Io=null,$o=0,Ho=null,Vo=0,qo=!1,Ko=null,Qo=0}function Zo(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Bo?zo=Bo=e:Bo=Bo.next=e,Bo}function ei(){if(null!==Wo)Wo=(Bo=Wo).next,Fo=null!==(Lo=Fo)?Lo.next:null;else{null===Fo&&a("310");var e={memoizedState:(Lo=Fo).memoizedState,baseState:Lo.baseState,queue:Lo.queue,baseUpdate:Lo.baseUpdate,next:null};Bo=null===Bo?zo=e:Bo.next=e,Fo=Lo.next}return Bo}function ti(e,t){return"function"==typeof t?t(e):t}function ni(e){var t=ei(),n=t.queue;if(null===n&&a("311"),n.lastRenderedReducer=e,0<Qo){var r=n.dispatch;if(null!==Ko){var o=Ko.get(n);if(void 0!==o){Ko.delete(n);var i=t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return Jt(i,t.memoizedState)||(ki=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var u=t.baseUpdate;if(i=t.baseState,null!==u?(null!==r&&(r.next=null),r=u.next):r=null!==r?r.next:null,null!==r){var l=o=null,c=r,s=!1;do{var f=c.expirationTime;f<Do?(s||(s=!0,l=u,o=i),f>$o&&($o=f)):i=c.eagerReducer===e?c.eagerState:e(i,c.action),u=c,c=c.next}while(null!==c&&c!==r);s||(l=u,o=i),Jt(i,t.memoizedState)||(ki=!0),t.memoizedState=i,t.baseUpdate=l,t.baseState=o,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function ri(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Ho?(Ho={lastEffect:null}).lastEffect=e.next=e:null===(t=Ho.lastEffect)?Ho.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Ho.lastEffect=e),e}function oi(e,t,n,r){var o=Zo();Vo|=e,o.memoizedState=ri(t,n,void 0,void 0===r?null:r)}function ii(e,t,n,r){var o=ei();r=void 0===r?null:r;var i=void 0;if(null!==Lo){var a=Lo.memoizedState;if(i=a.destroy,null!==r&&Xo(r,a.deps))return void ri(_o,n,i,r)}Vo|=e,o.memoizedState=ri(t,n,i,r)}function ai(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ui(){}function li(e,t,n){25>Qo||a("301");var r=e.alternate;if(e===Io||null!==r&&r===Io)if(qo=!0,e={expirationTime:Do,action:n,eagerReducer:null,eagerState:null,next:null},null===Ko&&(Ko=new Map),void 0===(n=Ko.get(t)))Ko.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{$a();var o=ku(),i={expirationTime:o=Ya(o,e),action:n,eagerReducer:null,eagerState:null,next:null},u=t.last;if(null===u)i.next=i;else{var l=u.next;null!==l&&(i.next=l),u.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,Jt(s,c))return}catch(e){}Ja(e,o)}}var ci={readContext:Wi,useCallback:Yo,useContext:Yo,useEffect:Yo,useImperativeHandle:Yo,useLayoutEffect:Yo,useMemo:Yo,useReducer:Yo,useRef:Yo,useState:Yo,useDebugValue:Yo},si={readContext:Wi,useCallback:function(e,t){return Zo().memoizedState=[e,void 0===t?null:t],e},useContext:Wi,useEffect:function(e,t){return oi(516,Uo|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oi(4,Oo|jo,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oi(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Zo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Zo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=li.bind(null,Io,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Zo().memoizedState=e},useState:function(e){var t=Zo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ti,lastRenderedState:e}).dispatch=li.bind(null,Io,e),[t.memoizedState,e]},useDebugValue:ui},fi={readContext:Wi,useCallback:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Wi,useEffect:function(e,t){return ii(516,Uo|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ii(4,Oo|jo,ai.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ii(4,Oo|jo,e,t)},useMemo:function(e,t){var n=ei();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Xo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ni,useRef:function(){return ei().memoizedState},useState:function(e){return ni(ti)},useDebugValue:ui},di=null,pi=null,hi=!1;function mi(e,t){var n=Vr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function vi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function yi(e){if(hi){var t=pi;if(t){var n=t;if(!vi(e,t)){if(!(t=Tr(n))||!vi(e,t))return e.effectTag|=2,hi=!1,void(di=e);mi(di,n)}di=e,pi=Er(t)}else e.effectTag|=2,hi=!1,di=e}}function gi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;di=e}function bi(e){if(e!==di)return!1;if(!hi)return gi(e),hi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gr(t,e.memoizedProps))for(t=pi;t;)mi(e,t),t=Tr(t);return gi(e),pi=di?Tr(e.stateNode):null,!0}function wi(){pi=di=null,hi=!1}var xi=He.ReactCurrentOwner,ki=!1;function Ti(e,t,n,r){t.child=null===e?yo(t,null,n,r):vo(t,e.child,n,r)}function Ei(e,t,n,r,o){n=n.render;var i=t.ref;return Bi(t,o),r=Go(e,t,n,r,i,o),null===e||ki?(t.effectTag|=1,Ti(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Mi(e,t,o))}function Si(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||qr(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Qr(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ci(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Mi(e,t,i):(t.effectTag|=1,(e=Kr(a,r)).ref=t.ref,e.return=t,t.child=e)}function Ci(e,t,n,r,o,i){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(ki=!1,o<i)?Mi(e,t,i):Pi(e,t,n,r,i)}function _i(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Pi(e,t,n,r,o){var i=Ur(n)?jr:Rr.current;return i=Mr(t,i),Bi(t,o),n=Go(e,t,n,r,i,o),null===e||ki?(t.effectTag|=1,Ti(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Mi(e,t,o))}function Oi(e,t,n,r,o){if(Ur(n)){var i=!0;Fr(t)}else i=!1;if(Bi(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),lo(t,n,r),so(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,u=t.memoizedProps;a.props=u;var l=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=Wi(c):c=Mr(t,c=Ur(n)?jr:Rr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&co(t,a,r,c),Ki=!1;var d=t.memoizedState;l=a.state=d;var p=t.updateQueue;null!==p&&(na(t,p,r,a,o),l=t.memoizedState),u!==r||d!==l||Nr.current||Ki?("function"==typeof s&&(io(t,n,s,r),l=t.memoizedState),(u=Ki||uo(t,n,u,r,d,l,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=c,r=u):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,u=t.memoizedProps,a.props=t.type===t.elementType?u:ro(t.type,u),l=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=Wi(c):c=Mr(t,c=Ur(n)?jr:Rr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==c)&&co(t,a,r,c),Ki=!1,l=t.memoizedState,d=a.state=l,null!==(p=t.updateQueue)&&(na(t,p,r,a,o),d=t.memoizedState),u!==r||l!==d||Nr.current||Ki?("function"==typeof s&&(io(t,n,s,r),d=t.memoizedState),(s=Ki||uo(t,n,u,r,l,d,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return Ri(e,t,n,r,i,o)}function Ri(e,t,n,r,o,i){_i(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&zr(t,n,!1),Mi(e,t,i);r=t.stateNode,xi.current=t;var u=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=vo(t,e.child,null,i),t.child=vo(t,null,u,i)):Ti(e,t,u,i),t.memoizedState=r.state,o&&zr(t,n,!0),t.child}function Ni(e){var t=e.stateNode;t.pendingContext?Ir(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ir(0,t.context,!1),To(e,t.containerInfo)}function ji(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;if(null===e)if(a){var u=o.fallback;e=Yr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Yr(u,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=yo(t,null,o.children,n);else null!==e.memoizedState?(u=(r=e.child).sibling,a?(n=o.fallback,o=Kr(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=Kr(u,n,u.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=vo(t,r.child,o.children,n)):(u=e.child,a?(a=o.fallback,(o=Yr(null,r,0,null)).child=u,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Yr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=vo(t,u,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=i,t.child=n,r}function Mi(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Kr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Kr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ui(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Nr.current)ki=!0;else if(r<n){switch(ki=!1,t.tag){case 3:Ni(t),wi();break;case 5:So(t);break;case 1:Ur(t.type)&&Fr(t);break;case 4:To(t,t.stateNode.containerInfo);break;case 10:Fi(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?ji(e,t,n):null!==(t=Mi(e,t,n))?t.sibling:null}return Mi(e,t,n)}}else ki=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Mr(t,Rr.current);if(Bi(t,n),o=Go(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Jo(),Ur(r)){var i=!0;Fr(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var u=r.getDerivedStateFromProps;"function"==typeof u&&io(t,r,u,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,so(t,r,e,n),t=Ri(null,t,r,!0,i,n)}else t.tag=0,Ti(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return qr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=ro(e,i),u=void 0,o){case 0:u=Pi(null,t,e,i,n);break;case 1:u=Oi(null,t,e,i,n);break;case 11:u=Ei(null,t,e,i,n);break;case 14:u=Si(null,t,e,ro(e.type,i),r,n);break;default:a("306",e,"")}return u;case 0:return r=t.type,o=t.pendingProps,Pi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oi(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 3:return Ni(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,na(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(wi(),t=Mi(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(pi=Er(t.stateNode.containerInfo),di=t,o=hi=!0),o?(t.effectTag|=2,t.child=yo(t,null,r,n)):(Ti(e,t,r,n),wi()),t=t.child),t;case 5:return So(t),null===e&&yi(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,u=o.children,gr(r,o)?u=null:null!==i&&gr(r,i)&&(t.effectTag|=16),_i(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Ti(e,t,u,n),t=t.child),t;case 6:return null===e&&yi(t),null;case 13:return ji(e,t,n);case 4:return To(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=vo(t,null,r,n):Ti(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ei(e,t,r,o=t.elementType===r?o:ro(r,o),n);case 7:return Ti(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ti(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,u=t.memoizedProps,Fi(t,i=o.value),null!==u){var l=u.value;if(0===(i=Jt(l,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,i):1073741823))){if(u.children===o.children&&!Nr.current){t=Mi(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var c=l.contextDependencies;if(null!==c){u=l.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===l.tag&&((s=Xi(n)).tag=Vi,Ji(l,s)),l.expirationTime<n&&(l.expirationTime=n),null!==(s=l.alternate)&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=l.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==d&&d.childExpirationTime<s&&(d.childExpirationTime=s);else{if(!(null!==d&&d.childExpirationTime<s))break;d.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else u=10===l.tag&&l.type===t.type?null:l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===t){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}}Ti(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,Bi(t,n),r=r(o=Wi(o,i.unstable_observedBits)),t.effectTag|=1,Ti(e,t,r,n),t.child;case 14:return i=ro(o=t.type,t.pendingProps),Si(e,t,o,i=ro(o.type,i),r,n);case 15:return Ci(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:ro(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ur(r)?(e=!0,Fr(t)):e=!1,Bi(t,n),lo(t,r,o),so(t,r,o,n),Ri(null,t,r,!0,e,n)}a("156")}var Ai={current:null},Di=null,Ii=null,Li=null;function Fi(e,t){var n=e.type._context;Pr(Ai,n._currentValue),n._currentValue=t}function zi(e){var t=Ai.current;_r(Ai),e.type._context._currentValue=t}function Bi(e,t){Di=e,Li=Ii=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(ki=!0),e.contextDependencies=null}function Wi(e,t){return Li!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Li=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ii?(null===Di&&a("308"),Ii=t,Di.contextDependencies={first:t,expirationTime:0}):Ii=Ii.next=t),e._currentValue}var $i=0,Hi=1,Vi=2,qi=3,Ki=!1;function Qi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Yi(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Xi(e){return{expirationTime:e,tag:$i,payload:null,callback:null,next:null,nextEffect:null}}function Gi(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Ji(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Qi(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Qi(e.memoizedState),o=n.updateQueue=Qi(n.memoizedState)):r=e.updateQueue=Yi(o):null===o&&(o=n.updateQueue=Yi(r));null===o||r===o?Gi(r,t):null===r.lastUpdate||null===o.lastUpdate?(Gi(r,t),Gi(o,t)):(Gi(r,t),o.lastUpdate=t)}function Zi(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Qi(e.memoizedState):ea(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ea(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Yi(t)),t}function ta(e,t,n,r,i,a){switch(n.tag){case Hi:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case qi:e.effectTag=-2049&e.effectTag|64;case $i:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case Vi:Ki=!0}return r}function na(e,t,n,r,o){Ki=!1;for(var i=(t=ea(e,t)).baseState,a=null,u=0,l=t.firstUpdate,c=i;null!==l;){var s=l.expirationTime;s<o?(null===a&&(a=l,i=c),u<s&&(u=s)):(c=ta(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(s=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f<o?(null===s&&(s=l,null===a&&(i=c)),u<f&&(u=f)):(c=ta(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=u,e.memoizedState=c}function ra(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),oa(t.firstEffect,n),t.firstEffect=t.lastEffect=null,oa(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function oa(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function ia(e,t){return{value:e,source:t,stack:lt(t)}}function aa(e){e.effectTag|=4}var ua=void 0,la=void 0,ca=void 0,sa=void 0;ua=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},la=function(){},ca=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var u=t.stateNode;switch(ko(bo.current),e=null,n){case"input":a=bt(u,a),r=bt(u,r),e=[];break;case"option":a=Kn(u,a),r=Kn(u,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Yn(u,a),r=Yn(u,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(u.onclick=hr)}fr(n,r),u=n=void 0;var l=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(u in c)c.hasOwnProperty(u)&&(l||(l={}),l[u]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(l||(l={}),l[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(l||(l={}),l[u]=s[u])}else l||(e||(e=[]),e.push(n,l)),l=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&pr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}l&&(e=e||[]).push("style",l),i=e,(t.updateQueue=i)&&aa(t)}},sa=function(e,t,n,r){n!==r&&aa(t)};var fa="function"==typeof WeakSet?WeakSet:Set;function da(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=lt(n)),null!==n&&ut(n.type),t=t.value,null!==e&&1===e.tag&&ut(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function pa(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Qa(e,t)}else t.current=null}function ha(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==_o){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==_o&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function ma(e){switch("function"==typeof Wr&&Wr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){Qa(o,e)}}n=n.next}while(n!==t)}break;case 1:if(pa(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Qa(e,t)}break;case 5:pa(e);break;case 4:ga(e)}}function va(e){return 5===e.tag||3===e.tag||4===e.tag}function ya(e){e:{for(var t=e.return;null!==t;){if(va(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(ir(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||va(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,u=o.stateNode,l=n;8===i.nodeType?i.parentNode.insertBefore(u,l):i.insertBefore(u,l)}else t.insertBefore(o.stateNode,n);else r?(u=t,l=o.stateNode,8===u.nodeType?(i=u.parentNode).insertBefore(l,u):(i=u).appendChild(l),null!=(u=u._reactRootContainer)||null!==i.onclick||(i.onclick=hr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function ga(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,u=i;;)if(ma(u),null!==u.child&&4!==u.tag)u.child.return=u,u=u.child;else{if(u===i)break;for(;null===u.sibling;){if(null===u.return||u.return===i)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}o?(i=r,u=t.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(ma(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function ba(e,t){switch(t.tag){case 0:case 11:case 14:case 15:ha(Oo,Ro,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&function(e,t,n,r,o){e[U]=o,"input"===n&&"radio"===o.type&&null!=o.name&&xt(e,o),dr(n,r),r=dr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],u=t[i+1];"style"===a?cr(e,u):"dangerouslySetInnerHTML"===a?or(e,u):"children"===a?ir(e,u):yt(e,a,u,r)}switch(n){case"input":kt(e,o);break;case"textarea":Gn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Qn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Qn(e,!!o.multiple,o.defaultValue,!0):Qn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,i,o,e,r)}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=ku())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=lr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var u=t.stateNode;null===u&&(u=t.stateNode=new fa),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Ya(t=ku(),e),null!==(e=Ga(e,t))&&(Zr(e,t),0!==(t=e.expirationTime)&&Tu(e,t))}.bind(null,t,e);u.has(e)||(u.add(e),e.then(n,n))})}break;case 17:break;default:a("163")}}var wa="function"==typeof WeakMap?WeakMap:Map;function xa(e,t,n){(n=Xi(n)).tag=qi,n.payload={element:null};var r=t.value;return n.callback=function(){ju(r),da(e,t)},n}function ka(e,t,n){(n=Xi(n)).tag=qi;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===La?La=new Set([this]):La.add(this));var n=t.value,o=t.stack;da(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Ta(e){switch(e.tag){case 1:Ur(e.type)&&Ar();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Eo(),Dr(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return Co(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return Eo(),null;case 10:return zi(e),null;default:return null}}var Ea=He.ReactCurrentDispatcher,Sa=He.ReactCurrentOwner,Ca=1073741822,_a=!1,Pa=null,Oa=null,Ra=0,Na=-1,ja=!1,Ma=null,Ua=!1,Aa=null,Da=null,Ia=null,La=null;function Fa(){if(null!==Pa)for(var e=Pa.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Ar();break;case 3:Eo(),Dr();break;case 5:Co(t);break;case 4:Eo();break;case 10:zi(t)}e=e.return}Oa=null,Ra=0,Na=-1,ja=!1,Pa=null}function za(){for(;null!==Ma;){var e=Ma.effectTag;if(16&e&&ir(Ma.stateNode,""),128&e){var t=Ma.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:ya(Ma),Ma.effectTag&=-3;break;case 6:ya(Ma),Ma.effectTag&=-3,ba(Ma.alternate,Ma);break;case 4:ba(Ma.alternate,Ma);break;case 8:ga(e=Ma),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Ma=Ma.nextEffect}}function Ba(){for(;null!==Ma;){if(256&Ma.effectTag)e:{var e=Ma.alternate,t=Ma;switch(t.tag){case 0:case 11:case 15:ha(Po,_o,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ro(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}Ma=Ma.nextEffect}}function Wa(e,t){for(;null!==Ma;){var n=Ma.effectTag;if(36&n){var r=Ma.alternate,o=Ma,i=t;switch(o.tag){case 0:case 11:case 15:ha(No,jo,o);break;case 1:var u=o.stateNode;if(4&o.effectTag)if(null===r)u.componentDidMount();else{var l=o.elementType===o.type?r.memoizedProps:ro(o.type,r.memoizedProps);u.componentDidUpdate(l,r.memoizedState,u.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ra(0,r,u);break;case 3:if(null!==(r=o.updateQueue)){if(u=null,null!==o.child)switch(o.child.tag){case 5:u=o.child.stateNode;break;case 1:u=o.child.stateNode}ra(0,r,u)}break;case 5:i=o.stateNode,null===r&&4&o.effectTag&&yr(o.type,o.memoizedProps)&&i.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}128&n&&(null!==(o=Ma.ref)&&(i=Ma.stateNode,"function"==typeof o?o(i):o.current=i)),512&n&&(Aa=e),Ma=Ma.nextEffect}}function $a(){null!==Da&&kr(Da),null!==Ia&&Ia()}function Ha(e,t){Ua=_a=!0,e.current===t&&a("177");var n=e.pendingCommitExpirationTime;0===n&&a("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Zr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Zr(e,t)):t>n&&Zr(e,t)}no(0,e)}(e,o>r?o:r),Sa.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=En,vr=function(){var e=Dn();if(In(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,a=-1,u=-1,l=0,c=0,s=e,f=null;t:for(;;){for(var d;s!==t||0!==r&&3!==s.nodeType||(a=i+r),s!==o||0!==n&&3!==s.nodeType||(u=i+n),3===s.nodeType&&(i+=s.nodeValue.length),null!==(d=s.firstChild);)f=s,s=d;for(;;){if(s===e)break t;if(f===t&&++l===r&&(a=i),f===o&&++c===n&&(u=i),null!==(d=s.nextSibling))break;f=(s=f).parentNode}s=d}t=-1===a||-1===u?null:{start:a,end:u}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),En=!1,Ma=r;null!==Ma;){o=!1;var u=void 0;try{Ba()}catch(e){o=!0,u=e}o&&(null===Ma&&a("178"),Qa(Ma,u),null!==Ma&&(Ma=Ma.nextEffect))}for(Ma=r;null!==Ma;){o=!1,u=void 0;try{za()}catch(e){o=!0,u=e}o&&(null===Ma&&a("178"),Qa(Ma,u),null!==Ma&&(Ma=Ma.nextEffect))}for(Ln(vr),vr=null,En=!!mr,mr=null,e.current=t,Ma=r;null!==Ma;){o=!1,u=void 0;try{Wa(e,n)}catch(e){o=!0,u=e}o&&(null===Ma&&a("178"),Qa(Ma,u),null!==Ma&&(Ma=Ma.nextEffect))}if(null!==r&&null!==Aa){var l=function(e,t){Ia=Da=Aa=null;var n=ou;ou=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var i=t;ha(Uo,_o,i),ha(_o,Mo,i)}catch(e){r=!0,o=e}r&&Qa(t,o)}t=t.nextEffect}while(null!==t);ou=n,0!==(n=e.expirationTime)&&Tu(e,n),su||ou||Pu(1073741823,!1)}.bind(null,e,r);Da=i.unstable_runWithPriority(i.unstable_NormalPriority,function(){return xr(l)}),Ia=l}_a=Ua=!1,"function"==typeof Br&&Br(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(La=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Va(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Pa=e;e:{var i=t,u=Ra,l=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ur(t.type)&&Ar();break;case 3:Eo(),Dr(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null!==i&&null!==i.child||(bi(t),t.effectTag&=-3),la(t);break;case 5:Co(t);var c=ko(xo.current);if(u=t.type,null!==i&&null!=t.stateNode)ca(i,t,u,l,c),i.ref!==t.ref&&(t.effectTag|=128);else if(l){var s=ko(bo.current);if(bi(t)){i=(l=t).stateNode;var f=l.type,d=l.memoizedProps,p=c;switch(i[M]=l,i[U]=d,u=void 0,c=f){case"iframe":case"object":Sn("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],i);break;case"source":Sn("error",i);break;case"img":case"image":case"link":Sn("error",i),Sn("load",i);break;case"form":Sn("reset",i),Sn("submit",i);break;case"details":Sn("toggle",i);break;case"input":wt(i,d),Sn("invalid",i),pr(p,"onChange");break;case"select":i._wrapperState={wasMultiple:!!d.multiple},Sn("invalid",i),pr(p,"onChange");break;case"textarea":Xn(i,d),Sn("invalid",i),pr(p,"onChange")}for(u in fr(c,d),f=null,d)d.hasOwnProperty(u)&&(s=d[u],"children"===u?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(u)&&null!=s&&pr(p,u));switch(c){case"input":We(i),Tt(i,d,!0);break;case"textarea":We(i),Jn(i);break;case"select":case"option":break;default:"function"==typeof d.onClick&&(i.onclick=hr)}u=f,l.updateQueue=u,(l=null!==u)&&aa(t)}else{d=t,p=u,i=l,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=er(p)),s===Zn.html?"script"===p?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof i.is?f=f.createElement(p,{is:i.is}):(f=f.createElement(p),"select"===p&&(p=f,i.multiple?p.multiple=!0:i.size&&(p.size=i.size))):f=f.createElementNS(s,p),(i=f)[M]=d,i[U]=l,ua(i,t,!1,!1),p=i;var h=c,m=dr(f=u,d=l);switch(f){case"iframe":case"object":Sn("load",p),c=d;break;case"video":case"audio":for(c=0;c<te.length;c++)Sn(te[c],p);c=d;break;case"source":Sn("error",p),c=d;break;case"img":case"image":case"link":Sn("error",p),Sn("load",p),c=d;break;case"form":Sn("reset",p),Sn("submit",p),c=d;break;case"details":Sn("toggle",p),c=d;break;case"input":wt(p,d),c=bt(p,d),Sn("invalid",p),pr(h,"onChange");break;case"option":c=Kn(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},c=o({},d,{value:void 0}),Sn("invalid",p),pr(h,"onChange");break;case"textarea":Xn(p,d),c=Yn(p,d),Sn("invalid",p),pr(h,"onChange");break;default:c=d}fr(f,c),s=void 0;var v=f,y=p,g=c;for(s in g)if(g.hasOwnProperty(s)){var w=g[s];"style"===s?cr(y,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&or(y,w):"children"===s?"string"==typeof w?("textarea"!==v||""!==w)&&ir(y,w):"number"==typeof w&&ir(y,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&pr(h,s):null!=w&&yt(y,s,w,m))}switch(f){case"input":We(p),Tt(p,d,!1);break;case"textarea":We(p),Jn(p);break;case"option":null!=d.value&&p.setAttribute("value",""+gt(d.value));break;case"select":(c=p).multiple=!!d.multiple,null!=(p=d.value)?Qn(c,!!d.multiple,p,!1):null!=d.defaultValue&&Qn(c,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof c.onClick&&(p.onclick=hr)}(l=yr(u,l))&&aa(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?sa(i,t,i.memoizedProps,l):("string"!=typeof l&&(null===t.stateNode&&a("166")),i=ko(xo.current),ko(bo.current),bi(t)?(u=(l=t).stateNode,i=l.memoizedProps,u[M]=l,(l=u.nodeValue!==i)&&aa(t)):(u=t,(l=(9===i.nodeType?i:i.ownerDocument).createTextNode(l))[M]=t,u.stateNode=l));break;case 11:break;case 13:if(l=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=u,Pa=t;break e}l=null!==l,u=null!==i&&null!==i.memoizedState,null!==i&&!l&&u&&(null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(l||u)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Eo(),la(t);break;case 10:zi(t);break;case 9:case 14:break;case 17:Ur(t.type)&&Ar();break;case 18:break;default:a("156")}Pa=null}if(t=e,1===Ra||1!==t.childExpirationTime){for(l=0,u=t.child;null!==u;)(i=u.expirationTime)>l&&(l=i),(c=u.childExpirationTime)>l&&(l=c),u=u.sibling;t.childExpirationTime=l}if(null!==Pa)return Pa;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Ta(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function qa(e){var t=Ui(e.alternate,e,Ra);return e.memoizedProps=e.pendingProps,null===t&&(t=Va(e)),Sa.current=null,t}function Ka(e,t){_a&&a("243"),$a(),_a=!0;var n=Ea.current;Ea.current=ci;var r=e.nextExpirationTimeToWorkOn;r===Ra&&e===Oa&&null!==Pa||(Fa(),Ra=r,Pa=Kr((Oa=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Pa&&!Cu();)Pa=qa(Pa);else for(;null!==Pa;)Pa=qa(Pa)}catch(t){if(Li=Ii=Di=null,Jo(),null===Pa)o=!0,ju(t);else{null===Pa&&a("271");var i=Pa,u=i.return;if(null!==u){e:{var l=e,c=u,s=i,f=t;if(u=Ra,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var d=f;f=c;var p=-1,h=-1;do{if(13===f.tag){var m=f.alternate;if(null!==m&&null!==(m=m.memoizedState)){h=10*(1073741822-m.timedOutAt);break}"number"==typeof(m=f.pendingProps.maxDuration)&&(0>=m?p=0:(-1===p||m<p)&&(p=m))}f=f.return}while(null!==f);f=c;do{if((m=13===f.tag)&&(m=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),m){if(null===(c=f.updateQueue)?((c=new Set).add(d),f.updateQueue=c):c.add(d),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((u=Xi(1073741823)).tag=Vi,Ji(s,u))),s.expirationTime=1073741823;break e}c=u;var v=(s=l).pingCache;null===v?(v=s.pingCache=new wa,m=new Set,v.set(d,m)):void 0===(m=v.get(d))&&(m=new Set,v.set(d,m)),m.has(c)||(m.add(c),s=Xa.bind(null,s,d,c),d.then(s,s)),-1===p?l=1073741823:(-1===h&&(h=10*(1073741822-to(l,u))-5e3),l=h+p),0<=l&&Na<l&&(Na=l),f.effectTag|=2048,f.expirationTime=u;break e}f=f.return}while(null!==f);f=Error((ut(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+lt(s))}ja=!0,f=ia(f,s),l=c;do{switch(l.tag){case 3:l.effectTag|=2048,l.expirationTime=u,Zi(l,u=xa(l,f,u));break e;case 1:if(p=f,h=l.type,s=l.stateNode,0==(64&l.effectTag)&&("function"==typeof h.getDerivedStateFromError||null!==s&&"function"==typeof s.componentDidCatch&&(null===La||!La.has(s)))){l.effectTag|=2048,l.expirationTime=u,Zi(l,u=ka(l,p,u));break e}}l=l.return}while(null!==l)}Pa=Va(i);continue}o=!0,ju(t)}}break}if(_a=!1,Ea.current=n,Li=Ii=Di=null,Jo(),o)Oa=null,e.finishedWork=null;else if(null!==Pa)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&a("281"),Oa=null,ja){if(o=e.latestPendingTime,i=e.latestSuspendedTime,u=e.latestPingedTime,0!==o&&o<r||0!==i&&i<r||0!==u&&u<r)return eo(e,r),void xu(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void xu(e,n,r,t,-1)}t&&-1!==Na?(eo(e,r),(t=10*(1073741822-to(e,r)))<Na&&(Na=t),t=10*(1073741822-ku()),t=Na-t,xu(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Qa(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===La||!La.has(r)))return Ji(n,e=ka(n,e=ia(t,e),1073741823)),void Ja(n,1073741823);break;case 3:return Ji(n,e=xa(n,e=ia(t,e),1073741823)),void Ja(n,1073741823)}n=n.return}3===e.tag&&(Ji(e,n=xa(e,n=ia(t,e),1073741823)),Ja(e,1073741823))}function Ya(e,t){var n=i.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(_a&&!Ua)r=Ra;else{switch(n){case i.unstable_ImmediatePriority:r=1073741823;break;case i.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case i.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case i.unstable_LowPriority:case i.unstable_IdlePriority:r=1;break;default:a("313")}null!==Oa&&r===Ra&&--r}return n===i.unstable_UserBlockingPriority&&(0===uu||r<uu)&&(uu=r),r}function Xa(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Oa&&Ra===n?Oa=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),no(n,e),0!==(n=e.expirationTime)&&Tu(e,n)))}function Ga(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Ja(e,t){null!==(e=Ga(e,t))&&(!_a&&0!==Ra&&t>Ra&&Fa(),Zr(e,t),_a&&!Ua&&Oa===e||Tu(e,e.expirationTime),yu>vu&&(yu=0,a("185")))}function Za(e,t,n,r,o){return i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var eu=null,tu=null,nu=0,ru=void 0,ou=!1,iu=null,au=0,uu=0,lu=!1,cu=null,su=!1,fu=!1,du=null,pu=i.unstable_now(),hu=1073741822-(pu/10|0),mu=hu,vu=50,yu=0,gu=null;function bu(){hu=1073741822-((i.unstable_now()-pu)/10|0)}function wu(e,t){if(0!==nu){if(t<nu)return;null!==ru&&i.unstable_cancelCallback(ru)}nu=t,e=i.unstable_now()-pu,ru=i.unstable_scheduleCallback(_u,{timeout:10*(1073741822-t)-e})}function xu(e,t,n,r,o){e.expirationTime=r,0!==o||Cu()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bu(),mu=hu,Ou(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function ku(){return ou?mu:(Eu(),0!==au&&1!==au||(bu(),mu=hu),mu)}function Tu(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===tu?(eu=tu=e,e.nextScheduledRoot=e):(tu=tu.nextScheduledRoot=e).nextScheduledRoot=eu):t>e.expirationTime&&(e.expirationTime=t),ou||(su?fu&&(iu=e,au=1073741823,Ru(e,1073741823,!1)):1073741823===t?Pu(1073741823,!1):wu(e,t))}function Eu(){var e=0,t=null;if(null!==tu)for(var n=tu,r=eu;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===tu)&&a("244"),r===r.nextScheduledRoot){eu=tu=r.nextScheduledRoot=null;break}if(r===eu)eu=o=r.nextScheduledRoot,tu.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===tu){(tu=n).nextScheduledRoot=eu,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===tu)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}iu=t,au=e}var Su=!1;function Cu(){return!!Su||!!i.unstable_shouldYield()&&(Su=!0)}function _u(){try{if(!Cu()&&null!==eu){bu();var e=eu;do{var t=e.expirationTime;0!==t&&hu<=t&&(e.nextExpirationTimeToWorkOn=hu),e=e.nextScheduledRoot}while(e!==eu)}Pu(0,!0)}finally{Su=!1}}function Pu(e,t){if(Eu(),t)for(bu(),mu=hu;null!==iu&&0!==au&&e<=au&&!(Su&&hu>au);)Ru(iu,au,hu>au),Eu(),bu(),mu=hu;else for(;null!==iu&&0!==au&&e<=au;)Ru(iu,au,!1),Eu();if(t&&(nu=0,ru=null),0!==au&&wu(iu,au),yu=0,gu=null,null!==du)for(e=du,du=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){lu||(lu=!0,cu=e)}}if(lu)throw e=cu,cu=null,lu=!1,e}function Ou(e,t){ou&&a("253"),iu=e,au=t,Ru(e,t,!1),Pu(1073741823,!1)}function Ru(e,t,n){if(ou&&a("245"),ou=!0,n){var r=e.finishedWork;null!==r?Nu(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Ka(e,n),null!==(r=e.finishedWork)&&(Cu()?e.finishedWork=r:Nu(e,r,t)))}else null!==(r=e.finishedWork)?Nu(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,wr(r)),Ka(e,n),null!==(r=e.finishedWork)&&Nu(e,r,t));ou=!1}function Nu(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===du?du=[r]:du.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===gu?yu++:(gu=e,yu=0),i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){Ha(e,t)})}function ju(e){null===iu&&a("246"),iu.expirationTime=0,lu||(lu=!0,cu=e)}function Mu(e,t){var n=su;su=!0;try{return e(t)}finally{(su=n)||ou||Pu(1073741823,!1)}}function Uu(e,t){if(su&&!fu){fu=!0;try{return e(t)}finally{fu=!1}}return e(t)}function Au(e,t,n){su||ou||0===uu||(Pu(uu,!1),uu=0);var r=su;su=!0;try{return i.unstable_runWithPriority(i.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(su=r)||ou||Pu(1073741823,!1)}}function Du(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(Ur(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);a("171"),u=void 0}if(1===n.tag){var l=n.type;if(Ur(l)){n=Lr(n,l,u);break e}}n=u}else n=Or;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Xi(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),$a(),Ji(i,o),Ja(i,r),r}function Iu(e,t,n,r){var o=t.current;return Du(e,t,n,o=Ya(ku(),o),r)}function Lu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fu(e){var t=1073741822-25*(1+((1073741822-ku()+500)/25|0));t>=Ca&&(t=Ca-1),this._expirationTime=Ca=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function zu(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Bu(e,t,n){e={current:t=Vr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Wu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $u(e,t,n,r,o){var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=Lu(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Bu(e,!1,t)}(n,r),"function"==typeof o){var u=o;o=function(){var e=Lu(i._internalRoot);u.call(e)}}Uu(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return Lu(i._internalRoot)}function Hu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Wu(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Qe,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ce=function(e,t,n){switch(t){case"input":if(kt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=L(r);o||a("90"),$e(r),kt(r,o)}}}break;case"textarea":Gn(e,n);break;case"select":null!=(t=n.value)&&Qn(e,!!n.multiple,t,!1)}},Fu.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new zu;return Du(e,t,null,n,r._onCommit),r},Fu.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Fu.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ou(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Fu.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},zu.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},zu.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Bu.prototype.render=function(e,t){var n=this._internalRoot,r=new zu;return null!==(t=void 0===t?null:t)&&r.then(t),Iu(e,n,null,r._onCommit),r},Bu.prototype.unmount=function(e){var t=this._internalRoot,n=new zu;return null!==(e=void 0===e?null:e)&&n.then(e),Iu(null,t,null,n._onCommit),n},Bu.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new zu;return null!==(n=void 0===n?null:n)&&o.then(n),Iu(t,r,e,o._onCommit),o},Bu.prototype.createBatch=function(){var e=new Fu(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},je=Mu,Me=Au,Ue=function(){ou||0===uu||(Pu(uu,!1),uu=0)};var Vu={createPortal:Hu,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Wu(t)||a("200"),$u(null,e,t,!0,n)},render:function(e,t,n){return Wu(t)||a("200"),$u(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Wu(n)||a("200"),(null==e||void 0===e._reactInternalFiber)&&a("38"),$u(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Wu(e)||a("40"),!!e._reactRootContainer&&(Uu(function(){$u(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Hu.apply(void 0,arguments)},unstable_batchedUpdates:Mu,unstable_interactiveUpdates:Au,flushSync:function(e,t){ou&&a("187");var n=su;su=!0;try{return Za(e,t)}finally{su=n,Pu(1073741823,!1)}},unstable_createRoot:function(e,t){return Wu(e)||a("299","unstable_createRoot"),new Bu(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=su;su=!0;try{Za(e)}finally{(su=t)||ou||Pu(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[D,I,L,O.injectEventPluginsByName,g,H,function(e){C(e,$)},Re,Ne,Pn,N]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Br=$r(function(e){return t.onCommitFiberRoot(n,e)}),Wr=$r(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:He.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:A,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var qu={default:Vu},Ku=qu&&Vu||qu;e.exports=Ku.default||Ku},function(e,t,n){"use strict";e.exports=n(24)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,a=-1,u=!1,l=!1;function c(){if(!u){var e=n.expirationTime;l?T():l=!0,k(d,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,u=a;o=e,a=t;try{var l=r()}finally{o=i,a=u}if("function"==typeof l)if(l={callback:l,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=l.next=l.previous=l;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=l,c()),(t=r.previous).next=r.previous=l,l.next=r,l.previous=t}}function f(){if(-1===i&&null!==n&&1===n.priorityLevel){u=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{u=!1,null!==n?c():l=!1}}}function d(e){u=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{s()}while(null!==n&&n.expirationTime<=i)}else if(null!==n)do{s()}while(null!==n&&!E())}finally{u=!1,r=o,null!==n?c():l=!1,f()}}var p,h,m=Date,v="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){p=g(function(t){y(h),e(t)}),h=v(function(){b(p),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return m.now()};var k,T,E,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var C=S._schedMock;k=C[0],T=C[1],E=C[2],t.unstable_now=C[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var _=null,P=function(e){if(null!==_)try{_(e)}finally{_=null}};k=function(e){null!==_?setTimeout(k,0,e):(_=e,setTimeout(P,0,!1))},T=function(){_=null},E=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var O=null,R=!1,N=-1,j=!1,M=!1,U=0,A=33,D=33;E=function(){return U<=t.unstable_now()};var I=new MessageChannel,L=I.port2;I.port1.onmessage=function(){R=!1;var e=O,n=N;O=null,N=-1;var r=t.unstable_now(),o=!1;if(0>=U-r){if(!(-1!==n&&n<=r))return j||(j=!0,w(F)),O=e,void(N=n);o=!0}if(null!==e){M=!0;try{e(o)}finally{M=!1}}};var F=function(e){if(null!==O){w(F);var t=e-U+D;t<D&&A<D?(8>t&&(t=8),D=t<A?A:t):A=t,U=e+D,R||(R=!0,L.postMessage(void 0))}else j=!1};k=function(e,t){O=e,N=t,M||0>t?L.postMessage(void 0):j||(j=!0,w(F))},T=function(){O=null,R=!1,N=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,a=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=a,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,a=i;o=n,i=t.unstable_now();try{return e()}finally{o=r,i=a,f()}},t.unstable_scheduleCallback=function(e,r){var a=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=a+r.timeout;else switch(o){case 1:r=a+-1;break;case 2:r=a+250;break;case 5:r=a+1073741823;break;case 4:r=a+1e4;break;default:r=a+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{a=null;var u=n;do{if(u.expirationTime>r){a=u;break}u=u.next}while(u!==n);null===a?a=n:a===n&&(n=e,c()),(r=a.previous).next=a.previous=e,e.next=a,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,a=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=a,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<a||E())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(13))},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0)),i=n(7),a=r(n(34)),u=r(n(49));t.default=function(){return o.default.createElement(i.Switch,null,o.default.createElement(i.Route,{exact:!0,path:"/",component:a.default}),o.default.createElement(i.Route,{path:"/users",component:u.default}))}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(0),o=(a(r),a(n(6))),i=a(n(29));a(n(30));function a(e){return e&&e.__esModule?e:{default:e}}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var s=1073741823;t.default=function(e,t){var n,a,f="__create-react-context-"+(0,i.default)()+"__",d=function(e){function n(){var t,r,o,i;u(this,n);for(var a=arguments.length,c=Array(a),s=0;s<a;s++)c[s]=arguments[s];return t=r=l(this,e.call.apply(e,[this].concat(c))),r.emitter=(o=r.props.value,i=[],{on:function(e){i.push(e)},off:function(e){i=i.filter(function(t){return t!==e})},get:function(){return o},set:function(e,t){o=e,i.forEach(function(e){return e(o,t)})}}),l(r,t)}return c(n,e),n.prototype.getChildContext=function(){var e;return(e={})[f]=this.emitter,e},n.prototype.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n=this.props.value,r=e.value,o=void 0;((i=n)===(a=r)?0!==i||1/i==1/a:i!=i&&a!=a)?o=0:(o="function"==typeof t?t(n,r):s,0!=(o|=0)&&this.emitter.set(e.value,o))}var i,a},n.prototype.render=function(){return this.props.children},n}(r.Component);d.childContextTypes=((n={})[f]=o.default.object.isRequired,n);var p=function(t){function n(){var e,r;u(this,n);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return e=r=l(this,t.call.apply(t,[this].concat(i))),r.state={value:r.getValue()},r.onUpdate=function(e,t){0!=((0|r.observedBits)&t)&&r.setState({value:r.getValue()})},l(r,e)}return c(n,t),n.prototype.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?s:t},n.prototype.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?s:e},n.prototype.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},n.prototype.getValue=function(){return this.context[f]?this.context[f].get():e},n.prototype.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return p.contextTypes=((a={})[f]=o.default.object,a),{Provider:d,Consumer:p}},e.exports=t.default},function(e,t,n){"use strict";var r=n(28);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";(function(t){var n="__global_unique_id__";e.exports=function(){return t[n]=(t[n]||0)+1}}).call(this,n(13))},function(e,t,n){"use strict";var r=n(31);e.exports=r},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,u=r?Symbol.for("react.strict_mode"):60108,l=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,h=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116;function y(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case a:case l:case u:case h:return e;default:switch(e=e&&e.$$typeof){case s:case p:case c:return e;default:return t}}case v:case m:case i:return t}}}function g(e){return y(e)===d}t.typeOf=y,t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=v,t.Memo=m,t.Portal=i,t.Profiler=l,t.StrictMode=u,t.Suspense=h,t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===l||e===u||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p)},t.isAsyncMode=function(e){return g(e)||y(e)===f},t.isConcurrentMode=g,t.isContextConsumer=function(e){return y(e)===s},t.isContextProvider=function(e){return y(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return y(e)===p},t.isFragment=function(e){return y(e)===a},t.isLazy=function(e){return y(e)===v},t.isMemo=function(e){return y(e)===m},t.isPortal=function(e){return y(e)===i},t.isProfiler=function(e){return y(e)===l},t.isStrictMode=function(e){return y(e)===u},t.isSuspense=function(e){return y(e)===h}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0));t.default=function(){return o.default.createElement("div",null,o.default.createElement("h1",null,"I am Home!!!"),o.default.createElement("button",{onClick:function(){return console.log("yoooo")}},"Click Me!"))}},function(e,t,n){"use strict";n.r(t),n.d(t,"BrowserRouter",function(){return f}),n.d(t,"HashRouter",function(){return d}),n.d(t,"Link",function(){return p}),n.d(t,"NavLink",function(){return h});var r=n(3),o=n(0),i=n.n(o),a=n(7);n.d(t,"MemoryRouter",function(){return a.MemoryRouter}),n.d(t,"Prompt",function(){return a.Prompt}),n.d(t,"Redirect",function(){return a.Redirect}),n.d(t,"Route",function(){return a.Route}),n.d(t,"Router",function(){return a.Router}),n.d(t,"StaticRouter",function(){return a.StaticRouter}),n.d(t,"Switch",function(){return a.Switch}),n.d(t,"generatePath",function(){return a.generatePath}),n.d(t,"matchPath",function(){return a.matchPath}),n.d(t,"withRouter",function(){return a.withRouter}),n.d(t,"__RouterContext",function(){return a.__RouterContext});var u=n(5),l=(n(6),n(1)),c=n(2),s=n(4),f=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=Object(u.a)(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(a.Router,{history:this.history,children:this.props.children})},t}(i.a.Component);var d=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=Object(u.b)(t.props),t}return Object(r.a)(t,e),t.prototype.render=function(){return i.a.createElement(a.Router,{history:this.history,children:this.props.children})},t}(i.a.Component);var p=function(e){function t(){return e.apply(this,arguments)||this}Object(r.a)(t,e);var n=t.prototype;return n.handleClick=function(e,t){(this.props.onClick&&this.props.onClick(e),e.defaultPrevented||0!==e.button||this.props.target&&"_self"!==this.props.target||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))||(e.preventDefault(),(this.props.replace?t.replace:t.push)(this.props.to))},n.render=function(){var e=this,t=this.props,n=t.innerRef,r=(t.replace,t.to),o=Object(c.a)(t,["innerRef","replace","to"]);return i.a.createElement(a.__RouterContext.Consumer,null,function(t){t||Object(s.a)(!1);var a="string"==typeof r?Object(u.c)(r,null,null,t.location):r,c=a?t.history.createHref(a):"";return i.a.createElement("a",Object(l.a)({},o,{onClick:function(n){return e.handleClick(n,t.history)},href:c,ref:n}))})},t}(i.a.Component);function h(e){var t=e["aria-current"],n=void 0===t?"page":t,r=e.activeClassName,o=void 0===r?"active":r,u=e.activeStyle,s=e.className,f=e.exact,d=e.isActive,h=e.location,m=e.strict,v=e.style,y=e.to,g=Object(c.a)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","strict","style","to"]),b="object"==typeof y?y.pathname:y,w=b&&b.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1");return i.a.createElement(a.Route,{path:w,exact:f,strict:m,location:h,children:function(e){var t=e.location,r=e.match,a=!!(d?d(r,t):r),c=a?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter(function(e){return e}).join(" ")}(s,o):s,f=a?Object(l.a)({},v,u):v;return i.a.createElement(p,Object(l.a)({"aria-current":a&&n||null,className:c,style:f,to:y},g))}})}},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";function r(e){return function(t){var n=t.dispatch,r=t.getState;return function(t){return function(o){return"function"==typeof o?o(n,r,e):t(o)}}}}n.r(t);var o=r();o.withExtraArgument=r,t.default=o},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=n(11),i=r(n(39)),a=o.combineReducers({users:i.default});t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(40);t.default=function(e,t){switch(void 0===e&&(e=[]),t.type){case r.FETCH_USERS:return t.payload.data;default:return e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FETCH_USERS="FETCH_USERS"},function(e,t,n){"use strict";n.r(t);var r=n(3),o=n(0),i=n.n(o),a=n(6),u=n.n(a),l=i.a.createContext(null);var c=function(e){e()},s=function(){return c},f=null,d={notify:function(){}};var p=function(){function e(e,t){this.store=e,this.parentSub=t,this.unsubscribe=null,this.listeners=d,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var t=e.prototype;return t.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},t.notifyNestedSubs=function(){this.listeners.notify()},t.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},t.isSubscribed=function(){return Boolean(this.unsubscribe)},t.trySubscribe=function(){var e,t,n;this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=(e=s(),t=[],n=[],{clear:function(){n=f,t=f},notify:function(){var r=t=n;e(function(){for(var e=0;e<r.length;e++)r[e]()})},get:function(){return n},subscribe:function(e){var r=!0;return n===t&&(n=t.slice()),n.push(e),function(){r&&t!==f&&(r=!1,n===t&&(n=t.slice()),n.splice(n.indexOf(e),1))}}}))},t.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=d)},e}(),h=function(e){function t(t){var n;n=e.call(this,t)||this;var r=t.store;n.notifySubscribers=n.notifySubscribers.bind(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(n));var o=new p(r);return o.onStateChange=n.notifySubscribers,n.state={store:r,subscription:o},n.previousState=r.getState(),n}Object(r.a)(t,e);var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this.state.subscription.trySubscribe(),this.previousState!==this.props.store.getState()&&this.state.subscription.notifyNestedSubs()},n.componentWillUnmount=function(){this.unsubscribe&&this.unsubscribe(),this.state.subscription.tryUnsubscribe(),this._isMounted=!1},n.componentDidUpdate=function(e){if(this.props.store!==e.store){this.state.subscription.tryUnsubscribe();var t=new p(this.props.store);t.onStateChange=this.notifySubscribers,this.setState({store:this.props.store,subscription:t})}},n.notifySubscribers=function(){this.state.subscription.notifyNestedSubs()},n.render=function(){var e=this.props.context||l;return i.a.createElement(e.Provider,{value:this.state},this.props.children)},t}(o.Component);h.propTypes={store:u.a.shape({subscribe:u.a.func.isRequired,dispatch:u.a.func.isRequired,getState:u.a.func.isRequired}),context:u.a.object,children:u.a.any};var m=h,v=n(1),y=n(2),g=n(8),b=n.n(g),w=n(9),x=n.n(w),k=n(10),T=[],E=[null,null];function S(e,t){var n=e[1];return[t.payload,n+1]}var C=function(){return[null,0]},_="undefined"!=typeof window?o.useLayoutEffect:o.useEffect;function P(e,t){void 0===t&&(t={});var n=t,r=n.getDisplayName,a=void 0===r?function(e){return"ConnectAdvanced("+e+")"}:r,u=n.methodName,c=void 0===u?"connectAdvanced":u,s=n.renderCountProp,f=void 0===s?void 0:s,d=n.shouldHandleStateChanges,h=void 0===d||d,m=n.storeKey,g=void 0===m?"store":m,w=n.withRef,P=void 0!==w&&w,O=n.forwardRef,R=void 0!==O&&O,N=n.context,j=void 0===N?l:N,M=Object(y.a)(n,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"]);x()(void 0===f,"renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension"),x()(!P,"withRef is removed. To access the wrapped instance, use a ref on the connected component");x()("store"===g,"storeKey has been removed and does not do anything. To use a custom Redux store for specific components, create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect");var U=j;return function(t){var n=t.displayName||t.name||"Component",r=a(n),u=Object(v.a)({},M,{getDisplayName:a,methodName:c,renderCountProp:f,shouldHandleStateChanges:h,storeKey:g,displayName:r,wrappedComponentName:n,WrappedComponent:t}),l=M.pure;var s=l?o.useMemo:function(e){return e()};function d(n){var a=Object(o.useMemo)(function(){return[n.context,n.forwardedRef,Object(y.a)(n,["context","forwardedRef"])]},[n]),l=a[0],c=a[1],f=a[2],d=Object(o.useMemo)(function(){return l&&l.Consumer&&Object(k.isContextConsumer)(i.a.createElement(l.Consumer,null))?l:U},[l,U]),m=Object(o.useContext)(d),g=Boolean(n.store),b=Boolean(m)&&Boolean(m.store);x()(g||b,'Could not find "store" in the context of "'+r+'". Either wrap the root component in a <Provider>, or pass a custom React context provider to <Provider> and the corresponding React context consumer to '+r+" in connect options.");var w=n.store||m.store,P=Object(o.useMemo)(function(){return function(t){return e(t.dispatch,u)}(w)},[w]),O=Object(o.useMemo)(function(){if(!h)return E;var e=new p(w,g?null:m.subscription),t=e.notifyNestedSubs.bind(e);return[e,t]},[w,g,m]),R=O[0],N=O[1],j=Object(o.useMemo)(function(){return g?m:Object(v.a)({},m,{subscription:R})},[g,m,R]),M=Object(o.useReducer)(S,T,C),A=M[0][0],D=M[1];if(A&&A.error)throw A.error;var I=Object(o.useRef)(),L=Object(o.useRef)(f),F=Object(o.useRef)(),z=Object(o.useRef)(!1),B=s(function(){return F.current&&f===L.current?F.current:P(w.getState(),f)},[w,A,f]);_(function(){L.current=f,I.current=B,z.current=!1,F.current&&(F.current=null,N())}),_(function(){if(h){var e=!1,t=null,n=function(){if(!e){var n,r,o=w.getState();try{n=P(o,L.current)}catch(e){r=e,t=e}r||(t=null),n===I.current?z.current||N():(I.current=n,F.current=n,z.current=!0,D({type:"STORE_UPDATED",payload:{latestStoreState:o,error:r}}))}};R.onStateChange=n,R.trySubscribe(),n();return function(){if(e=!0,R.tryUnsubscribe(),t)throw t}}},[w,R,P]);var W=Object(o.useMemo)(function(){return i.a.createElement(t,Object(v.a)({},B,{ref:c}))},[c,t,B]);return Object(o.useMemo)(function(){return h?i.a.createElement(d.Provider,{value:j},W):W},[d,W,j])}var m=l?i.a.memo(d):d;if(m.WrappedComponent=t,m.displayName=r,R){var w=i.a.forwardRef(function(e,t){return i.a.createElement(m,Object(v.a)({},e,{forwardedRef:t}))});return w.displayName=r,w.WrappedComponent=t,b()(w,t)}return b()(m,t)}}var O=Object.prototype.hasOwnProperty;function R(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function N(e,t){if(R(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var o=0;o<n.length;o++)if(!O.call(t,n[o])||!R(e[n[o]],t[n[o]]))return!1;return!0}var j=n(11);function M(e){return function(t,n){var r=e(t,n);function o(){return r}return o.dependsOnOwnProps=!1,o}}function U(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function A(e,t){return function(t,n){n.displayName;var r=function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)};return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=U(e);var o=r(t,n);return"function"==typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=U(o),o=r(t,n)),o},r}}var D=[function(e){return"function"==typeof e?A(e):void 0},function(e){return e?void 0:M(function(e){return{dispatch:e}})},function(e){return e&&"object"==typeof e?M(function(t){return Object(j.bindActionCreators)(e,t)}):void 0}];var I=[function(e){return"function"==typeof e?A(e):void 0},function(e){return e?void 0:M(function(){return{}})}];function L(e,t,n){return Object(v.a)({},n,e,t)}var F=[function(e){return"function"==typeof e?function(e){return function(t,n){n.displayName;var r,o=n.pure,i=n.areMergedPropsEqual,a=!1;return function(t,n,u){var l=e(t,n,u);return a?o&&i(l,r)||(r=l):(a=!0,r=l),r}}}(e):void 0},function(e){return e?void 0:function(){return L}}];function z(e,t,n,r){return function(o,i){return n(e(o,i),t(r,i),i)}}function B(e,t,n,r,o){var i,a,u,l,c,s=o.areStatesEqual,f=o.areOwnPropsEqual,d=o.areStatePropsEqual,p=!1;function h(o,p){var h,m,v=!f(p,a),y=!s(o,i);return i=o,a=p,v&&y?(u=e(i,a),t.dependsOnOwnProps&&(l=t(r,a)),c=n(u,l,a)):v?(e.dependsOnOwnProps&&(u=e(i,a)),t.dependsOnOwnProps&&(l=t(r,a)),c=n(u,l,a)):y?(h=e(i,a),m=!d(h,u),u=h,m&&(c=n(u,l,a)),c):c}return function(o,s){return p?h(o,s):(u=e(i=o,a=s),l=t(r,a),c=n(u,l,a),p=!0,c)}}function W(e,t){var n=t.initMapStateToProps,r=t.initMapDispatchToProps,o=t.initMergeProps,i=Object(y.a)(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),a=n(e,i),u=r(e,i),l=o(e,i);return(i.pure?B:z)(a,u,l,e,i)}function $(e,t,n){for(var r=t.length-1;r>=0;r--){var o=t[r](e);if(o)return o}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function H(e,t){return e===t}var V,q,K,Q,Y,X,G,J,Z,ee,te,ne,re,oe=(K=(q=void 0===V?{}:V).connectHOC,Q=void 0===K?P:K,Y=q.mapStateToPropsFactories,X=void 0===Y?I:Y,G=q.mapDispatchToPropsFactories,J=void 0===G?D:G,Z=q.mergePropsFactories,ee=void 0===Z?F:Z,te=q.selectorFactory,ne=void 0===te?W:te,function(e,t,n,r){void 0===r&&(r={});var o=r,i=o.pure,a=void 0===i||i,u=o.areStatesEqual,l=void 0===u?H:u,c=o.areOwnPropsEqual,s=void 0===c?N:c,f=o.areStatePropsEqual,d=void 0===f?N:f,p=o.areMergedPropsEqual,h=void 0===p?N:p,m=Object(y.a)(o,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),g=$(e,X,"mapStateToProps"),b=$(t,J,"mapDispatchToProps"),w=$(n,ee,"mergeProps");return Q(ne,Object(v.a)({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:g,initMapDispatchToProps:b,initMergeProps:w,pure:a,areStatesEqual:l,areOwnPropsEqual:s,areStatePropsEqual:d,areMergedPropsEqual:h},m))}),ie=n(12);n.d(t,"Provider",function(){return m}),n.d(t,"connectAdvanced",function(){return P}),n.d(t,"ReactReduxContext",function(){return l}),n.d(t,"connect",function(){return oe}),n.d(t,"batch",function(){return ie.unstable_batchedUpdates}),re=ie.unstable_batchedUpdates,c=re},function(e,t,n){"use strict";var r=n(44),o=n(53),i=Object.prototype.toString;function a(e){return"[object Array]"===i.call(e)}function u(e){return null!==e&&"object"==typeof e}function l(e){return"[object Function]"===i.call(e)}function c(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),a(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:a,isArrayBuffer:function(e){return"[object ArrayBuffer]"===i.call(e)},isBuffer:o,isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:u,isUndefined:function(e){return void 0===e},isDate:function(e){return"[object Date]"===i.call(e)},isFile:function(e){return"[object File]"===i.call(e)},isBlob:function(e){return"[object Blob]"===i.call(e)},isFunction:l,isStream:function(e){return u(e)&&l(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:c,merge:function e(){var t={};function n(n,r){"object"==typeof t[r]&&"object"==typeof n?t[r]=e(t[r],n):t[r]=n}for(var r=0,o=arguments.length;r<o;r++)c(arguments[r],n);return t},extend:function(e,t,n){return c(t,function(t,o){e[o]=n&&"function"==typeof t?r(t,n):t}),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(e,t,n){"use strict";(function(t){var r=n(42),o=n(56),i={"Content-Type":"application/x-www-form-urlencoded"};function a(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var u,l={adapter:("undefined"!=typeof XMLHttpRequest?u=n(45):void 0!==t&&(u=n(45)),u),transformRequest:[function(e,t){return o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(a(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(a(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};l.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],function(e){l.headers[e]={}}),r.forEach(["post","put","patch"],function(e){l.headers[e]=r.merge(i)}),e.exports=l}).call(this,n(55))},function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){"use strict";var r=n(42),o=n(57),i=n(59),a=n(60),u=n(61),l=n(46),c="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||n(62);e.exports=function(e){return new Promise(function(t,s){var f=e.data,d=e.headers;r.isFormData(f)&&delete d["Content-Type"];var p=new XMLHttpRequest,h="onreadystatechange",m=!1;if("undefined"==typeof window||!window.XDomainRequest||"withCredentials"in p||u(e.url)||(p=new window.XDomainRequest,h="onload",m=!0,p.onprogress=function(){},p.ontimeout=function(){}),e.auth){var v=e.auth.username||"",y=e.auth.password||"";d.Authorization="Basic "+c(v+":"+y)}if(p.open(e.method.toUpperCase(),i(e.url,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p[h]=function(){if(p&&(4===p.readyState||m)&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in p?a(p.getAllResponseHeaders()):null,r={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:1223===p.status?204:p.status,statusText:1223===p.status?"No Content":p.statusText,headers:n,config:e,request:p};o(t,s,r),p=null}},p.onerror=function(){s(l("Network Error",e,null,p)),p=null},p.ontimeout=function(){s(l("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",p)),p=null},r.isStandardBrowserEnv()){var g=n(63),b=(e.withCredentials||u(e.url))&&e.xsrfCookieName?g.read(e.xsrfCookieName):void 0;b&&(d[e.xsrfHeaderName]=b)}if("setRequestHeader"in p&&r.forEach(d,function(e,t){void 0===f&&"content-type"===t.toLowerCase()?delete d[t]:p.setRequestHeader(t,e)}),e.withCredentials&&(p.withCredentials=!0),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){p&&(p.abort(),s(e),p=null)}),void 0===f&&(f=null),p.send(f)})}},function(e,t,n){"use strict";var r=n(58);e.exports=function(e,t,n,o,i){var a=new Error(e);return r(a,t,n,o,i)}},function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},function(e,t,n){"use strict";var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});var o=r(n(0)),i=n(41),a=n(50);t.default=i.connect(function(e){return{users:e.users}},{fetchUsers:a.fetchUsers})(function(e){return o.useEffect(function(){e.fetchUsers()},[]),o.default.createElement("div",null,o.default.createElement("p",null,"Here is a big list of users"),o.default.createElement("ul",null,e.users.map(function(e){return o.default.createElement("li",{key:e.id},e.name)})))})},function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function u(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){e.done?o(e.value):new n(function(t){t(e.value)}).then(a,u)}l((r=r.apply(e,t||[])).next())})},o=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},a=this;Object.defineProperty(t,"__esModule",{value:!0});var u=i(n(51)),l=n(40);t.fetchUsers=function(){return function(e){return r(a,void 0,void 0,function(){var t;return o(this,function(n){switch(n.label){case 0:return[4,u.default.get("http://react-ssr-api.herokuapp.com/users")];case 1:return t=n.sent(),e({type:l.FETCH_USERS,payload:t}),[2]}})})}}},function(e,t,n){e.exports=n(52)},function(e,t,n){"use strict";var r=n(42),o=n(44),i=n(54),a=n(43);function u(e){var t=new i(e),n=o(i.prototype.request,t);return r.extend(n,i.prototype,t),r.extend(n,t),n}var l=u(a);l.Axios=i,l.create=function(e){return u(r.merge(a,e))},l.Cancel=n(48),l.CancelToken=n(69),l.isCancel=n(47),l.all=function(e){return Promise.all(e)},l.spread=n(70),e.exports=l,e.exports.default=l},function(e,t){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
e.exports=function(e){return null!=e&&(n(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}(e)||!!e._isBuffer)}},function(e,t,n){"use strict";var r=n(43),o=n(42),i=n(64),a=n(65);function u(e){this.defaults=e,this.interceptors={request:new i,response:new i}}u.prototype.request=function(e){"string"==typeof e&&(e=o.merge({url:arguments[0]},arguments[1])),(e=o.merge(r,{method:"get"},this.defaults,e)).method=e.method.toLowerCase();var t=[a,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)n=n.then(t.shift(),t.shift());return n},o.forEach(["delete","get","head","options"],function(e){u.prototype[e]=function(t,n){return this.request(o.merge(n||{},{method:e,url:t}))}}),o.forEach(["post","put","patch"],function(e){u.prototype[e]=function(t,n,r){return this.request(o.merge(r||{},{method:e,url:t,data:n}))}}),e.exports=u},function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function u(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var l,c=[],s=!1,f=-1;function d(){s&&l&&(s=!1,l.length?c=l.concat(c):f=-1,c.length&&p())}function p(){if(!s){var e=u(d);s=!0;for(var t=c.length;t;){for(l=c,c=[];++f<t;)l&&l[f].run();f=-1,t=c.length}l=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||s||u(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";var r=n(42);e.exports=function(e,t){r.forEach(e,function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])})}},function(e,t,n){"use strict";var r=n(46);e.exports=function(e,t,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e}},function(e,t,n){"use strict";var r=n(42);function o(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(r.isURLSearchParams(t))i=t.toString();else{var a=[];r.forEach(t,function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),a.push(o(t)+"="+o(e))}))}),i=a.join("&")}return i&&(e+=(-1===e.indexOf("?")?"?":"&")+i),e}},function(e,t,n){"use strict";var r=n(42),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,a={};return e?(r.forEach(e.split("\n"),function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(a[t]&&o.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([n]):a[t]?a[t]+", "+n:n}}),a):a}},function(e,t,n){"use strict";var r=n(42);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},function(e,t,n){"use strict";var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function o(){this.message="String contains an invalid character"}o.prototype=new Error,o.prototype.code=5,o.prototype.name="InvalidCharacterError",e.exports=function(e){for(var t,n,i=String(e),a="",u=0,l=r;i.charAt(0|u)||(l="=",u%1);a+=l.charAt(63&t>>8-u%1*8)){if((n=i.charCodeAt(u+=.75))>255)throw new o;t=t<<8|n}return a}},function(e,t,n){"use strict";var r=n(42);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,i,a){var u=[];u.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&u.push("expires="+new Date(n).toGMTString()),r.isString(o)&&u.push("path="+o),r.isString(i)&&u.push("domain="+i),!0===a&&u.push("secure"),document.cookie=u.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,n){"use strict";var r=n(42);function o(){this.handlers=[]}o.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=o},function(e,t,n){"use strict";var r=n(42),o=n(66),i=n(47),a=n(43),u=n(67),l=n(68);function c(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return c(e),e.baseURL&&!u(e.url)&&(e.url=l(e.baseURL,e.url)),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),r.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]}),(e.adapter||a.adapter)(e).then(function(t){return c(e),t.data=o(t.data,t.headers,e.transformResponse),t},function(t){return i(t)||(c(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},function(e,t,n){"use strict";var r=n(42);e.exports=function(e,t,n){return r.forEach(n,function(n){e=n(e,t)}),e}},function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";var r=n(48);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var n=this;e(function(e){n.reason||(n.reason=new r(e),t(n.reason))})}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o(function(t){e=t}),cancel:e}},e.exports=o},function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L3RpbnktaW52YXJpYW50LmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXNtL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9yZWR1eC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N5bWJvbC1vYnNlcnZhYmxlL2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jcmVhdGUtcmVhY3QtY29udGV4dC9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N5bWJvbC1vYnNlcnZhYmxlL2VzL3BvbnlmaWxsLmpzIiwid2VicGFjazovLy8uL3NyYy9jbGllbnQudHN4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL3NyYy9yb3V0ZXMvUm91dGVzLnRzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3JlYXRlLXJlYWN0LWNvbnRleHQvbGliL2ltcGxlbWVudGF0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2d1ZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL25vZGVfbW9kdWxlcy9pc2FycmF5L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSG9tZS50c3giLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXNtL3JlYWN0LXJvdXRlci1kb20uanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2hhcm1vbnktbW9kdWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC10aHVuay9lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL3VzZXIvcmVkdWNlcnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL3VzZXIvdHlwZXMudHMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvQ29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvYmF0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL1N1YnNjcmlwdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9Qcm92aWRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvc2hhbGxvd0VxdWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3dyYXBNYXBUb1Byb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcERpc3BhdGNoVG9Qcm9wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9tYXBTdGF0ZVRvUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWVyZ2VQcm9wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9zZWxlY3RvckZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvY29ubmVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi91dGlscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYWRhcHRlcnMveGhyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9jcmVhdGVFcnJvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVXNlcnNMaXN0LnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvdXNlci9hY3Rpb25zLnRzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pcy1idWZmZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9jZXNzL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc1VSTFNhbWVPcmlnaW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J0b2EuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS90cmFuc2Zvcm1EYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc0Fic29sdXRlVVJMLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21iaW5lVVJMcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJ0YXJnZXQiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJhcHBseSIsInRoaXMiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJrZXlzIiwiaW5kZXhPZiIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY29uc3RydWN0b3IiLCJfX3Byb3RvX18iLCJpc1Byb2R1Y3Rpb24iLCJwcmVmaXgiLCJjb25kaXRpb24iLCJtZXNzYWdlIiwiRXJyb3IiLCJpc0Fic29sdXRlIiwicGF0aG5hbWUiLCJjaGFyQXQiLCJzcGxpY2VPbmUiLCJsaXN0IiwiaW5kZXgiLCJrIiwicG9wIiwicmVzb2x2ZV9wYXRobmFtZSIsInRvIiwiZnJvbSIsInVuZGVmaW5lZCIsInRvUGFydHMiLCJzcGxpdCIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwiY29uY2F0IiwiaGFzVHJhaWxpbmdTbGFzaCIsImxhc3QiLCJ1cCIsInBhcnQiLCJ1bnNoaWZ0IiwicmVzdWx0Iiwiam9pbiIsInN1YnN0ciIsIl90eXBlb2YiLCJpdGVyYXRvciIsIm9iaiIsInZhbHVlX2VxdWFsIiwidmFsdWVFcXVhbCIsImEiLCJiIiwiQXJyYXkiLCJpc0FycmF5IiwiZXZlcnkiLCJpdGVtIiwiYVR5cGUiLCJhVmFsdWUiLCJ2YWx1ZU9mIiwiYlZhbHVlIiwiYUtleXMiLCJiS2V5cyIsImFkZExlYWRpbmdTbGFzaCIsInBhdGgiLCJzdHJpcExlYWRpbmdTbGFzaCIsInN0cmlwQmFzZW5hbWUiLCJSZWdFeHAiLCJ0ZXN0IiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJzbGljZSIsImNyZWF0ZVBhdGgiLCJsb2NhdGlvbiIsInNlYXJjaCIsImhhc2giLCJjcmVhdGVMb2NhdGlvbiIsInN0YXRlIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJlc21fZXh0ZW5kcyIsImRlY29kZVVSSSIsImUiLCJVUklFcnJvciIsImxvY2F0aW9uc0FyZUVxdWFsIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJsaXN0ZW5lcnMiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImFjdGlvbiIsImdldFVzZXJDb25maXJtYXRpb24iLCJjYWxsYmFjayIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwicHVzaCIsImZpbHRlciIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJhcmdzIiwiX2tleSIsImZvckVhY2giLCJjcmVhdGVCcm93c2VySGlzdG9yeSIsImNyZWF0ZUhhc2hIaXN0b3J5IiwiY3JlYXRlTWVtb3J5SGlzdG9yeSIsImNhblVzZURPTSIsIndpbmRvdyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImdldENvbmZpcm1hdGlvbiIsImNvbmZpcm0iLCJQb3BTdGF0ZUV2ZW50IiwiSGFzaENoYW5nZUV2ZW50IiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsInByb3BzIiwidGlueV9pbnZhcmlhbnRfZXNtIiwidWEiLCJnbG9iYWxIaXN0b3J5IiwiY2FuVXNlSGlzdG9yeSIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsIm5lZWRzSGFzaENoYW5nZUxpc3RlbmVyIiwiX3Byb3BzIiwiX3Byb3BzJGZvcmNlUmVmcmVzaCIsImZvcmNlUmVmcmVzaCIsIl9wcm9wcyRnZXRVc2VyQ29uZmlybSIsIl9wcm9wcyRrZXlMZW5ndGgiLCJrZXlMZW5ndGgiLCJiYXNlbmFtZSIsImdldERPTUxvY2F0aW9uIiwiaGlzdG9yeVN0YXRlIiwiX3JlZiIsIl93aW5kb3ckbG9jYXRpb24iLCJjcmVhdGVLZXkiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJ0cmFuc2l0aW9uTWFuYWdlciIsInNldFN0YXRlIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJldmVudCIsImlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQiLCJoYW5kbGVQb3AiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiZm9yY2VOZXh0UG9wIiwib2siLCJmcm9tTG9jYXRpb24iLCJ0b0xvY2F0aW9uIiwidG9JbmRleCIsImFsbEtleXMiLCJmcm9tSW5kZXgiLCJkZWx0YSIsImdvIiwicmV2ZXJ0UG9wIiwiaW5pdGlhbExvY2F0aW9uIiwiY3JlYXRlSHJlZiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaXNCbG9ja2VkIiwiaHJlZiIsInB1c2hTdGF0ZSIsInByZXZJbmRleCIsIm5leHRLZXlzIiwicmVwbGFjZSIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiSGFzaENoYW5nZUV2ZW50JDEiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJnZXRIYXNoUGF0aCIsInN1YnN0cmluZyIsInJlcGxhY2VIYXNoUGF0aCIsIl9wcm9wcyRoYXNoVHlwZSIsImhhc2hUeXBlIiwiX0hhc2hQYXRoQ29kZXJzJGhhc2hUIiwiaWdub3JlUGF0aCIsImVuY29kZWRQYXRoIiwicHJldkxvY2F0aW9uIiwiYWxsUGF0aHMiLCJsYXN0SW5kZXhPZiIsInB1c2hIYXNoUGF0aCIsIm5leHRQYXRocyIsImNsYW1wIiwibG93ZXJCb3VuZCIsInVwcGVyQm91bmQiLCJtaW4iLCJtYXgiLCJfcHJvcHMkaW5pdGlhbEVudHJpZXMiLCJpbml0aWFsRW50cmllcyIsIl9wcm9wcyRpbml0aWFsSW5kZXgiLCJpbml0aWFsSW5kZXgiLCJlbnRyaWVzIiwibWFwIiwiZW50cnkiLCJuZXh0SW5kZXgiLCJuZXh0RW50cmllcyIsInNwbGljZSIsImNhbkdvIiwiTWVtb3J5Um91dGVyIiwiUHJvbXB0IiwiUmVkaXJlY3QiLCJSb3V0ZSIsIlJvdXRlciIsIlN0YXRpY1JvdXRlciIsIlN3aXRjaCIsImdlbmVyYXRlUGF0aCIsIm1hdGNoUGF0aCIsIndpdGhSb3V0ZXIiLCJjb250ZXh0IiwiY3JlYXRlX3JlYWN0X2NvbnRleHRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsImNyZWF0ZV9yZWFjdF9jb250ZXh0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19fZGVmYXVsdCIsIl9iYWJlbF9ydW50aW1lX2hlbHBlcnNfZXNtX2luaGVyaXRzTG9vc2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18iLCJyZWFjdF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQiLCJoaXN0b3J5X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18iLCJ0aW55X2ludmFyaWFudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fIiwicGF0aF90b19yZWdleHBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyIsInBhdGhfdG9fcmVnZXhwX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19fZGVmYXVsdCIsIl9iYWJlbF9ydW50aW1lX2hlbHBlcnNfZXNtX2V4dGVuZHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsIl9iYWJlbF9ydW50aW1lX2hlbHBlcnNfZXNtX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXyIsImhvaXN0X25vbl9yZWFjdF9zdGF0aWNzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fIiwiaG9pc3Rfbm9uX3JlYWN0X3N0YXRpY3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX19fZGVmYXVsdCIsIlByb3ZpZGVyIiwiZGlzcGxheU5hbWUiLCJDb25zdW1lciIsImNyZWF0ZU5hbWVkQ29udGV4dCIsIl9SZWFjdCRDb21wb25lbnQiLCJfdGhpcyIsIl9pc01vdW50ZWQiLCJfcGVuZGluZ0xvY2F0aW9uIiwic3RhdGljQ29udGV4dCIsImNvbXB1dGVSb290TWF0Y2giLCJ1cmwiLCJwYXJhbXMiLCJpc0V4YWN0IiwiX3Byb3RvIiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsInJlbmRlciIsImNoaWxkcmVuIiwibWF0Y2giLCJDb21wb25lbnQiLCJMaWZlY3ljbGUiLCJvbk1vdW50IiwiY29tcG9uZW50RGlkVXBkYXRlIiwicHJldlByb3BzIiwib25VcGRhdGUiLCJvblVubW91bnQiLCJfcmVmJHdoZW4iLCJ3aGVuIiwiY29udGV4dCQkMSIsIm1ldGhvZCIsInNlbGYiLCJyZWxlYXNlIiwiY2FjaGUiLCJjYWNoZUxpbWl0IiwiY2FjaGVDb3VudCIsImdlbmVyYXRvciIsImNvbXBpbGUiLCJjb21waWxlUGF0aCIsInByZXR0eSIsImNvbXB1dGVkTWF0Y2giLCJfcmVmJHB1c2giLCJjYWNoZSQxIiwiY2FjaGVMaW1pdCQxIiwiY2FjaGVDb3VudCQxIiwib3B0aW9ucyIsIl9vcHRpb25zIiwiX29wdGlvbnMkZXhhY3QiLCJleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsInN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsInNlbnNpdGl2ZSIsInJlZHVjZSIsIm1hdGNoZWQiLCJfY29tcGlsZVBhdGgiLCJjYWNoZUtleSIsImVuZCIsInBhdGhDYWNoZSIsInJlZ2V4cCIsImNvbXBpbGVQYXRoJDEiLCJleGVjIiwidmFsdWVzIiwibWVtbyIsIl90aGlzJHByb3BzIiwiY29tcG9uZW50IiwiQ2hpbGRyZW4iLCJjb3VudCIsImlzRW1wdHlDaGlsZHJlbiIsImJhc2UiLCJjcmVhdGVVUkwiLCJzdGF0aWNIYW5kbGVyIiwibWV0aG9kTmFtZSIsIm5vb3AiLCJoYW5kbGVQdXNoIiwibmF2aWdhdGVUbyIsImhhbmRsZVJlcGxhY2UiLCJoYW5kbGVMaXN0ZW4iLCJoYW5kbGVCbG9jayIsIl90aGlzJHByb3BzJGJhc2VuYW1lIiwiYWRkQmFzZW5hbWUiLCJfdGhpcyRwcm9wczIiLCJfdGhpcyRwcm9wczIkYmFzZW5hbWUiLCJfdGhpcyRwcm9wczIkY29udGV4dCIsIl90aGlzJHByb3BzMiRsb2NhdGlvbiIsInJlc3QiLCJlbGVtZW50IiwiY2hpbGQiLCJpc1ZhbGlkRWxlbWVudCIsImNsb25lRWxlbWVudCIsIkMiLCJ3cmFwcGVkQ29tcG9uZW50UmVmIiwicmVtYWluaW5nUHJvcHMiLCJyb3V0ZUNvbXBvbmVudFByb3BzIiwicmVmIiwiV3JhcHBlZENvbXBvbmVudCIsIlJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJNRU1PX1NUQVRJQ1MiLCIkJHR5cGVvZiIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwiaXNNZW1vIiwiRm9yd2FyZFJlZiIsImdldE93blByb3BlcnR5TmFtZXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJkZXNjcmlwdG9yIiwiZm9ybWF0IiwiZiIsImVycm9yIiwiYXJnSW5kZXgiLCJmcmFtZXNUb1BvcCIsImNyZWF0ZVN0b3JlIiwiY29tYmluZVJlZHVjZXJzIiwiYmluZEFjdGlvbkNyZWF0b3JzIiwiYXBwbHlNaWRkbGV3YXJlIiwiY29tcG9zZSIsIkFjdGlvblR5cGVzIiwic3ltYm9sX29ic2VydmFibGVfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInJhbmRvbVN0cmluZyIsIklOSVQiLCJSRVBMQUNFIiwiUFJPQkVfVU5LTk9XTl9BQ1RJT04iLCJpc1BsYWluT2JqZWN0IiwicHJvdG8iLCJyZWR1Y2VyIiwicHJlbG9hZGVkU3RhdGUiLCJlbmhhbmNlciIsIl9yZWYyIiwiY3VycmVudFJlZHVjZXIiLCJjdXJyZW50U3RhdGUiLCJjdXJyZW50TGlzdGVuZXJzIiwibmV4dExpc3RlbmVycyIsImlzRGlzcGF0Y2hpbmciLCJlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzIiwiZ2V0U3RhdGUiLCJzdWJzY3JpYmUiLCJpc1N1YnNjcmliZWQiLCJkaXNwYXRjaCIsInJlcGxhY2VSZWR1Y2VyIiwibmV4dFJlZHVjZXIiLCJvdXRlclN1YnNjcmliZSIsIm9ic2VydmVyIiwiVHlwZUVycm9yIiwib2JzZXJ2ZVN0YXRlIiwibmV4dCIsInVuc3Vic2NyaWJlIiwiZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2UiLCJhY3Rpb25UeXBlIiwiU3RyaW5nIiwicmVkdWNlcnMiLCJyZWR1Y2VyS2V5cyIsImZpbmFsUmVkdWNlcnMiLCJzaGFwZUFzc2VydGlvbkVycm9yIiwiZmluYWxSZWR1Y2VyS2V5cyIsImFzc2VydFJlZHVjZXJTaGFwZSIsImhhc0NoYW5nZWQiLCJfaSIsInByZXZpb3VzU3RhdGVGb3JLZXkiLCJuZXh0U3RhdGVGb3JLZXkiLCJlcnJvck1lc3NhZ2UiLCJiaW5kQWN0aW9uQ3JlYXRvciIsImFjdGlvbkNyZWF0b3IiLCJhY3Rpb25DcmVhdG9ycyIsImJvdW5kQWN0aW9uQ3JlYXRvcnMiLCJfZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImZ1bmNzIiwiYXJnIiwibWlkZGxld2FyZXMiLCJzdG9yZSIsIl9kaXNwYXRjaCIsIm1pZGRsZXdhcmVBUEkiLCJjaGFpbiIsIm1pZGRsZXdhcmUiLCJvd25LZXlzIiwic3ltIiwiX29iamVjdFNwcmVhZCIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiZXJyIiwiY29uc29sZSIsImciLCJGdW5jdGlvbiIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJwYXJzZSIsInN0ciIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwicmVzIiwidG9rZW5zIiwiZGVmYXVsdERlbGltaXRlciIsImRlbGltaXRlciIsImVzY2FwZWQiLCJvZmZzZXQiLCJjYXB0dXJlIiwiZ3JvdXAiLCJtb2RpZmllciIsImFzdGVyaXNrIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwicGF0dGVybiIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwiY2hhckNvZGVBdCIsInRvVXBwZXJDYXNlIiwibWF0Y2hlcyIsIm9wdHMiLCJkYXRhIiwiZW5jb2RlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwidG9rZW4iLCJzZWdtZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImoiLCJhdHRhY2hLZXlzIiwicmUiLCJmbGFncyIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJyZWdleHBUb1JlZ2V4cCIsInBhcnRzIiwiYXJyYXlUb1JlZ2V4cCIsInN0cmluZ1RvUmVnZXhwIiwiZ2xvYmFsIiwicm9vdCIsIl9wb255ZmlsbF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidGVzdDEiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwibGV0dGVyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsInZhbCIsInRvT2JqZWN0IiwiX3JlYWN0MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfaW1wbGVtZW50YXRpb24yIiwiZGVmYXVsdCIsImNyZWF0ZUNvbnRleHQiLCJzeW1ib2xPYnNlcnZhYmxlUG9ueWZpbGwiLCJvYnNlcnZhYmxlIiwicmVhY3RfMSIsIl9faW1wb3J0RGVmYXVsdCIsInJlYWN0X2RvbV8xIiwiUm91dGVzXzEiLCJyZWFjdF9yb3V0ZXJfZG9tXzEiLCJyZWR1eF8xIiwicmVhY3RfcmVkdXhfMSIsInJlZHV4X3RodW5rXzEiLCJzdG9yZV8xIiwiaHlkcmF0ZSIsIkJyb3dzZXJSb3V0ZXIiLCJnZXRFbGVtZW50QnlJZCIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJhYSIsImJhIiwiQSIsIkIiLCJoIiwiY2EiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwiRCIsIkUiLCJyZWZzIiwidXBkYXRlciIsIkYiLCJHIiwiaXNSZWFjdENvbXBvbmVudCIsImZvcmNlVXBkYXRlIiwiSCIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSSIsImN1cnJlbnQiLCJKIiwiSyIsIkwiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk0iLCJfb3duZXIiLCJOIiwiTyIsIlAiLCJRIiwia2V5UHJlZml4IiwiZnVuYyIsIlIiLCJVIiwiUyIsIlQiLCJkb25lIiwiPSIsIjoiLCJlc2NhcGUiLCJlYSIsImZhIiwiViIsImRhIiwiVyIsIlgiLCJ0b0FycmF5Iiwib25seSIsImNyZWF0ZVJlZiIsIlB1cmVDb21wb25lbnQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJfY29udGV4dCIsImZvcndhcmRSZWYiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY3JlYXRlRmFjdG9yeSIsInZlcnNpb24iLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50T3duZXIiLCJZIiwiWiIsImhhIiwiaWEiLCJvbkVycm9yIiwiamEiLCJsYSIsIm1hIiwibmEiLCJvYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInFhIiwicmVnaXN0cmF0aW9uTmFtZSIsInJhIiwic2EiLCJkZXBlbmRlbmNpZXMiLCJ0YSIsInZhIiwid2EiLCJjdXJyZW50VGFyZ2V0Iiwia2EiLCJ4YSIsInlhIiwiemEiLCJBYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwiQmEiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiQ2EiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJwYXJlbnROb2RlIiwidGFnIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJyZXR1cm4iLCJNYSIsImRpc3BhdGNoQ29uZmlnIiwiTmEiLCJfdGFyZ2V0SW5zdCIsIk9hIiwiUGEiLCJRYSIsIlJhIiwiU2EiLCJ0b0xvd2VyQ2FzZSIsIlRhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWEiLCJWYSIsIldhIiwic3R5bGUiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWGEiLCJZYSIsIlphIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJkYiIsImViIiwidGV4dENvbnRlbnQiLCJmYiIsImdiIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpYiIsImV2ZW50UG9vbCIsImpiIiwiZGVzdHJ1Y3RvciIsImhiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJkb2N1bWVudE1vZGUiLCJwYiIsInFiIiwicmIiLCJzYiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJ0YiIsInViIiwia2V5Q29kZSIsInZiIiwiZGV0YWlsIiwid2IiLCJ6YiIsImxvY2FsZSIsIndoaWNoIiwieGIiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJ5YiIsIkFiIiwiQmIiLCJDYiIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInRlbCIsInRleHQiLCJ0aW1lIiwid2VlayIsIk1iIiwibm9kZU5hbWUiLCJOYiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm5vZGVUeXBlIiwiT2IiLCJzZXRBdHRyaWJ1dGUiLCJQYiIsIlJiIiwiX3ZhbHVlVHJhY2tlciIsInNldCIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJRYiIsIlNiIiwiY2hlY2tlZCIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJZYiIsIlpiIiwiJGIiLCJhYyIsImJjIiwiY2MiLCJkYyIsImVjIiwiZmMiLCJnYyIsImhjIiwiaWMiLCJqYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwia2MiLCJsYyIsIm1jIiwibmMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwicmMiLCJzYyIsInRjIiwicGMiLCJpc05hTiIsInFjIiwib2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInVjIiwidmMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIndjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsInhjIiwieWMiLCJ6YyIsIkFjIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJCYyIsImNoYW5nZSIsIkNjIiwiRGMiLCJFYyIsIkZjIiwiR2MiLCJIYyIsIkljIiwiSmMiLCJkZXRhY2hFdmVudCIsIktjIiwiTGMiLCJhdHRhY2hFdmVudCIsIk1jIiwiTmMiLCJPYyIsIlBjIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsIlFjIiwidmlldyIsIlJjIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlNjIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlRjIiwiVWMiLCJWYyIsIldjIiwiWGMiLCJZYyIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiWmMiLCJwb2ludGVySWQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCIkYyIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiYWQiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsImFsdGVybmF0ZSIsImJkIiwiY2QiLCJkZCIsImVkIiwiZWZmZWN0VGFnIiwiZmQiLCJoZCIsInNpYmxpbmciLCJnZCIsImlkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsImpkIiwiY2xpcGJvYXJkRGF0YSIsImtkIiwibGQiLCJjaGFyQ29kZSIsIm1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIm5kIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIm9kIiwicGQiLCJkYXRhVHJhbnNmZXIiLCJxZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJyZCIsInNkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ0ZCIsInVkIiwidmQiLCJ3ZCIsImlzSW50ZXJhY3RpdmUiLCJ4ZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsInlkIiwiemQiLCJBZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiQmQiLCJDZCIsIkRkIiwiRWQiLCJGZCIsIkdkIiwiSGQiLCJJZCIsIkpkIiwiYm9keSIsIktkIiwiZmlyc3RDaGlsZCIsIkxkIiwibm9kZSIsIm5leHRTaWJsaW5nIiwiTmQiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJPZCIsImNvbnRlbnRFZGl0YWJsZSIsIlFkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIk1kIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImRvY3VtZW50RWxlbWVudCIsInN0YXJ0Iiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJnZXRTZWxlY3Rpb24iLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJmb2N1cyIsIlJkIiwiU2QiLCJzZWxlY3QiLCJUZCIsIlVkIiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJvblNlbGVjdCIsIiRkIiwiWmQiLCJhZSIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiYmUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImNlIiwiZGUiLCJlZSIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJmZSIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJnZSIsImhlIiwiaWUiLCJqZSIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwia2UiLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJsZSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwibWUiLCJuZSIsInRyaW0iLCJvZSIsInNldFByb3BlcnR5IiwicGUiLCJtZW51aXRlbSIsImFyZWEiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInFlIiwiaXMiLCJzZSIsImJsdXIiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsImF1dG9Gb2N1cyIsInhlIiwiX19odG1sIiwieWUiLCJzZXRUaW1lb3V0IiwiemUiLCJjbGVhclRpbWVvdXQiLCJBZSIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJCZSIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiRGUiLCJFZSIsIlNldCIsIkZlIiwiR2UiLCJIZSIsIkllIiwiSmUiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJLZSIsIkxlIiwiTWUiLCJOZSIsImdldENoaWxkQ29udGV4dCIsIk9lIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlVlIiwiZWxlbWVudFR5cGUiLCJwZW5kaW5nUHJvcHMiLCJjb250ZXh0RGVwZW5kZW5jaWVzIiwibWVtb2l6ZWRTdGF0ZSIsInVwZGF0ZVF1ZXVlIiwibWVtb2l6ZWRQcm9wcyIsImxhc3RFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJWZSIsIlhlIiwiWWUiLCJaZSIsIiRlIiwiYWYiLCJiZiIsInBlbmRpbmdDaGlsZHJlbiIsImltcGxlbWVudGF0aW9uIiwiY2YiLCJkaWRFcnJvciIsImVhcmxpZXN0UGVuZGluZ1RpbWUiLCJsYXRlc3RQZW5kaW5nVGltZSIsImRmIiwiZmYiLCJsYXRlc3RQaW5nZWRUaW1lIiwiZWFybGllc3RTdXNwZW5kZWRUaW1lIiwibGF0ZXN0U3VzcGVuZGVkVGltZSIsImdmIiwibmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT24iLCJqZiIsImtmIiwiYmFzZVN0YXRlIiwidGYiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwibGYiLCJuZiIsIm1mIiwicGF5bG9hZCIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ1ZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInZmIiwid2YiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJ4ZiIsInlmIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiemYiLCJBZiIsIl9zdHJpbmdSZWYiLCJCZiIsIkNmIiwiTWFwIiwiZGVsZXRlIiwiRGYiLCJFZiIsIkZmIiwiR2YiLCJIZiIsIklmIiwiSmYiLCJ0YWdOYW1lIiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwicXVldWUiLCJiYXNlVXBkYXRlIiwibmciLCJvZyIsInBnIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsInFnIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwicmciLCJkZXN0cm95IiwiZGVwcyIsInNnIiwidGciLCJ1ZyIsInZnIiwid2ciLCJyZWFkQ29udGV4dCIsInhnIiwieWciLCJ6ZyIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkdnIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk1nIiwiTmciLCJPZyIsIlBnIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiUWciLCJSZyIsInBlbmRpbmdDb250ZXh0IiwiU2ciLCJ0aW1lZE91dEF0IiwiZmFsbGJhY2siLCJUZyIsIlVnIiwidGhlbiIsImhmIiwiV2UiLCJoaWRkZW4iLCJmaXJzdCIsIm9ic2VydmVkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsImNoIiwiZGgiLCJlaCIsImZoIiwiZ2giLCJoaCIsImloIiwiamgiLCJzdGFjayIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJvbkNsaWNrIiwib25jbGljayIsInBoIiwiV2Vha1NldCIsInFoIiwicmgiLCJzaCIsInRoIiwidmgiLCJ3aCIsInhoIiwieWgiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiemgiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwiQ2UiLCJkaXNwbGF5IiwidWgiLCJoaSIsIlhoIiwiaGFzIiwiYWRkIiwiQmgiLCJXZWFrTWFwIiwiQ2giLCJEaCIsIkVoIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJGaCIsImNvbXBvbmVudFN0YWNrIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsIlVoIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJWaCIsIlpoIiwicGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lIiwiZWYiLCJQZCIsIlloIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJmaW5pc2hlZFdvcmsiLCIkaCIsImFpIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwiYmkiLCJjaSIsImRpIiwibWF4RHVyYXRpb24iLCJwaW5nQ2FjaGUiLCJlaSIsImZpIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJnaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVuc3RhYmxlX25vdyIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwiQmkiLCJDaSIsIm5leHRTY2hlZHVsZWRSb290IiwiRGkiLCJFaSIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiX29uQ29tcGxldGUiLCJGaSIsImZpcnN0QmF0Y2giLCJfZXhwaXJhdGlvblRpbWUiLCJfZGVmZXIiLCJHaSIsIkhpIiwiSWkiLCJKaSIsIktpIiwiTGkiLCJOaSIsIl9yb290IiwiX2NhbGxiYWNrcyIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiX2NoaWxkcmVuIiwiT2kiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiUGkiLCJfaW50ZXJuYWxSb290IiwiUWkiLCJTaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIlJpIiwiVGkiLCJNaSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiY29tbWl0IiwidW5tb3VudCIsImNyZWF0ZUJhdGNoIiwiVmkiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzIiwiZmx1c2hTeW5jIiwidW5zdGFibGVfY3JlYXRlUm9vdCIsInVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZCIsIkV2ZW50cyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiVGUiLCJvdmVycmlkZVByb3BzIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiV2kiLCJYaSIsInByZXZpb3VzIiwicHJpb3JpdHlMZXZlbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicGVyZm9ybWFuY2UiLCJfc2NoZWRNb2NrIiwiTWVzc2FnZUNoYW5uZWwiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwicmVhY3Rfcm91dGVyXzEiLCJIb21lXzEiLCJVc2Vyc0xpc3RfMSIsIl9yZWFjdCIsIl9wcm9wVHlwZXMyIiwiX2d1ZDIiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSZWZlcmVuY2VFcnJvciIsIl9pbmhlcml0cyIsInNldFByb3RvdHlwZU9mIiwiTUFYX1NJR05FRF8zMV9CSVRfSU5UIiwiY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJfQ29uc3VtZXIkY29udGV4dFR5cGUiLCJjb250ZXh0UHJvcCIsIl9Db21wb25lbnQiLCJfdGVtcCIsImhhbmRsZXJzIiwiZW1pdHRlciIsIm9uIiwiaGFuZGxlciIsIm9mZiIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJuZXh0UHJvcHMiLCJvbGRWYWx1ZSIsImlzUmVxdWlyZWQiLCJfQ29tcG9uZW50MiIsIl90ZW1wMiIsIl90aGlzMiIsIl9sZW4yIiwiX2tleTIiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJvYmplY3RPZiIsIm9uZU9mIiwib25lT2ZUeXBlIiwic2hhcGUiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsIndhcm5pbmciLCJtYWtlRW1wdHlGdW5jdGlvbiIsInRoYXRSZXR1cm5zIiwidGhhdFJldHVybnNGYWxzZSIsInRoYXRSZXR1cm5zVHJ1ZSIsInRoYXRSZXR1cm5zTnVsbCIsInRoYXRSZXR1cm5zVGhpcyIsInRoYXRSZXR1cm5zQXJndW1lbnQiLCJhcnIiLCJ0eXBlT2YiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJMYXp5IiwiTWVtbyIsIlBvcnRhbCIsIlByb2ZpbGVyIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwiaXNBc3luY01vZGUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaXNDb250ZXh0Q29uc3VtZXIiLCJpc0NvbnRleHRQcm92aWRlciIsImlzRWxlbWVudCIsImlzRm9yd2FyZFJlZiIsImlzRnJhZ21lbnQiLCJpc0xhenkiLCJpc1BvcnRhbCIsImlzUHJvZmlsZXIiLCJpc1N0cmljdE1vZGUiLCJpc1N1c3BlbnNlIiwibG9nIiwiSGFzaFJvdXRlciIsIkxpbmsiLCJOYXZMaW5rIiwiX2JhYmVsX3J1bnRpbWVfaGVscGVyc19lc21faW5oZXJpdHNMb29zZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwicmVhY3RfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsInJlYWN0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdCIsInJlYWN0X3JvdXRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiaGlzdG9yeV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwiX2JhYmVsX3J1bnRpbWVfaGVscGVyc19lc21fZXh0ZW5kc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fIiwiX2JhYmVsX3J1bnRpbWVfaGVscGVyc19lc21fb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fIiwidGlueV9pbnZhcmlhbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyIsImhhbmRsZUNsaWNrIiwiaXNNb2RpZmllZEV2ZW50IiwiaW5uZXJSZWYiLCJfcmVmJGFyaWFDdXJyZW50IiwiYXJpYUN1cnJlbnQiLCJfcmVmJGFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZUNsYXNzTmFtZSIsImFjdGl2ZVN0eWxlIiwiY2xhc3NOYW1lUHJvcCIsImNsYXNzTmFtZSIsImlzQWN0aXZlUHJvcCIsInN0eWxlUHJvcCIsImVzY2FwZWRQYXRoIiwiY2xhc3NuYW1lcyIsImpvaW5DbGFzc25hbWVzIiwiYXJpYS1jdXJyZW50Iiwib3JpZ2luYWxNb2R1bGUiLCJ3ZWJwYWNrUG9seWZpbGwiLCJjcmVhdGVUaHVua01pZGRsZXdhcmUiLCJleHRyYUFyZ3VtZW50IiwidGh1bmsiLCJ3aXRoRXh0cmFBcmd1bWVudCIsInJlZHVjZXJzXzEiLCJ1c2VycyIsInR5cGVzXzEiLCJGRVRDSF9VU0VSUyIsIlJlYWN0UmVkdXhDb250ZXh0IiwicmVhY3RfZGVmYXVsdCIsImJhdGNoX2JhdGNoIiwiZ2V0QmF0Y2giLCJDTEVBUkVEIiwibnVsbExpc3RlbmVycyIsIm5vdGlmeSIsIlN1YnNjcmlwdGlvbiIsInBhcmVudFN1YiIsImhhbmRsZUNoYW5nZVdyYXBwZXIiLCJhZGROZXN0ZWRTdWIiLCJ0cnlTdWJzY3JpYmUiLCJub3RpZnlOZXN0ZWRTdWJzIiwib25TdGF0ZUNoYW5nZSIsIkJvb2xlYW4iLCJiYXRjaCIsImNsZWFyIiwidHJ5VW5zdWJzY3JpYmUiLCJQcm92aWRlcl9Qcm92aWRlciIsIm5vdGlmeVN1YnNjcmliZXJzIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInN1YnNjcmlwdGlvbiIsInByZXZpb3VzU3RhdGUiLCJpbmhlcml0c0xvb3NlIiwiQ29udGV4dCIsInJlYWN0IiwicHJvcF90eXBlc19kZWZhdWx0IiwiY29tcG9uZW50c19Qcm92aWRlciIsIkVNUFRZX0FSUkFZIiwiTk9fU1VCU0NSSVBUSU9OX0FSUkFZIiwic3RvcmVTdGF0ZVVwZGF0ZXNSZWR1Y2VyIiwidXBkYXRlQ291bnQiLCJpbml0U3RhdGVVcGRhdGVzIiwidXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCIsImNvbm5lY3RBZHZhbmNlZCIsInNlbGVjdG9yRmFjdG9yeSIsIl9yZWYyJGdldERpc3BsYXlOYW1lIiwiZ2V0RGlzcGxheU5hbWUiLCJfcmVmMiRtZXRob2ROYW1lIiwiX3JlZjIkcmVuZGVyQ291bnRQcm9wIiwicmVuZGVyQ291bnRQcm9wIiwiX3JlZjIkc2hvdWxkSGFuZGxlU3RhIiwic2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzIiwiX3JlZjIkc3RvcmVLZXkiLCJzdG9yZUtleSIsIl9yZWYyJHdpdGhSZWYiLCJ3aXRoUmVmIiwiX3JlZjIkZm9yd2FyZFJlZiIsIl9yZWYyJGNvbnRleHQiLCJjb25uZWN0T3B0aW9ucyIsIm9iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UiLCJicm93c2VyX2RlZmF1bHQiLCJ3cmFwcGVkQ29tcG9uZW50TmFtZSIsInNlbGVjdG9yRmFjdG9yeU9wdGlvbnMiLCJwdXJlIiwidXNlUHVyZU9ubHlNZW1vIiwiQ29ubmVjdEZ1bmN0aW9uIiwiX3VzZU1lbW8iLCJmb3J3YXJkZWRSZWYiLCJwcm9wc0NvbnRleHQiLCJ3cmFwcGVyUHJvcHMiLCJDb250ZXh0VG9Vc2UiLCJyZWFjdF9pcyIsImNvbnRleHRWYWx1ZSIsImRpZFN0b3JlQ29tZUZyb21Qcm9wcyIsImRpZFN0b3JlQ29tZUZyb21Db250ZXh0IiwiY2hpbGRQcm9wc1NlbGVjdG9yIiwiY3JlYXRlQ2hpbGRTZWxlY3RvciIsIl91c2VNZW1vMiIsIm92ZXJyaWRkZW5Db250ZXh0VmFsdWUiLCJfdXNlUmVkdWNlciIsInByZXZpb3VzU3RhdGVVcGRhdGVSZXN1bHQiLCJmb3JjZUNvbXBvbmVudFVwZGF0ZURpc3BhdGNoIiwibGFzdENoaWxkUHJvcHMiLCJsYXN0V3JhcHBlclByb3BzIiwiY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSIsInJlbmRlcklzU2NoZWR1bGVkIiwiYWN0dWFsQ2hpbGRQcm9wcyIsImRpZFVuc3Vic2NyaWJlIiwibGFzdFRocm93bkVycm9yIiwiY2hlY2tGb3JVcGRhdGVzIiwibmV3Q2hpbGRQcm9wcyIsImxhdGVzdFN0b3JlU3RhdGUiLCJyZW5kZXJlZFdyYXBwZWRDb21wb25lbnQiLCJDb25uZWN0IiwiZm9yd2FyZGVkIiwiaG9pc3Rfbm9uX3JlYWN0X3N0YXRpY3NfY2pzX2RlZmF1bHQiLCJoYXNPd24iLCJzaGFsbG93RXF1YWwiLCJvYmpBIiwib2JqQiIsImtleXNBIiwia2V5c0IiLCJ3cmFwTWFwVG9Qcm9wc0NvbnN0YW50IiwiZ2V0Q29uc3RhbnQiLCJjb25zdGFudCIsImNvbnN0YW50U2VsZWN0b3IiLCJkZXBlbmRzT25Pd25Qcm9wcyIsImdldERlcGVuZHNPbk93blByb3BzIiwibWFwVG9Qcm9wcyIsIndyYXBNYXBUb1Byb3BzRnVuYyIsInByb3h5Iiwic3RhdGVPckRpc3BhdGNoIiwib3duUHJvcHMiLCJjb25uZWN0X21hcERpc3BhdGNoVG9Qcm9wcyIsIm1hcERpc3BhdGNoVG9Qcm9wcyIsInJlZHV4IiwiY29ubmVjdF9tYXBTdGF0ZVRvUHJvcHMiLCJtYXBTdGF0ZVRvUHJvcHMiLCJkZWZhdWx0TWVyZ2VQcm9wcyIsInN0YXRlUHJvcHMiLCJkaXNwYXRjaFByb3BzIiwiY29ubmVjdF9tZXJnZVByb3BzIiwibWVyZ2VQcm9wcyIsIm1lcmdlZFByb3BzIiwiYXJlTWVyZ2VkUHJvcHNFcXVhbCIsImhhc1J1bk9uY2UiLCJuZXh0TWVyZ2VkUHJvcHMiLCJ3cmFwTWVyZ2VQcm9wc0Z1bmMiLCJpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwicHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkiLCJhcmVTdGF0ZXNFcXVhbCIsImFyZU93blByb3BzRXF1YWwiLCJhcmVTdGF0ZVByb3BzRXF1YWwiLCJoYXNSdW5BdExlYXN0T25jZSIsImhhbmRsZVN1YnNlcXVlbnRDYWxscyIsIm5leHRPd25Qcm9wcyIsIm5leHRTdGF0ZVByb3BzIiwic3RhdGVQcm9wc0NoYW5nZWQiLCJwcm9wc0NoYW5nZWQiLCJzdGF0ZUNoYW5nZWQiLCJmaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwiaW5pdE1hcFN0YXRlVG9Qcm9wcyIsImluaXRNYXBEaXNwYXRjaFRvUHJvcHMiLCJpbml0TWVyZ2VQcm9wcyIsImZhY3RvcmllcyIsInN0cmljdEVxdWFsIiwiX3JlZiRjb25uZWN0SE9DIiwiY29ubmVjdEhPQyIsIl9yZWYkbWFwU3RhdGVUb1Byb3BzRiIsIm1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyIsIl9yZWYkbWFwRGlzcGF0Y2hUb1BybyIsIm1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyIsIl9yZWYkbWVyZ2VQcm9wc0ZhY3RvciIsIm1lcmdlUHJvcHNGYWN0b3JpZXMiLCJfcmVmJHNlbGVjdG9yRmFjdG9yeSIsIm5ld0JhdGNoIiwiY29ubmVjdF9jb25uZWN0IiwiX3JlZjMiLCJfcmVmMyRwdXJlIiwiX3JlZjMkYXJlU3RhdGVzRXF1YWwiLCJfcmVmMyRhcmVPd25Qcm9wc0VxdWEiLCJfcmVmMyRhcmVTdGF0ZVByb3BzRXEiLCJfcmVmMyRhcmVNZXJnZWRQcm9wc0UiLCJleHRyYU9wdGlvbnMiLCJyZWFjdF9kb20iLCJpc0J1ZmZlciIsImlzT2JqZWN0IiwiaXNGdW5jdGlvbiIsImlzQXJyYXlCdWZmZXIiLCJpc0Zvcm1EYXRhIiwiRm9ybURhdGEiLCJpc0FycmF5QnVmZmVyVmlldyIsIkFycmF5QnVmZmVyIiwiaXNWaWV3IiwiYnVmZmVyIiwiaXNTdHJpbmciLCJpc051bWJlciIsImlzVW5kZWZpbmVkIiwiaXNEYXRlIiwiaXNGaWxlIiwiaXNCbG9iIiwiaXNTdHJlYW0iLCJwaXBlIiwiaXNVUkxTZWFyY2hQYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJpc1N0YW5kYXJkQnJvd3NlckVudiIsInByb2R1Y3QiLCJtZXJnZSIsImFzc2lnblZhbHVlIiwidGhpc0FyZyIsInByb2Nlc3MiLCJ1dGlscyIsIm5vcm1hbGl6ZUhlYWRlck5hbWUiLCJERUZBVUxUX0NPTlRFTlRfVFlQRSIsIkNvbnRlbnQtVHlwZSIsInNldENvbnRlbnRUeXBlSWZVbnNldCIsImhlYWRlcnMiLCJhZGFwdGVyIiwiZGVmYXVsdHMiLCJYTUxIdHRwUmVxdWVzdCIsInRyYW5zZm9ybVJlcXVlc3QiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsInhzcmZDb29raWVOYW1lIiwieHNyZkhlYWRlck5hbWUiLCJtYXhDb250ZW50TGVuZ3RoIiwidmFsaWRhdGVTdGF0dXMiLCJzdGF0dXMiLCJjb21tb24iLCJBY2NlcHQiLCJzZXR0bGUiLCJidWlsZFVSTCIsInBhcnNlSGVhZGVycyIsImlzVVJMU2FtZU9yaWdpbiIsImNyZWF0ZUVycm9yIiwiYnRvYSIsImNvbmZpZyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVxdWVzdERhdGEiLCJyZXF1ZXN0SGVhZGVycyIsInJlcXVlc3QiLCJsb2FkRXZlbnQiLCJ4RG9tYWluIiwiWERvbWFpblJlcXVlc3QiLCJvbnByb2dyZXNzIiwib250aW1lb3V0IiwiYXV0aCIsInVzZXJuYW1lIiwiQXV0aG9yaXphdGlvbiIsIm9wZW4iLCJwYXJhbXNTZXJpYWxpemVyIiwicmVhZHlTdGF0ZSIsInJlc3BvbnNlVVJMIiwicmVzcG9uc2VIZWFkZXJzIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwicmVzcG9uc2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJzdGF0dXNUZXh0Iiwib25lcnJvciIsImNvb2tpZXMiLCJ4c3JmVmFsdWUiLCJ3aXRoQ3JlZGVudGlhbHMiLCJyZWFkIiwic2V0UmVxdWVzdEhlYWRlciIsIm9uRG93bmxvYWRQcm9ncmVzcyIsIm9uVXBsb2FkUHJvZ3Jlc3MiLCJ1cGxvYWQiLCJjYW5jZWxUb2tlbiIsInByb21pc2UiLCJjYW5jZWwiLCJhYm9ydCIsInNlbmQiLCJlbmhhbmNlRXJyb3IiLCJjb2RlIiwiX19DQU5DRUxfXyIsIkNhbmNlbCIsIl9faW1wb3J0U3RhciIsImFjdGlvbnNfMSIsImNvbm5lY3QiLCJmZXRjaFVzZXJzIiwidXNlciIsImF4aW9zXzEiLCJfX2F3YWl0ZXIiLCJfYSIsInNlbnQiLCJBeGlvcyIsImNyZWF0ZUluc3RhbmNlIiwiZGVmYXVsdENvbmZpZyIsImF4aW9zIiwiaW5zdGFuY2VDb25maWciLCJDYW5jZWxUb2tlbiIsImlzQ2FuY2VsIiwiYWxsIiwicHJvbWlzZXMiLCJzcHJlYWQiLCJyZWFkRmxvYXRMRSIsImlzU2xvd0J1ZmZlciIsIl9pc0J1ZmZlciIsIkludGVyY2VwdG9yTWFuYWdlciIsImRpc3BhdGNoUmVxdWVzdCIsImludGVyY2VwdG9ycyIsImludGVyY2VwdG9yIiwiZnVsZmlsbGVkIiwicmVqZWN0ZWQiLCJzaGlmdCIsImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJjdXJyZW50UXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpblF1ZXVlIiwibGVuIiwicnVuIiwibWFya2VyIiwicnVuQ2xlYXJUaW1lb3V0IiwiSXRlbSIsIm5leHRUaWNrIiwidGl0bGUiLCJicm93c2VyIiwiZW52IiwiYXJndiIsInZlcnNpb25zIiwiYWRkTGlzdGVuZXIiLCJvbmNlIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJlbWl0IiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsImRpciIsInVtYXNrIiwibm9ybWFsaXplZE5hbWUiLCJzZXJpYWxpemVkUGFyYW1zIiwidG9JU09TdHJpbmciLCJpZ25vcmVEdXBsaWNhdGVPZiIsInBhcnNlZCIsImxpbmUiLCJvcmlnaW5VUkwiLCJtc2llIiwidXJsUGFyc2luZ05vZGUiLCJyZXNvbHZlVVJMIiwicHJvdG9jb2wiLCJob3N0IiwiaG9zdG5hbWUiLCJwb3J0IiwicmVxdWVzdFVSTCIsImNoYXJzIiwib3V0cHV0IiwiaWR4Iiwid3JpdGUiLCJleHBpcmVzIiwiZG9tYWluIiwic2VjdXJlIiwiY29va2llIiwidG9HTVRTdHJpbmciLCJkZWNvZGVVUklDb21wb25lbnQiLCJyZW1vdmUiLCJ1c2UiLCJlamVjdCIsInRyYW5zZm9ybURhdGEiLCJpc0Fic29sdXRlVVJMIiwiY29tYmluZVVSTHMiLCJ0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkIiwidGhyb3dJZlJlcXVlc3RlZCIsImJhc2VVUkwiLCJyZWFzb24iLCJmbnMiLCJyZWxhdGl2ZVVSTCIsImV4ZWN1dG9yIiwicmVzb2x2ZVByb21pc2UiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEVBQUEsR0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxHQUFBLENBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsUUFBQSxJQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxFQUFBLENBQTBDSyxZQUFBLEVBQUFDLElBQUFMLEtBSzFDWixFQUFBa0IsRUFBQSxTQUFBaEIsR0FDQSxvQkFBQWlCLGVBQUFDLGFBQ0FOLE9BQUFDLGVBQUFiLEVBQUFpQixPQUFBQyxZQUFBLENBQXdEQyxNQUFBLFdBRXhEUCxPQUFBQyxlQUFBYixFQUFBLGNBQWlEbUIsT0FBQSxLQVFqRHJCLEVBQUFzQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBckIsRUFBQXFCLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFGLFFBQUFHLFdBQUEsT0FBQUgsRUFDQSxJQUFBSSxFQUFBWCxPQUFBWSxPQUFBLE1BR0EsR0FGQTFCLEVBQUFrQixFQUFBTyxHQUNBWCxPQUFBQyxlQUFBVSxFQUFBLFdBQXlDVCxZQUFBLEVBQUFLLFVBQ3pDLEVBQUFFLEdBQUEsaUJBQUFGLEVBQUEsUUFBQU0sS0FBQU4sRUFBQXJCLEVBQUFVLEVBQUFlLEVBQUFFLEVBQUEsU0FBQUEsR0FBZ0gsT0FBQU4sRUFBQU0sSUFBcUJDLEtBQUEsS0FBQUQsSUFDckksT0FBQUYsR0FJQXpCLEVBQUE2QixFQUFBLFNBQUExQixHQUNBLElBQUFTLEVBQUFULEtBQUFxQixXQUNBLFdBQTJCLE9BQUFyQixFQUFBLFNBQzNCLFdBQWlDLE9BQUFBLEdBRWpDLE9BREFILEVBQUFVLEVBQUFFLEVBQUEsSUFBQUEsR0FDQUEsR0FJQVosRUFBQWEsRUFBQSxTQUFBaUIsRUFBQUMsR0FBc0QsT0FBQWpCLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQXVCLEVBQUFDLElBR3REL0IsRUFBQWtDLEVBQUEsR0FJQWxDLElBQUFtQyxFQUFBLG1DQy9FQWhDLEVBQUFELFFBQW1CRixFQUFRLGtDQ0haLFNBQUFvQyxJQWVmLE9BZEFBLEVBQUF0QixPQUFBdUIsUUFBQSxTQUFBQyxHQUNBLFFBQUFsQyxFQUFBLEVBQW1CQSxFQUFBbUMsVUFBQUMsT0FBc0JwQyxJQUFBLENBQ3pDLElBQUFxQyxFQUFBRixVQUFBbkMsR0FFQSxRQUFBdUIsS0FBQWMsRUFDQTNCLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQWtDLEVBQUFkLEtBQ0FXLEVBQUFYLEdBQUFjLEVBQUFkLElBS0EsT0FBQVcsSUFHQUksTUFBQUMsS0FBQUosV0FmQXZDLEVBQUFVLEVBQUFrQyxFQUFBLHNCQUFBUixrQ0NBZSxTQUFBUyxFQUFBSixFQUFBSyxHQUNmLFNBQUFMLEVBQUEsU0FDQSxJQUVBZCxFQUFBdkIsRUFGQWtDLEVBQUEsR0FDQVMsRUFBQWpDLE9BQUFrQyxLQUFBUCxHQUdBLElBQUFyQyxFQUFBLEVBQWFBLEVBQUEyQyxFQUFBUCxPQUF1QnBDLElBQ3BDdUIsRUFBQW9CLEVBQUEzQyxHQUNBMEMsRUFBQUcsUUFBQXRCLElBQUEsSUFDQVcsRUFBQVgsR0FBQWMsRUFBQWQsSUFHQSxPQUFBVyxFQVpBdEMsRUFBQVUsRUFBQWtDLEVBQUEsc0JBQUFDLGtDQ0FlLFNBQUFLLEVBQUFDLEVBQUFDLEdBQ2ZELEVBQUFuQixVQUFBbEIsT0FBQVksT0FBQTBCLEVBQUFwQixXQUNBbUIsRUFBQW5CLFVBQUFxQixZQUFBRixFQUNBQSxFQUFBRyxVQUFBRixFQUhBcEQsRUFBQVUsRUFBQWtDLEVBQUEsc0JBQUFNLGtDQ0FBLElBQUFLLEdBQW1CLEVBQ25CQyxFQUFBLG1CQWFlWixFQUFBLEVBWmYsU0FBQWEsRUFBQUMsR0FDQSxJQUFBRCxFQUlBLE1BQUFGLEVBQ0EsSUFBQUksTUFBQUgsR0FFQSxJQUFBRyxNQUFBSCxFQUFBLE1BQUFFLEdBQUEsK0NDVkEsU0FBQUUsRUFBQUMsR0FDQSxZQUFBQSxFQUFBQyxPQUFBLEdBSUEsU0FBQUMsRUFBQUMsRUFBQUMsR0FDQSxRQUFBN0QsRUFBQTZELEVBQUFDLEVBQUE5RCxFQUFBLEVBQUF5QixFQUFBbUMsRUFBQXhCLE9BQWlEMEIsRUFBQXJDLEVBQU96QixHQUFBLEVBQUE4RCxHQUFBLEVBQ3hERixFQUFBNUQsR0FBQTRELEVBQUFFLEdBR0FGLEVBQUFHLE1BMkRlLElBQUFDLEVBdkRmLFNBQUFDLEdBQ0EsSUFBQUMsRUFBQS9CLFVBQUFDLE9BQUEsUUFBQStCLElBQUFoQyxVQUFBLEdBQUFBLFVBQUEsTUFFQWlDLEVBQUFILEtBQUFJLE1BQUEsU0FDQUMsRUFBQUosS0FBQUcsTUFBQSxTQUVBRSxFQUFBTixHQUFBVCxFQUFBUyxHQUNBTyxFQUFBTixHQUFBVixFQUFBVSxHQUNBTyxFQUFBRixHQUFBQyxFQVdBLEdBVEFQLEdBQUFULEVBQUFTLEdBRUFLLEVBQUFGLEVBQ0dBLEVBQUFoQyxTQUVIa0MsRUFBQVAsTUFDQU8sSUFBQUksT0FBQU4sS0FHQUUsRUFBQWxDLE9BQUEsVUFFQSxJQUFBdUMsT0FBQSxFQUNBLEdBQUFMLEVBQUFsQyxPQUFBLENBQ0EsSUFBQXdDLEVBQUFOLElBQUFsQyxPQUFBLEdBQ0F1QyxFQUFBLE1BQUFDLEdBQUEsT0FBQUEsR0FBQSxLQUFBQSxPQUVBRCxHQUFBLEVBSUEsSUFEQSxJQUFBRSxFQUFBLEVBQ0E3RSxFQUFBc0UsRUFBQWxDLE9BQWdDcEMsR0FBQSxFQUFRQSxJQUFBLENBQ3hDLElBQUE4RSxFQUFBUixFQUFBdEUsR0FFQSxNQUFBOEUsRUFDQW5CLEVBQUFXLEVBQUF0RSxHQUNLLE9BQUE4RSxHQUNMbkIsRUFBQVcsRUFBQXRFLEdBQ0E2RSxLQUNLQSxJQUNMbEIsRUFBQVcsRUFBQXRFLEdBQ0E2RSxLQUlBLElBQUFKLEVBQUEsS0FBeUJJLElBQU1BLEVBQy9CUCxFQUFBUyxRQUFBLE9BQ0dOLEdBQUEsS0FBQUgsRUFBQSxJQUFBQSxFQUFBLElBQUFkLEVBQUFjLEVBQUEsS0FBQUEsRUFBQVMsUUFBQSxJQUVILElBQUFDLEVBQUFWLEVBQUFXLEtBQUEsS0FJQSxPQUZBTixHQUFBLE1BQUFLLEVBQUFFLFFBQUEsS0FBQUYsR0FBQSxLQUVBQSxHQ2xFQUcsRUFBQSxtQkFBQXBFLFFBQUEsaUJBQUFBLE9BQUFxRSxTQUFBLFNBQUFDLEdBQW9HLGNBQUFBLEdBQXFCLFNBQUFBLEdBQW1CLE9BQUFBLEdBQUEsbUJBQUF0RSxRQUFBc0UsRUFBQXBDLGNBQUFsQyxRQUFBc0UsSUFBQXRFLE9BQUFhLFVBQUEsZ0JBQUF5RCxHQXFDN0gsSUFBQUMsRUFuQ2YsU0FBQUMsRUFBQUMsRUFBQUMsR0FDQSxHQUFBRCxJQUFBQyxFQUFBLFNBRUEsU0FBQUQsR0FBQSxNQUFBQyxFQUFBLFNBRUEsR0FBQUMsTUFBQUMsUUFBQUgsR0FDQSxPQUFBRSxNQUFBQyxRQUFBRixJQUFBRCxFQUFBcEQsU0FBQXFELEVBQUFyRCxRQUFBb0QsRUFBQUksTUFBQSxTQUFBQyxFQUFBaEMsR0FDQSxPQUFBMEIsRUFBQU0sRUFBQUosRUFBQTVCLE1BSUEsSUFBQWlDLE9BQUEsSUFBQU4sRUFBQSxZQUFBTCxFQUFBSyxHQUdBLEdBQUFNLFVBRkEsSUFBQUwsRUFBQSxZQUFBTixFQUFBTSxJQUVBLFNBRUEsY0FBQUssRUFBQSxDQUNBLElBQUFDLEVBQUFQLEVBQUFRLFVBQ0FDLEVBQUFSLEVBQUFPLFVBRUEsR0FBQUQsSUFBQVAsR0FBQVMsSUFBQVIsRUFBQSxPQUFBRixFQUFBUSxFQUFBRSxHQUVBLElBQUFDLEVBQUF4RixPQUFBa0MsS0FBQTRDLEdBQ0FXLEVBQUF6RixPQUFBa0MsS0FBQTZDLEdBRUEsT0FBQVMsRUFBQTlELFNBQUErRCxFQUFBL0QsUUFFQThELEVBQUFOLE1BQUEsU0FBQXJFLEdBQ0EsT0FBQWdFLEVBQUFDLEVBQUFqRSxHQUFBa0UsRUFBQWxFLE1BSUEsaUJDNUJBLFNBQUE2RSxFQUFBQyxHQUNBLFlBQUFBLEVBQUEzQyxPQUFBLEdBQUEyQyxFQUFBLElBQUFBLEVBRUEsU0FBQUMsRUFBQUQsR0FDQSxZQUFBQSxFQUFBM0MsT0FBQSxHQUFBMkMsRUFBQW5CLE9BQUEsR0FBQW1CLEVBS0EsU0FBQUUsRUFBQUYsRUFBQWpELEdBQ0EsT0FKQSxTQUFBaUQsRUFBQWpELEdBQ0EsV0FBQW9ELE9BQUEsSUFBQXBELEVBQUEscUJBQUFxRCxLQUFBSixHQUdBSyxDQUFBTCxFQUFBakQsR0FBQWlELEVBQUFuQixPQUFBOUIsRUFBQWhCLFFBQUFpRSxFQUVBLFNBQUFNLEVBQUFOLEdBQ0EsWUFBQUEsRUFBQTNDLE9BQUEyQyxFQUFBakUsT0FBQSxHQUFBaUUsRUFBQU8sTUFBQSxNQUFBUCxFQTBCQSxTQUFBUSxFQUFBQyxHQUNBLElBQUFyRCxFQUFBcUQsRUFBQXJELFNBQ0FzRCxFQUFBRCxFQUFBQyxPQUNBQyxFQUFBRixFQUFBRSxLQUNBWCxFQUFBNUMsR0FBQSxJQUdBLE9BRkFzRCxHQUFBLE1BQUFBLElBQUFWLEdBQUEsTUFBQVUsRUFBQXJELE9BQUEsR0FBQXFELEVBQUEsSUFBQUEsR0FDQUMsR0FBQSxNQUFBQSxJQUFBWCxHQUFBLE1BQUFXLEVBQUF0RCxPQUFBLEdBQUFzRCxFQUFBLElBQUFBLEdBQ0FYLEVBR0EsU0FBQVksRUFBQVosRUFBQWEsRUFBQTNGLEVBQUE0RixHQUNBLElBQUFMLEVBRUEsaUJBQUFULEdBRUFTLEVBdkNBLFNBQUFULEdBQ0EsSUFBQTVDLEVBQUE0QyxHQUFBLElBQ0FVLEVBQUEsR0FDQUMsRUFBQSxHQUNBSSxFQUFBM0QsRUFBQVosUUFBQSxNQUVBLElBQUF1RSxJQUNBSixFQUFBdkQsRUFBQXlCLE9BQUFrQyxHQUNBM0QsSUFBQXlCLE9BQUEsRUFBQWtDLElBR0EsSUFBQUMsRUFBQTVELEVBQUFaLFFBQUEsS0FPQSxPQUxBLElBQUF3RSxJQUNBTixFQUFBdEQsRUFBQXlCLE9BQUFtQyxHQUNBNUQsSUFBQXlCLE9BQUEsRUFBQW1DLElBR0EsQ0FDQTVELFdBQ0FzRCxPQUFBLE1BQUFBLEVBQUEsR0FBQUEsRUFDQUMsS0FBQSxNQUFBQSxFQUFBLEdBQUFBLEdBa0JBTSxDQUFBakIsSUFDQWEsY0FJQS9DLEtBREEyQyxFQUFlcEcsT0FBQTZHLEVBQUEsRUFBQTdHLENBQVEsR0FBRzJGLElBQzFCNUMsV0FBQXFELEVBQUFyRCxTQUFBLElBRUFxRCxFQUFBQyxPQUNBLE1BQUFELEVBQUFDLE9BQUFyRCxPQUFBLEtBQUFvRCxFQUFBQyxPQUFBLElBQUFELEVBQUFDLFFBRUFELEVBQUFDLE9BQUEsR0FHQUQsRUFBQUUsS0FDQSxNQUFBRixFQUFBRSxLQUFBdEQsT0FBQSxLQUFBb0QsRUFBQUUsS0FBQSxJQUFBRixFQUFBRSxNQUVBRixFQUFBRSxLQUFBLFFBR0E3QyxJQUFBK0MsUUFBQS9DLElBQUEyQyxFQUFBSSxRQUFBSixFQUFBSSxVQUdBLElBQ0FKLEVBQUFyRCxTQUFBK0QsVUFBQVYsRUFBQXJELFVBQ0csTUFBQWdFLEdBQ0gsTUFBQUEsYUFBQUMsU0FDQSxJQUFBQSxTQUFBLGFBQUFaLEVBQUFyRCxTQUFBLGlGQUVBZ0UsRUFvQkEsT0FoQkFsRyxJQUFBdUYsRUFBQXZGLE9BRUE0RixFQUVBTCxFQUFBckQsU0FFSyxNQUFBcUQsRUFBQXJELFNBQUFDLE9BQUEsS0FDTG9ELEVBQUFyRCxTQUEwQk8sRUFBZThDLEVBQUFyRCxTQUFBMEQsRUFBQTFELFdBRnpDcUQsRUFBQXJELFNBQUEwRCxFQUFBMUQsU0FNQXFELEVBQUFyRCxXQUNBcUQsRUFBQXJELFNBQUEsS0FJQXFELEVBRUEsU0FBQWEsRUFBQW5DLEVBQUFDLEdBQ0EsT0FBQUQsRUFBQS9CLFdBQUFnQyxFQUFBaEMsVUFBQStCLEVBQUF1QixTQUFBdEIsRUFBQXNCLFFBQUF2QixFQUFBd0IsT0FBQXZCLEVBQUF1QixNQUFBeEIsRUFBQWpFLE1BQUFrRSxFQUFBbEUsS0FBdUcrRCxFQUFVRSxFQUFBMEIsTUFBQXpCLEVBQUF5QixPQUdqSCxTQUFBVSxJQUNBLElBQUFDLEVBQUEsS0FpQ0EsSUFBQUMsRUFBQSxHQTRCQSxPQUNBQyxVQTVEQSxTQUFBQyxHQUdBLE9BREFILEVBQUFHLEVBQ0EsV0FDQUgsSUFBQUcsSUFBQUgsRUFBQSxRQXlEQUksb0JBckRBLFNBQUFuQixFQUFBb0IsRUFBQUMsRUFBQUMsR0FJQSxTQUFBUCxFQUFBLENBQ0EsSUFBQTdDLEVBQUEsbUJBQUE2QyxJQUFBZixFQUFBb0IsR0FBQUwsRUFFQSxpQkFBQTdDLEVBQ0EsbUJBQUFtRCxFQUNBQSxFQUFBbkQsRUFBQW9ELEdBR0FBLEdBQUEsR0FJQUEsR0FBQSxJQUFBcEQsUUFHQW9ELEdBQUEsSUFtQ0FDLGVBN0JBLFNBQUFDLEdBQ0EsSUFBQUMsR0FBQSxFQUVBLFNBQUFDLElBQ0FELEdBQUFELEVBQUFoRyxXQUFBLEVBQUFILFdBSUEsT0FEQTJGLEVBQUFXLEtBQUFELEdBQ0EsV0FDQUQsR0FBQSxFQUNBVCxJQUFBWSxPQUFBLFNBQUE3QyxHQUNBLE9BQUFBLElBQUEyQyxNQW1CQUcsZ0JBZEEsV0FDQSxRQUFBQyxFQUFBekcsVUFBQUMsT0FBQXlHLEVBQUEsSUFBQW5ELE1BQUFrRCxHQUFBRSxFQUFBLEVBQXVFQSxFQUFBRixFQUFhRSxJQUNwRkQsRUFBQUMsR0FBQTNHLFVBQUEyRyxHQUdBaEIsRUFBQWlCLFFBQUEsU0FBQVAsR0FDQSxPQUFBQSxFQUFBbEcsV0FBQSxFQUFBdUcsT0E1S0FqSixFQUFBVSxFQUFBa0MsRUFBQSxzQkFBQXdHLElBQUFwSixFQUFBVSxFQUFBa0MsRUFBQSxzQkFBQXlHLElBQUFySixFQUFBVSxFQUFBa0MsRUFBQSxzQkFBQTBHLElBQUF0SixFQUFBVSxFQUFBa0MsRUFBQSxzQkFBQXlFLElBQUFySCxFQUFBVSxFQUFBa0MsRUFBQSxzQkFBQW1GLElBQUEvSCxFQUFBVSxFQUFBa0MsRUFBQSxzQkFBQXFFLElBd0xBLElBQUFzQyxJQUFBLG9CQUFBQyxnQkFBQUMsV0FBQUQsT0FBQUMsU0FBQUMsZUFDQSxTQUFBQyxFQUFBakcsRUFBQThFLEdBQ0FBLEVBQUFnQixPQUFBSSxRQUFBbEcsSUF3Q0EsSUFBQW1HLEVBQUEsV0FDQUMsRUFBQSxhQUVBLFNBQUFDLElBQ0EsSUFDQSxPQUFBUCxPQUFBUSxRQUFBMUMsT0FBQSxHQUNHLE1BQUFPLEdBR0gsVUFTQSxTQUFBdUIsRUFBQWEsUUFDQSxJQUFBQSxJQUNBQSxFQUFBLElBR0FWLEdBQXlHekksT0FBQW9KLEVBQUEsRUFBQXBKLEVBQVMsR0FDbEgsSUFyREFxSixFQXFEQUMsRUFBQVosT0FBQVEsUUFDQUssSUFyREEsS0FEQUYsRUFBQVgsT0FBQWMsVUFBQUMsV0FDQXRILFFBQUEsb0JBQUFrSCxFQUFBbEgsUUFBQSxxQkFBQWtILEVBQUFsSCxRQUFBLHVCQUFBa0gsRUFBQWxILFFBQUEsZ0JBQUFrSCxFQUFBbEgsUUFBQSxtQkFDQXVHLE9BQUFRLFNBQUEsY0FBQVIsT0FBQVEsUUFxREFRLEtBN0NBLElBQUFoQixPQUFBYyxVQUFBQyxVQUFBdEgsUUFBQSxZQThDQXdILEVBQUFSLEVBQ0FTLEVBQUFELEVBQUFFLGFBQ0FBLE9BQUEsSUFBQUQsS0FDQUUsRUFBQUgsRUFBQWxDLG9CQUNBQSxPQUFBLElBQUFxQyxFQUFBakIsRUFBQWlCLEVBQ0FDLEVBQUFKLEVBQUFLLFVBQ0FBLE9BQUEsSUFBQUQsRUFBQSxFQUFBQSxFQUNBRSxFQUFBZCxFQUFBYyxTQUFBaEUsRUFBQVAsRUFBQXlELEVBQUFjLFdBQUEsR0FFQSxTQUFBQyxFQUFBQyxHQUNBLElBQUFDLEVBQUFELEdBQUEsR0FDQXRKLEVBQUF1SixFQUFBdkosSUFDQTJGLEVBQUE0RCxFQUFBNUQsTUFFQTZELEVBQUEzQixPQUFBdEMsU0FJQVQsRUFIQTBFLEVBQUF0SCxTQUNBc0gsRUFBQWhFLE9BQ0FnRSxFQUFBL0QsS0FJQSxPQURBMkQsSUFBQXRFLEVBQUFFLEVBQUFGLEVBQUFzRSxJQUNBMUQsRUFBQVosRUFBQWEsRUFBQTNGLEdBR0EsU0FBQXlKLElBQ0EsT0FBQUMsS0FBQUMsU0FBQUMsU0FBQSxJQUFBakcsT0FBQSxFQUFBd0YsR0FHQSxJQUFBVSxFQUFBeEQsSUFFQSxTQUFBeUQsRUFBQUMsR0FDSTVLLE9BQUE2RyxFQUFBLEVBQUE3RyxDQUFRa0osRUFBQTBCLEdBRVoxQixFQUFBeEgsT0FBQTRILEVBQUE1SCxPQUNBZ0osRUFBQXpDLGdCQUFBaUIsRUFBQTlDLFNBQUE4QyxFQUFBMUIsUUFHQSxTQUFBcUQsRUFBQUMsSUFwRUEsU0FBQUEsUUFDQXJILElBQUFxSCxFQUFBdEUsT0FBQWdELFVBQUFDLFVBQUF0SCxRQUFBLFVBcUVBNEksQ0FBQUQsSUFDQUUsRUFBQWQsRUFBQVksRUFBQXRFLFFBR0EsU0FBQXlFLElBQ0FELEVBQUFkLEVBQUFqQixNQUdBLElBQUFpQyxHQUFBLEVBRUEsU0FBQUYsRUFBQTVFLEdBQ0EsR0FBQThFLEVBQ0FBLEdBQUEsRUFDQVAsUUFDSyxDQUVMRCxFQUFBbkQsb0JBQUFuQixFQURBLE1BQ0FxQixFQUFBLFNBQUEwRCxHQUNBQSxFQUNBUixFQUFBLENBQ0FuRCxPQUpBLE1BS0FwQixhQVNBLFNBQUFnRixHQUNBLElBQUFDLEVBQUFuQyxFQUFBOUMsU0FJQWtGLEVBQUFDLEVBQUFwSixRQUFBa0osRUFBQXhLLE1BQ0EsSUFBQXlLLE1BQUEsR0FDQSxJQUFBRSxFQUFBRCxFQUFBcEosUUFBQWlKLEVBQUF2SyxNQUNBLElBQUEySyxNQUFBLEdBQ0EsSUFBQUMsRUFBQUgsRUFBQUUsRUFFQUMsSUFDQVAsR0FBQSxFQUNBUSxFQUFBRCxJQW5CQUUsQ0FBQXZGLE1BdUJBLElBQUF3RixFQUFBMUIsRUFBQWpCLEtBQ0FzQyxFQUFBLENBQUFLLEVBQUEvSyxLQUVBLFNBQUFnTCxFQUFBekYsR0FDQSxPQUFBNkQsRUFBQTlELEVBQUFDLEdBdUVBLFNBQUFzRixFQUFBM0ssR0FDQXVJLEVBQUFvQyxHQUFBM0ssR0FXQSxJQUFBK0ssRUFBQSxFQUVBLFNBQUFDLEVBQUFOLEdBR0EsS0FGQUssR0FBQUwsSUFFQSxJQUFBQSxHQUNBL0MsT0FBQXNELGlCQUFBakQsRUFBQThCLEdBQ0FuQixHQUFBaEIsT0FBQXNELGlCQUFBaEQsRUFBQWlDLElBQ0ssSUFBQWEsSUFDTHBELE9BQUF1RCxvQkFBQWxELEVBQUE4QixHQUNBbkIsR0FBQWhCLE9BQUF1RCxvQkFBQWpELEVBQUFpQyxJQUlBLElBQUFpQixHQUFBLEVBaUNBLElBQUFoRCxFQUFBLENBQ0F4SCxPQUFBNEgsRUFBQTVILE9BQ0E4RixPQUFBLE1BQ0FwQixTQUFBd0YsRUFDQUMsYUFDQTlELEtBcElBLFNBQUFwQyxFQUFBYSxHQUVBLElBQ0FKLEVBQUFHLEVBQUFaLEVBQUFhLEVBQUE4RCxJQUFBcEIsRUFBQTlDLFVBQ0FzRSxFQUFBbkQsb0JBQUFuQixFQUZBLE9BRUFxQixFQUFBLFNBQUEwRCxHQUNBLEdBQUFBLEVBQUEsQ0FDQSxJQUFBZ0IsRUFBQU4sRUFBQXpGLEdBQ0F2RixFQUFBdUYsRUFBQXZGLElBQ0EyRixFQUFBSixFQUFBSSxNQUVBLEdBQUErQyxFQU1BLEdBTEFELEVBQUE4QyxVQUFBLENBQ0F2TCxNQUNBMkYsU0FDUyxLQUFBMkYsR0FFVHRDLEVBQ0FuQixPQUFBdEMsU0FBQStGLFdBQ1MsQ0FDVCxJQUFBRSxFQUFBZCxFQUFBcEosUUFBQStHLEVBQUE5QyxTQUFBdkYsS0FDQXlMLEVBQUFmLEVBQUFyRixNQUFBLE9BQUFtRyxFQUFBLEVBQUFBLEVBQUEsR0FDQUMsRUFBQXZFLEtBQUEzQixFQUFBdkYsS0FDQTBLLEVBQUFlLEVBQ0EzQixFQUFBLENBQ0FuRCxPQXRCQSxPQXVCQXBCLGtCQUtBc0MsT0FBQXRDLFNBQUErRixXQXVHQUksUUFsR0EsU0FBQTVHLEVBQUFhLEdBRUEsSUFDQUosRUFBQUcsRUFBQVosRUFBQWEsRUFBQThELElBQUFwQixFQUFBOUMsVUFDQXNFLEVBQUFuRCxvQkFBQW5CLEVBRkEsVUFFQXFCLEVBQUEsU0FBQTBELEdBQ0EsR0FBQUEsRUFBQSxDQUNBLElBQUFnQixFQUFBTixFQUFBekYsR0FDQXZGLEVBQUF1RixFQUFBdkYsSUFDQTJGLEVBQUFKLEVBQUFJLE1BRUEsR0FBQStDLEVBTUEsR0FMQUQsRUFBQWtELGFBQUEsQ0FDQTNMLE1BQ0EyRixTQUNTLEtBQUEyRixHQUVUdEMsRUFDQW5CLE9BQUF0QyxTQUFBbUcsUUFBQUosT0FDUyxDQUNULElBQUFFLEVBQUFkLEVBQUFwSixRQUFBK0csRUFBQTlDLFNBQUF2RixNQUNBLElBQUF3TCxJQUFBZCxFQUFBYyxHQUFBakcsRUFBQXZGLEtBQ0E4SixFQUFBLENBQ0FuRCxPQXBCQSxVQXFCQXBCLGtCQUtBc0MsT0FBQXRDLFNBQUFtRyxRQUFBSixPQXVFQVQsS0FDQWUsT0EvREEsV0FDQWYsR0FBQSxJQStEQWdCLFVBNURBLFdBQ0FoQixFQUFBLElBNERBaUIsTUF6Q0EsU0FBQXhGLFFBQ0EsSUFBQUEsSUFDQUEsR0FBQSxHQUdBLElBQUF5RixFQUFBbEMsRUFBQXJELFVBQUFGLEdBT0EsT0FMQStFLElBQ0FILEVBQUEsR0FDQUcsR0FBQSxHQUdBLFdBTUEsT0FMQUEsSUFDQUEsR0FBQSxFQUNBSCxHQUFBLElBR0FhLE1Bd0JBQyxPQXBCQSxTQUFBL0UsR0FDQSxJQUFBZ0YsRUFBQXBDLEVBQUEvQyxlQUFBRyxHQUVBLE9BREFpRSxFQUFBLEdBQ0EsV0FDQUEsR0FBQSxHQUNBZSxPQWlCQSxPQUFBNUQsRUFHQSxJQUFBNkQsRUFBQSxhQUNBQyxFQUFBLENBQ0FDLFNBQUEsQ0FDQUMsV0FBQSxTQUFBdkgsR0FDQSxZQUFBQSxFQUFBM0MsT0FBQSxHQUFBMkMsRUFBQSxLQUFBQyxFQUFBRCxJQUVBd0gsV0FBQSxTQUFBeEgsR0FDQSxZQUFBQSxFQUFBM0MsT0FBQSxHQUFBMkMsRUFBQW5CLE9BQUEsR0FBQW1CLElBR0F5SCxRQUFBLENBQ0FGLFdBQUF0SCxFQUNBdUgsV0FBQXpILEdBRUEySCxNQUFBLENBQ0FILFdBQUF4SCxFQUNBeUgsV0FBQXpILElBSUEsU0FBQTRILElBR0EsSUFBQW5CLEVBQUF6RCxPQUFBdEMsU0FBQStGLEtBQ0F6RixFQUFBeUYsRUFBQWhLLFFBQUEsS0FDQSxXQUFBdUUsRUFBQSxHQUFBeUYsRUFBQW9CLFVBQUE3RyxFQUFBLEdBT0EsU0FBQThHLEVBQUE3SCxHQUNBLElBQUFlLEVBQUFnQyxPQUFBdEMsU0FBQStGLEtBQUFoSyxRQUFBLEtBQ0F1RyxPQUFBdEMsU0FBQW1HLFFBQUE3RCxPQUFBdEMsU0FBQStGLEtBQUFqRyxNQUFBLEVBQUFRLEdBQUEsRUFBQUEsRUFBQSxPQUFBZixHQUdBLFNBQUE0QyxFQUFBWSxRQUNBLElBQUFBLElBQ0FBLEVBQUEsSUFHQVYsR0FBc0d6SSxPQUFBb0osRUFBQSxFQUFBcEosRUFBUyxHQUMvRyxJQUFBc0osRUFBQVosT0FBQVEsUUFFQVMsR0EvVEFqQixPQUFBYyxVQUFBQyxVQUFBdEgsUUFBQSxXQStUQWdILEdBQ0FXLEVBQUFILEVBQUFsQyxvQkFDQUEsT0FBQSxJQUFBcUMsRUFBQWpCLEVBQUFpQixFQUNBMkQsRUFBQTlELEVBQUErRCxTQUNBQSxPQUFBLElBQUFELEVBQUEsUUFBQUEsRUFDQXhELEVBQUFkLEVBQUFjLFNBQUFoRSxFQUFBUCxFQUFBeUQsRUFBQWMsV0FBQSxHQUNBMEQsRUFBQVgsRUFBQVUsR0FDQVIsRUFBQVMsRUFBQVQsV0FDQUMsRUFBQVEsRUFBQVIsV0FFQSxTQUFBakQsSUFDQSxJQUFBdkUsRUFBQXdILEVBQUFHLEtBR0EsT0FEQXJELElBQUF0RSxFQUFBRSxFQUFBRixFQUFBc0UsSUFDQTFELEVBQUFaLEdBR0EsSUFBQStFLEVBQUF4RCxJQUVBLFNBQUF5RCxFQUFBQyxHQUNJNUssT0FBQTZHLEVBQUEsRUFBQTdHLENBQVFrSixFQUFBMEIsR0FFWjFCLEVBQUF4SCxPQUFBNEgsRUFBQTVILE9BQ0FnSixFQUFBekMsZ0JBQUFpQixFQUFBOUMsU0FBQThDLEVBQUExQixRQUdBLElBQUEwRCxHQUFBLEVBQ0EwQyxFQUFBLEtBRUEsU0FBQTNDLElBQ0EsSUFBQXRGLEVBQUEySCxJQUNBTyxFQUFBWCxFQUFBdkgsR0FFQSxHQUFBQSxJQUFBa0ksRUFFQUwsRUFBQUssT0FDSyxDQUNMLElBQUF6SCxFQUFBOEQsSUFDQTRELEVBQUE1RSxFQUFBOUMsU0FDQSxJQUFBOEUsR0FBQWpFLEVBQUE2RyxFQUFBMUgsR0FBQSxPQUVBLEdBQUF3SCxJQUFBekgsRUFBQUMsR0FBQSxPQUVBd0gsRUFBQSxLQUtBLFNBQUF4SCxHQUNBLEdBQUE4RSxFQUNBQSxHQUFBLEVBQ0FQLFFBQ0ssQ0FFTEQsRUFBQW5ELG9CQUFBbkIsRUFEQSxNQUNBcUIsRUFBQSxTQUFBMEQsR0FDQUEsRUFDQVIsRUFBQSxDQUNBbkQsT0FKQSxNQUtBcEIsYUFTQSxTQUFBZ0YsR0FDQSxJQUFBQyxFQUFBbkMsRUFBQTlDLFNBSUFrRixFQUFBeUMsRUFBQUMsWUFBQTdILEVBQUFrRixLQUNBLElBQUFDLE1BQUEsR0FDQSxJQUFBRSxFQUFBdUMsRUFBQUMsWUFBQTdILEVBQUFpRixLQUNBLElBQUFJLE1BQUEsR0FDQSxJQUFBQyxFQUFBSCxFQUFBRSxFQUVBQyxJQUNBUCxHQUFBLEVBQ0FRLEVBQUFELElBbkJBRSxDQUFBdkYsTUFqQkE0RSxDQUFBNUUsSUF5Q0EsSUFBQVQsRUFBQTJILElBQ0FPLEVBQUFYLEVBQUF2SCxHQUNBQSxJQUFBa0ksR0FBQUwsRUFBQUssR0FDQSxJQUFBakMsRUFBQTFCLElBQ0E2RCxFQUFBLENBQUE1SCxFQUFBeUYsSUFnRUEsU0FBQUYsRUFBQTNLLEdBRUF1SSxFQUFBb0MsR0FBQTNLLEdBV0EsSUFBQStLLEVBQUEsRUFFQSxTQUFBQyxFQUFBTixHQUdBLEtBRkFLLEdBQUFMLElBRUEsSUFBQUEsRUFDQS9DLE9BQUFzRCxpQkFBQWUsRUFBQTlCLEdBQ0ssSUFBQWEsR0FDTHBELE9BQUF1RCxvQkFBQWMsRUFBQTlCLEdBSUEsSUFBQWlCLEdBQUEsRUFpQ0EsSUFBQWhELEVBQUEsQ0FDQXhILE9BQUE0SCxFQUFBNUgsT0FDQThGLE9BQUEsTUFDQXBCLFNBQUF3RixFQUNBQyxXQTVIQSxTQUFBekYsR0FDQSxVQUFBOEcsRUFBQWpELEVBQUE5RCxFQUFBQyxLQTRIQTJCLEtBekhBLFNBQUFwQyxFQUFBYSxHQUVBLElBQ0FKLEVBQUFHLEVBQUFaLE9BQUFsQyxTQUFBeUYsRUFBQTlDLFVBQ0FzRSxFQUFBbkQsb0JBQUFuQixFQUZBLE9BRUFxQixFQUFBLFNBQUEwRCxHQUNBLEdBQUFBLEVBQUEsQ0FDQSxJQUFBeEYsRUFBQVEsRUFBQUMsR0FDQXlILEVBQUFYLEVBQUFqRCxFQUFBdEUsR0FHQSxHQUZBMkgsTUFBQU8sRUFFQSxDQUlBRCxFQUFBakksRUE5SEEsU0FBQUEsR0FDQStDLE9BQUF0QyxTQUFBRSxLQUFBWCxFQThIQXNJLENBQUFKLEdBQ0EsSUFBQXhCLEVBQUEwQixFQUFBQyxZQUFBN0gsRUFBQStDLEVBQUE5QyxXQUNBOEgsRUFBQUgsRUFBQTdILE1BQUEsT0FBQW1HLEVBQUEsRUFBQUEsRUFBQSxHQUNBNkIsRUFBQW5HLEtBQUFwQyxHQUNBb0ksRUFBQUcsRUFDQXZELEVBQUEsQ0FDQW5ELE9BbkJBLE9Bb0JBcEIsa0JBSUF1RSxRQWdHQTRCLFFBM0ZBLFNBQUE1RyxFQUFBYSxHQUVBLElBQ0FKLEVBQUFHLEVBQUFaLE9BQUFsQyxTQUFBeUYsRUFBQTlDLFVBQ0FzRSxFQUFBbkQsb0JBQUFuQixFQUZBLFVBRUFxQixFQUFBLFNBQUEwRCxHQUNBLEdBQUFBLEVBQUEsQ0FDQSxJQUFBeEYsRUFBQVEsRUFBQUMsR0FDQXlILEVBQUFYLEVBQUFqRCxFQUFBdEUsR0FDQTJILE1BQUFPLElBTUFELEVBQUFqSSxFQUNBNkgsRUFBQUssSUFHQSxJQUFBeEIsRUFBQTBCLEVBQUE1TCxRQUFBZ0UsRUFBQStDLEVBQUE5QyxZQUNBLElBQUFpRyxJQUFBMEIsRUFBQTFCLEdBQUExRyxHQUNBZ0YsRUFBQSxDQUNBbkQsT0FuQkEsVUFvQkFwQixpQkFzRUFzRixLQUNBZSxPQTdEQSxXQUNBZixHQUFBLElBNkRBZ0IsVUExREEsV0FDQWhCLEVBQUEsSUEwREFpQixNQXpDQSxTQUFBeEYsUUFDQSxJQUFBQSxJQUNBQSxHQUFBLEdBR0EsSUFBQXlGLEVBQUFsQyxFQUFBckQsVUFBQUYsR0FPQSxPQUxBK0UsSUFDQUgsRUFBQSxHQUNBRyxHQUFBLEdBR0EsV0FNQSxPQUxBQSxJQUNBQSxHQUFBLEVBQ0FILEdBQUEsSUFHQWEsTUF3QkFDLE9BcEJBLFNBQUEvRSxHQUNBLElBQUFnRixFQUFBcEMsRUFBQS9DLGVBQUFHLEdBRUEsT0FEQWlFLEVBQUEsR0FDQSxXQUNBQSxHQUFBLEdBQ0FlLE9BaUJBLE9BQUE1RCxFQUdBLFNBQUFpRixFQUFBcE4sRUFBQXFOLEVBQUFDLEdBQ0EsT0FBQTlELEtBQUErRCxJQUFBL0QsS0FBQWdFLElBQUF4TixFQUFBcU4sR0FBQUMsR0FPQSxTQUFBN0YsRUFBQVcsUUFDQSxJQUFBQSxJQUNBQSxFQUFBLElBR0EsSUFBQVEsRUFBQVIsRUFDQTFCLEVBQUFrQyxFQUFBbEMsb0JBQ0ErRyxFQUFBN0UsRUFBQThFLGVBQ0FBLE9BQUEsSUFBQUQsRUFBQSxNQUFBQSxFQUNBRSxFQUFBL0UsRUFBQWdGLGFBQ0FBLE9BQUEsSUFBQUQsRUFBQSxFQUFBQSxFQUNBM0UsRUFBQUosRUFBQUssVUFDQUEsT0FBQSxJQUFBRCxFQUFBLEVBQUFBLEVBQ0FXLEVBQUF4RCxJQUVBLFNBQUF5RCxFQUFBQyxHQUNJNUssT0FBQTZHLEVBQUEsRUFBQTdHLENBQVFrSixFQUFBMEIsR0FFWjFCLEVBQUF4SCxPQUFBd0gsRUFBQTBGLFFBQUFsTixPQUNBZ0osRUFBQXpDLGdCQUFBaUIsRUFBQTlDLFNBQUE4QyxFQUFBMUIsUUFHQSxTQUFBOEMsSUFDQSxPQUFBQyxLQUFBQyxTQUFBQyxTQUFBLElBQUFqRyxPQUFBLEVBQUF3RixHQUdBLElBQUE3RyxFQUFBZ0wsRUFBQVEsRUFBQSxFQUFBRixFQUFBL00sT0FBQSxHQUNBa04sRUFBQUgsRUFBQUksSUFBQSxTQUFBQyxHQUNBLE9BQUF2SSxFQUFBdUksT0FBQXJMLEVBQUEsaUJBQUFxTCxFQUFBeEUsSUFBQXdFLEVBQUFqTyxLQUFBeUosT0FHQXVCLEVBQUExRixFQXlDQSxTQUFBdUYsRUFBQTNLLEdBQ0EsSUFBQWdPLEVBQUFaLEVBQUFqRixFQUFBL0YsTUFBQXBDLEVBQUEsRUFBQW1JLEVBQUEwRixRQUFBbE4sT0FBQSxHQUVBMEUsRUFBQThDLEVBQUEwRixRQUFBRyxHQUNBckUsRUFBQW5ELG9CQUFBbkIsRUFGQSxNQUVBcUIsRUFBQSxTQUFBMEQsR0FDQUEsRUFDQVIsRUFBQSxDQUNBbkQsT0FMQSxNQU1BcEIsV0FDQWpELE1BQUE0TCxJQUtBcEUsTUE4QkEsSUFBQXpCLEVBQUEsQ0FDQXhILE9BQUFrTixFQUFBbE4sT0FDQThGLE9BQUEsTUFDQXBCLFNBQUF3SSxFQUFBekwsR0FDQUEsUUFDQXlMLFVBQ0EvQyxhQUNBOUQsS0ExRkEsU0FBQXBDLEVBQUFhLEdBRUEsSUFDQUosRUFBQUcsRUFBQVosRUFBQWEsRUFBQThELElBQUFwQixFQUFBOUMsVUFDQXNFLEVBQUFuRCxvQkFBQW5CLEVBRkEsT0FFQXFCLEVBQUEsU0FBQTBELEdBQ0EsR0FBQUEsRUFBQSxDQUNBLElBQ0E0RCxFQURBN0YsRUFBQS9GLE1BQ0EsRUFDQTZMLEVBQUE5RixFQUFBMEYsUUFBQTFJLE1BQUEsR0FFQThJLEVBQUF0TixPQUFBcU4sRUFDQUMsRUFBQUMsT0FBQUYsRUFBQUMsRUFBQXROLE9BQUFxTixFQUFBM0ksR0FFQTRJLEVBQUFqSCxLQUFBM0IsR0FHQXVFLEVBQUEsQ0FDQW5ELE9BZkEsT0FnQkFwQixXQUNBakQsTUFBQTRMLEVBQ0FILFFBQUFJLFFBdUVBekMsUUFsRUEsU0FBQTVHLEVBQUFhLEdBRUEsSUFDQUosRUFBQUcsRUFBQVosRUFBQWEsRUFBQThELElBQUFwQixFQUFBOUMsVUFDQXNFLEVBQUFuRCxvQkFBQW5CLEVBRkEsVUFFQXFCLEVBQUEsU0FBQTBELEdBQ0FBLElBQ0FqQyxFQUFBMEYsUUFBQTFGLEVBQUEvRixPQUFBaUQsRUFDQXVFLEVBQUEsQ0FDQW5ELE9BTkEsVUFPQXBCLGlCQTBEQXNGLEtBQ0FlLE9BbkNBLFdBQ0FmLEdBQUEsSUFtQ0FnQixVQWhDQSxXQUNBaEIsRUFBQSxJQWdDQXdELE1BN0JBLFNBQUFuTyxHQUNBLElBQUFnTyxFQUFBN0YsRUFBQS9GLE1BQUFwQyxFQUNBLE9BQUFnTyxHQUFBLEdBQUFBLEVBQUE3RixFQUFBMEYsUUFBQWxOLFFBNEJBaUwsTUF6QkEsU0FBQXhGLEdBS0EsWUFKQSxJQUFBQSxJQUNBQSxHQUFBLEdBR0F1RCxFQUFBckQsVUFBQUYsSUFxQkEwRixPQWxCQSxTQUFBL0UsR0FDQSxPQUFBNEMsRUFBQS9DLGVBQUFHLEtBbUJBLE9BQUFvQixvQkNuM0JBN0osRUFBQUQsUUFBbUJGLEVBQVEsR0FBUkEsaUNDakJuQkEsRUFBQWtCLEVBQUEwQixHQUFBNUMsRUFBQVUsRUFBQWtDLEVBQUEsaUNBQUFxTixJQUFBalEsRUFBQVUsRUFBQWtDLEVBQUEsMkJBQUFzTixJQUFBbFEsRUFBQVUsRUFBQWtDLEVBQUEsNkJBQUF1TixJQUFBblEsRUFBQVUsRUFBQWtDLEVBQUEsMEJBQUF3TixJQUFBcFEsRUFBQVUsRUFBQWtDLEVBQUEsMkJBQUF5TixJQUFBclEsRUFBQVUsRUFBQWtDLEVBQUEsaUNBQUEwTixJQUFBdFEsRUFBQVUsRUFBQWtDLEVBQUEsMkJBQUEyTixJQUFBdlEsRUFBQVUsRUFBQWtDLEVBQUEsaUNBQUE0TixJQUFBeFEsRUFBQVUsRUFBQWtDLEVBQUEsOEJBQUE2TixJQUFBelEsRUFBQVUsRUFBQWtDLEVBQUEsK0JBQUE4TixJQUFBMVEsRUFBQVUsRUFBQWtDLEVBQUEsb0NBQUErTixJQUFBLElBQUFDLEVBQUE1USxFQUFBLElBQUE2USxFQUFBN1EsRUFBQTZCLEVBQUErTyxHQUFBRSxFQUFBOVEsRUFBQSxHQUFBK1EsRUFBQS9RLEVBQUEsR0FBQWdSLEVBQUFoUixFQUFBNkIsRUFBQWtQLEdBQUFFLEdBQUFqUixFQUFBLEdBQUFBLEVBQUEsSUFBQWtSLEVBQUFsUixFQUFBLEdBQUFtUixFQUFBblIsRUFBQSxJQUFBb1IsRUFBQXBSLEVBQUE2QixFQUFBc1AsR0FBQUUsRUFBQXJSLEVBQUEsR0FBQXNSLEdBQUF0UixFQUFBLElBQUFBLEVBQUEsSUFBQXVSLEVBQUF2UixFQUFBLEdBQUF3UixFQUFBeFIsRUFBQTZCLEVBQUEwUCxHQXNCQVosRUFQQSxTQUFBaFEsR0FDQSxJQUFBZ1EsRUFBZ0JFLE1BR2hCLE9BRkFGLEVBQUFjLFNBQUFDLFlBQUEvUSxFQUFBLFlBQ0FnUSxFQUFBZ0IsU0FBQUQsWUFBQS9RLEVBQUEsWUFDQWdRLEVBS0FpQixDQUFBLFVBTUF2QixFQUVBLFNBQUF3QixHQVlBLFNBQUF4QixFQUFBcEcsR0FDQSxJQUFBNkgsRUEwQkEsT0F4QkFBLEVBQUFELEVBQUF0UixLQUFBb0MsS0FBQXNILElBQUF0SCxNQUNBMkUsTUFBQSxDQUNBSixTQUFBK0MsRUFBQUQsUUFBQTlDLFVBT0E0SyxFQUFBQyxZQUFBLEVBQ0FELEVBQUFFLGlCQUFBLEtBRUEvSCxFQUFBZ0ksZ0JBQ0FILEVBQUFsRSxTQUFBM0QsRUFBQUQsUUFBQTJELE9BQUEsU0FBQXpHLEdBQ0E0SyxFQUFBQyxXQUNBRCxFQUFBckcsU0FBQSxDQUNBdkUsYUFHQTRLLEVBQUFFLGlCQUFBOUssS0FLQTRLLEVBdENFaFIsT0FBQWdRLEVBQUEsRUFBQWhRLENBQWN1UCxFQUFBd0IsR0FFaEJ4QixFQUFBNkIsaUJBQUEsU0FBQXJPLEdBQ0EsT0FDQTRDLEtBQUEsSUFDQTBMLElBQUEsSUFDQUMsT0FBQSxHQUNBQyxRQUFBLE1BQUF4TyxJQWtDQSxJQUFBeU8sRUFBQWpDLEVBQUFyTyxVQTRCQSxPQTFCQXNRLEVBQUFDLGtCQUFBLFdBQ0E1UCxLQUFBb1AsWUFBQSxFQUVBcFAsS0FBQXFQLGtCQUNBclAsS0FBQThJLFNBQUEsQ0FDQXZFLFNBQUF2RSxLQUFBcVAsb0JBS0FNLEVBQUFFLHFCQUFBLFdBQ0E3UCxLQUFBaUwsVUFBQWpMLEtBQUFpTCxZQUdBMEUsRUFBQUcsT0FBQSxXQUNBLE9BQVd6QixFQUFBcEwsRUFBSzhELGNBQUFpSCxFQUFBYyxTQUFBLENBQ2hCaUIsU0FBQS9QLEtBQUFzSCxNQUFBeUksVUFBQSxLQUNBclIsTUFBQSxDQUNBMkksUUFBQXJILEtBQUFzSCxNQUFBRCxRQUNBOUMsU0FBQXZFLEtBQUEyRSxNQUFBSixTQUNBeUwsTUFBQXRDLEVBQUE2QixpQkFBQXZQLEtBQUEyRSxNQUFBSixTQUFBckQsVUFDQW9PLGNBQUF0UCxLQUFBc0gsTUFBQWdJLGtCQUtBNUIsRUF0RUEsQ0F1RUVXLEVBQUFwTCxFQUFLZ04sV0FrQlAsSUFBQTNDLEVBRUEsU0FBQTRCLEdBR0EsU0FBQTVCLElBR0EsSUFGQSxJQUFBNkIsRUFFQTlJLEVBQUF6RyxVQUFBQyxPQUFBeUcsRUFBQSxJQUFBbkQsTUFBQWtELEdBQUFFLEVBQUEsRUFBdUVBLEVBQUFGLEVBQWFFLElBQ3BGRCxFQUFBQyxHQUFBM0csVUFBQTJHLEdBS0EsT0FGQTRJLEVBQUFELEVBQUF0UixLQUFBbUMsTUFBQW1QLEVBQUEsQ0FBQWxQLE1BQUFtQyxPQUFBbUUsS0FBQXRHLE1BQ0FxSCxRQUFvQmxKLE9BQUFtUSxFQUFBLEVBQUFuUSxDQUFtQmdSLEVBQUE3SCxPQUN2QzZILEVBWUEsT0F2QkVoUixPQUFBZ1EsRUFBQSxFQUFBaFEsQ0FBY21QLEVBQUE0QixHQWNoQjVCLEVBQUFqTyxVQUVBeVEsT0FBQSxXQUNBLE9BQVd6QixFQUFBcEwsRUFBSzhELGNBQUEyRyxFQUFBLENBQ2hCckcsUUFBQXJILEtBQUFxSCxRQUNBMEksU0FBQS9QLEtBQUFzSCxNQUFBeUksWUFJQXpDLEVBeEJBLENBeUJFZSxFQUFBcEwsRUFBS2dOLFdBZ0JQLElBQUFDLEVBRUEsU0FBQWhCLEdBR0EsU0FBQWdCLElBQ0EsT0FBQWhCLEVBQUFuUCxNQUFBQyxLQUFBSixZQUFBSSxLQUhFN0IsT0FBQWdRLEVBQUEsRUFBQWhRLENBQWMrUixFQUFBaEIsR0FNaEIsSUFBQVMsRUFBQU8sRUFBQTdRLFVBa0JBLE9BaEJBc1EsRUFBQUMsa0JBQUEsV0FDQTVQLEtBQUFzSCxNQUFBNkksU0FBQW5RLEtBQUFzSCxNQUFBNkksUUFBQXZTLEtBQUFvQyxZQUdBMlAsRUFBQVMsbUJBQUEsU0FBQUMsR0FDQXJRLEtBQUFzSCxNQUFBZ0osVUFBQXRRLEtBQUFzSCxNQUFBZ0osU0FBQTFTLEtBQUFvQyxVQUFBcVEsSUFHQVYsRUFBQUUscUJBQUEsV0FDQTdQLEtBQUFzSCxNQUFBaUosV0FBQXZRLEtBQUFzSCxNQUFBaUosVUFBQTNTLEtBQUFvQyxZQUdBMlAsRUFBQUcsT0FBQSxXQUNBLGFBR0FJLEVBekJBLENBMEJFN0IsRUFBQXBMLEVBQUtnTixXQU1QLFNBQUExQyxFQUFBaEYsR0FDQSxJQUFBeEgsRUFBQXdILEVBQUF4SCxRQUNBeVAsRUFBQWpJLEVBQUFrSSxLQUNBQSxPQUFBLElBQUFELEtBQ0EsT0FBU25DLEVBQUFwTCxFQUFLOEQsY0FBQWlILEVBQUFnQixTQUFBLGNBQUEwQixHQUVkLEdBREFBLEdBQStIdlMsT0FBQW9RLEVBQUEsRUFBQXBRLEVBQVMsSUFDeElzUyxHQUFBQyxFQUFBcEIsY0FBQSxZQUNBLElBQUFxQixFQUFBRCxFQUFBckosUUFBQXlELE1BQ0EsT0FBV3VELEVBQUFwTCxFQUFLOEQsY0FBQW1KLEVBQUEsQ0FDaEJDLFFBQUEsU0FBQVMsR0FDQUEsRUFBQUMsUUFBQUYsRUFBQTVQLElBRUF1UCxTQUFBLFNBQUFNLEVBQUFQLEdBQ0FBLEVBQUF0UCxjQUNBNlAsRUFBQUMsVUFDQUQsRUFBQUMsUUFBQUYsRUFBQTVQLEtBR0F3UCxVQUFBLFNBQUFLLEdBQ0FBLEVBQUFDLFdBRUE5UCxjQWFBLElBQUErUCxFQUFBLEdBQ0FDLEVBQUEsSUFDQUMsRUFBQSxFQWtCQSxTQUFBbkQsRUFBQS9KLEVBQUEyTCxHQVNBLFlBUkEsSUFBQTNMLElBQ0FBLEVBQUEsVUFHQSxJQUFBMkwsSUFDQUEsRUFBQSxJQUdBLE1BQUEzTCxJQXpCQSxTQUFBQSxHQUNBLEdBQUFnTixFQUFBaE4sR0FBQSxPQUFBZ04sRUFBQWhOLEdBQ0EsSUFBQW1OLEVBQWtCeEMsRUFBQXhMLEVBQVlpTyxRQUFBcE4sR0FPOUIsT0FMQWtOLEVBQUFELElBQ0FELEVBQUFoTixHQUFBbU4sRUFDQUQsS0FHQUMsRUFnQkFFLENBQUFyTixFQUFBcU4sQ0FBQTFCLEVBQUEsQ0FDQTJCLFFBQUEsSUFRQSxTQUFBNUQsRUFBQWpGLEdBQ0EsSUFBQThJLEVBQUE5SSxFQUFBOEksY0FDQTNQLEVBQUE2RyxFQUFBN0csR0FDQTRQLEVBQUEvSSxFQUFBckMsS0FDQUEsT0FBQSxJQUFBb0wsS0FDQSxPQUFTakQsRUFBQXBMLEVBQUs4RCxjQUFBaUgsRUFBQWdCLFNBQUEsY0FBQTBCLEdBQ2RBLEdBQWlJdlMsT0FBQW9RLEVBQUEsRUFBQXBRLEVBQVMsR0FDMUksSUFBQWtKLEVBQUFxSixFQUFBckosUUFDQWlJLEVBQUFvQixFQUFBcEIsY0FDQXFCLEVBQUF6SyxFQUFBbUIsRUFBQW5CLEtBQUFtQixFQUFBcUQsUUFDQW5HLEVBQW1CcEcsT0FBQW1RLEVBQUEsRUFBQW5RLENBQWNrVCxFQUFBLGlCQUFBM1AsRUFBQW1NLEVBQUFuTSxFQUFBMlAsRUFBQTVCLFFBQW1GdFIsT0FBQXVRLEVBQUEsRUFBQXZRLENBQVEsR0FBR3VELEVBQUEsQ0FDL0hSLFNBQUEyTSxFQUFBbk0sRUFBQVIsU0FBQW1RLEVBQUE1QixVQUNLL04sR0FHTCxPQUFBNE4sR0FDQXFCLEVBQUFwTSxHQUNBLE1BR1c4SixFQUFBcEwsRUFBSzhELGNBQUFtSixFQUFBLENBQ2hCQyxRQUFBLFdBQ0FRLEVBQUFwTSxJQUVBK0wsU0FBQSxTQUFBTSxFQUFBUCxHQUNhbFMsT0FBQW1RLEVBQUEsRUFBQW5RLENBQWlCa1MsRUFBQTNPLEdBQUE2QyxJQUM5Qm9NLEVBQUFwTSxJQUdBN0MsU0FhQSxJQUFBNlAsRUFBQSxHQUNBQyxFQUFBLElBQ0FDLEVBQUEsRUF5QkEsU0FBQTNELEVBQUE1TSxFQUFBd1EsUUFDQSxJQUFBQSxJQUNBQSxFQUFBLElBR0EsaUJBQUFBLE1BQUEsQ0FDQTVOLEtBQUE0TixJQUVBLElBQUFDLEVBQUFELEVBQ0E1TixFQUFBNk4sRUFBQTdOLEtBQ0E4TixFQUFBRCxFQUFBRSxNQUNBQSxPQUFBLElBQUFELEtBQ0FFLEVBQUFILEVBQUFJLE9BQ0FBLE9BQUEsSUFBQUQsS0FDQUUsRUFBQUwsRUFBQU0sVUFDQUEsT0FBQSxJQUFBRCxLQUVBLE1BREEsR0FBQTdQLE9BQUEyQixHQUNBb08sT0FBQSxTQUFBQyxFQUFBck8sR0FDQSxHQUFBcU8sRUFBQSxPQUFBQSxFQUVBLElBQUFDLEVBM0NBLFNBQUF0TyxFQUFBNE4sR0FDQSxJQUFBVyxFQUFBLEdBQUFYLEVBQUFZLElBQUFaLEVBQUFLLE9BQUFMLEVBQUFPLFVBQ0FNLEVBQUFoQixFQUFBYyxLQUFBZCxFQUFBYyxHQUFBLElBQ0EsR0FBQUUsRUFBQXpPLEdBQUEsT0FBQXlPLEVBQUF6TyxHQUNBLElBQUF6RCxFQUFBLEdBRUFvQyxFQUFBLENBQ0ErUCxPQUZlL0QsSUFBWTNLLEVBQUF6RCxFQUFBcVIsR0FHM0JyUixRQVFBLE9BTEFvUixFQUFBRCxJQUNBZSxFQUFBek8sR0FBQXJCLEVBQ0FnUCxLQUdBaFAsRUEyQkFnUSxDQUFBM08sRUFBQSxDQUNBd08sSUFBQVQsRUFDQUUsU0FDQUUsY0FFQU8sRUFBQUosRUFBQUksT0FDQW5TLEVBQUErUixFQUFBL1IsS0FFQTJQLEVBQUF3QyxFQUFBRSxLQUFBeFIsR0FDQSxJQUFBOE8sRUFBQSxZQUNBLElBQUFSLEVBQUFRLEVBQUEsR0FDQTJDLEVBQUEzQyxFQUFBM0wsTUFBQSxHQUNBcUwsRUFBQXhPLElBQUFzTyxFQUNBLE9BQUFxQyxJQUFBbkMsRUFBQSxLQUNBLENBQ0E1TCxPQUVBMEwsSUFBQSxNQUFBMUwsR0FBQSxLQUFBMEwsRUFBQSxJQUFBQSxFQUVBRSxVQUVBRCxPQUFBcFAsRUFBQTZSLE9BQUEsU0FBQVUsRUFBQTVULEVBQUFzQyxHQUVBLE9BREFzUixFQUFBNVQsRUFBQWhCLE1BQUEyVSxFQUFBclIsR0FDQXNSLEdBQ08sTUFFSixNQVdILElBQUFuRixFQUVBLFNBQUF5QixHQUdBLFNBQUF6QixJQUNBLE9BQUF5QixFQUFBblAsTUFBQUMsS0FBQUosWUFBQUksS0FnREEsT0FuREU3QixPQUFBZ1EsRUFBQSxFQUFBaFEsQ0FBY3NQLEVBQUF5QixHQU1oQnpCLEVBQUFwTyxVQUVBeVEsT0FBQSxXQUNBLElBQUFYLEVBQUFuUCxLQUVBLE9BQVdxTyxFQUFBcEwsRUFBSzhELGNBQUFpSCxFQUFBZ0IsU0FBQSxjQUFBMEIsR0FDaEJBLEdBQWdJdlMsT0FBQW9RLEVBQUEsRUFBQXBRLEVBQVMsR0FDekksSUFBQW9HLEVBQUE0SyxFQUFBN0gsTUFBQS9DLFVBQUFtTSxFQUFBbk0sU0FDQXlMLEVBQUFiLEVBQUE3SCxNQUFBK0osY0FBQWxDLEVBQUE3SCxNQUFBK0osY0FDQWxDLEVBQUE3SCxNQUFBeEQsS0FBQWdLLEVBQUF2SixFQUFBckQsU0FBQWlPLEVBQUE3SCxPQUFBb0osRUFBQVYsTUFFQTFJLEVBQWtCbkosT0FBQXVRLEVBQUEsRUFBQXZRLENBQVEsR0FBR3VTLEVBQUEsQ0FDN0JuTSxXQUNBeUwsVUFHQTZDLEVBQUExRCxFQUFBN0gsTUFDQXlJLEVBQUE4QyxFQUFBOUMsU0FDQStDLEVBQUFELEVBQUFDLFVBQ0FoRCxFQUFBK0MsRUFBQS9DLFFBR0EzTSxNQUFBQyxRQUFBMk0sSUFBQSxJQUFBQSxFQUFBbFEsU0FDQWtRLEVBQUEsTUFHQSxtQkFBQUEsVUFHQW5PLEtBRkFtTyxJQUFBekksTUFRQXlJLEVBQUEsT0FJQSxPQUFhMUIsRUFBQXBMLEVBQUs4RCxjQUFBaUgsRUFBQWMsU0FBQSxDQUNsQnBRLE1BQUE0SSxHQUNPeUksSUExRFAsU0FBQUEsR0FDQSxPQUFjLElBQUwxQixFQUFBcEwsRUFBSzhQLFNBQUFDLE1BQUFqRCxHQXlEUGtELENBQUFsRCxLQUFBekksRUFBQTBJLE1BQUE4QyxFQUFnRnpFLEVBQUFwTCxFQUFLOEQsY0FBQStMLEVBQUF4TCxHQUFBd0ksSUFBQXhJLEdBQUEsY0FJNUZtRyxFQXBEQSxDQXFERVksRUFBQXBMLEVBQUtnTixXQThCUCxTQUFBcE0sRUFBQUMsR0FDQSxZQUFBQSxFQUFBM0MsT0FBQSxHQUFBMkMsRUFBQSxJQUFBQSxFQVVBLFNBQUFFLEVBQUFvRSxFQUFBN0QsR0FDQSxJQUFBNkQsRUFBQSxPQUFBN0QsRUFDQSxJQUFBMk8sRUFBQXJQLEVBQUF1RSxHQUNBLFdBQUE3RCxFQUFBckQsU0FBQVosUUFBQTRTLEdBQUEzTyxFQUNTcEcsT0FBQXVRLEVBQUEsRUFBQXZRLENBQVEsR0FBR29HLEVBQUEsQ0FDcEJyRCxTQUFBcUQsRUFBQXJELFNBQUF5QixPQUFBdVEsRUFBQXJULFVBSUEsU0FBQXNULEVBQUE1TyxHQUNBLHVCQUFBQSxJQUFtRHBHLE9BQUFtUSxFQUFBLEVBQUFuUSxDQUFVb0csR0FHN0QsU0FBQTZPLEVBQUFDLEdBQ0Esa0JBQ2dIbFYsT0FBQW9RLEVBQUEsRUFBQXBRLEVBQVMsSUFJekgsU0FBQW1WLEtBU0EsSUFBQTNGLEVBRUEsU0FBQXVCLEdBR0EsU0FBQXZCLElBR0EsSUFGQSxJQUFBd0IsRUFFQTlJLEVBQUF6RyxVQUFBQyxPQUFBeUcsRUFBQSxJQUFBbkQsTUFBQWtELEdBQUFFLEVBQUEsRUFBdUVBLEVBQUFGLEVBQWFFLElBQ3BGRCxFQUFBQyxHQUFBM0csVUFBQTJHLEdBcUJBLE9BbEJBNEksRUFBQUQsRUFBQXRSLEtBQUFtQyxNQUFBbVAsRUFBQSxDQUFBbFAsTUFBQW1DLE9BQUFtRSxLQUFBdEcsTUFFQXVULFdBQUEsU0FBQWhQLEdBQ0EsT0FBQTRLLEVBQUFxRSxXQUFBalAsRUFBQSxTQUdBNEssRUFBQXNFLGNBQUEsU0FBQWxQLEdBQ0EsT0FBQTRLLEVBQUFxRSxXQUFBalAsRUFBQSxZQUdBNEssRUFBQXVFLGFBQUEsV0FDQSxPQUFBSixHQUdBbkUsRUFBQXdFLFlBQUEsV0FDQSxPQUFBTCxHQUdBbkUsRUEzQkVoUixPQUFBZ1EsRUFBQSxFQUFBaFEsQ0FBY3dQLEVBQUF1QixHQThCaEIsSUFBQVMsRUFBQWhDLEVBQUF0TyxVQTBDQSxPQXhDQXNRLEVBQUE2RCxXQUFBLFNBQUFqUCxFQUFBb0IsR0FDQSxJQUFBa04sRUFBQTdTLEtBQUFzSCxNQUNBc00sRUFBQWYsRUFBQXpLLFNBQ0FBLE9BQUEsSUFBQXdMLEVBQUEsR0FBQUEsRUFDQTVGLEVBQUE2RSxFQUFBN0UsUUFDQUEsRUFBQXJJLFNBQ0FxSSxFQUFBekosU0E1RUEsU0FBQTZELEVBQUE3RCxHQUNBLE9BQUE2RCxFQUNTakssT0FBQXVRLEVBQUEsRUFBQXZRLENBQVEsR0FBR29HLEVBQUEsQ0FDcEJyRCxTQUFBMkMsRUFBQXVFLEdBQUE3RCxFQUFBckQsV0FGQXFELEVBMkVBc1AsQ0FBQXpMLEVBQTZDakssT0FBQW1RLEVBQUEsRUFBQW5RLENBQWNvRyxJQUMzRHlKLEVBQUF3QixJQUFBMkQsRUFBQW5GLEVBQUF6SixXQUdBb0wsRUFBQUcsT0FBQSxXQUNBLElBQUFnRSxFQUFBOVQsS0FBQXNILE1BQ0F5TSxFQUFBRCxFQUFBMUwsU0FDQUEsT0FBQSxJQUFBMkwsRUFBQSxHQUFBQSxFQUNBQyxFQUFBRixFQUFBOUYsUUFDQUEsT0FBQSxJQUFBZ0csRUFBQSxHQUFzREEsRUFDdERDLEVBQUFILEVBQUF2UCxTQUNBQSxPQUFBLElBQUEwUCxFQUFBLElBQUFBLEVBQ0FDLEVBQWUvVixPQUFBd1EsRUFBQSxFQUFBeFEsQ0FBNkIyVixFQUFBLG1DQUU1Q3pNLEVBQUEsQ0FDQTJDLFdBQUEsU0FBQWxHLEdBQ0EsT0FBQUQsRUFBQXVFLEVBQUErSyxFQUFBclAsS0FFQTZCLE9BQUEsTUFDQXBCLFNBQUFQLEVBQUFvRSxFQUF3Q2pLLE9BQUFtUSxFQUFBLEVBQUFuUSxDQUFjb0csSUFDdEQyQixLQUFBbEcsS0FBQXVULFdBQ0E3SSxRQUFBMUssS0FBQXlULGNBQ0E1SixHQUFBdUosSUFDQXhJLE9BQUF3SSxJQUNBdkksVUFBQXVJLElBQ0FwSSxPQUFBaEwsS0FBQTBULGFBQ0E1SSxNQUFBOUssS0FBQTJULGFBRUEsT0FBV3RGLEVBQUFwTCxFQUFLOEQsY0FBQTJHLEVBQXVCdlAsT0FBQXVRLEVBQUEsRUFBQXZRLENBQVEsR0FBRytWLEVBQUEsQ0FDbEQ3TSxVQUNBaUksY0FBQXRCLE1BSUFMLEVBekVBLENBMEVFVSxFQUFBcEwsRUFBS2dOLFdBa0JQLElBQUFyQyxFQUVBLFNBQUFzQixHQUdBLFNBQUF0QixJQUNBLE9BQUFzQixFQUFBblAsTUFBQUMsS0FBQUosWUFBQUksS0FnQ0EsT0FuQ0U3QixPQUFBZ1EsRUFBQSxFQUFBaFEsQ0FBY3lQLEVBQUFzQixHQU1oQnRCLEVBQUF2TyxVQUVBeVEsT0FBQSxXQUNBLElBQUFYLEVBQUFuUCxLQUVBLE9BQVdxTyxFQUFBcEwsRUFBSzhELGNBQUFpSCxFQUFBZ0IsU0FBQSxjQUFBMEIsR0FDaEJBLEdBQWlJdlMsT0FBQW9RLEVBQUEsRUFBQXBRLEVBQVMsR0FDMUksSUFDQWdXLEVBQUFuRSxFQURBekwsRUFBQTRLLEVBQUE3SCxNQUFBL0MsVUFBQW1NLEVBQUFuTSxTQWVBLE9BVE04SixFQUFBcEwsRUFBSzhQLFNBQUF2TSxRQUFBMkksRUFBQTdILE1BQUF5SSxTQUFBLFNBQUFxRSxHQUNYLFNBQUFwRSxHQUE2QjNCLEVBQUFwTCxFQUFLb1IsZUFBQUQsR0FBQSxDQUNsQ0QsRUFBQUMsRUFDQSxJQUFBdFEsRUFBQXNRLEVBQUE5TSxNQUFBeEQsTUFBQXNRLEVBQUE5TSxNQUFBM0YsS0FDQXFPLEVBQUFsTSxFQUFBZ0ssRUFBQXZKLEVBQUFyRCxTQUFzRC9DLE9BQUF1USxFQUFBLEVBQUF2USxDQUFRLEdBQUdpVyxFQUFBOU0sTUFBQSxDQUNqRXhELFVBQ1c0TSxFQUFBVixTQUdYQSxFQUFxQjNCLEVBQUFwTCxFQUFLcVIsYUFBQUgsRUFBQSxDQUMxQjVQLFdBQ0E4TSxjQUFBckIsSUFDTyxRQUlQcEMsRUFwQ0EsQ0FxQ0VTLEVBQUFwTCxFQUFLZ04sV0FrQlAsU0FBQWxDLEVBQUFrQyxHQUNBLElBQUFzRSxFQUFBLFNBQUFqTixHQUNBLElBQUFrTixFQUFBbE4sRUFBQWtOLG9CQUNBQyxFQUF5QnRXLE9BQUF3USxFQUFBLEVBQUF4USxDQUE2Qm1KLEVBQUEseUJBRXRELE9BQVcrRyxFQUFBcEwsRUFBSzhELGNBQUEwRyxFQUFBLENBQ2hCc0MsU0FBQSxTQUFBMkUsR0FDQSxPQUFlckcsRUFBQXBMLEVBQUs4RCxjQUFBa0osRUFBMEI5UixPQUFBdVEsRUFBQSxFQUFBdlEsQ0FBUSxHQUFHc1csRUFBQUMsRUFBQSxDQUN6REMsSUFBQUgsU0FlQSxPQVRBRCxFQUFBeEYsWUFBQSxlQUFBa0IsRUFBQWxCLGFBQUFrQixFQUFBalMsTUFBQSxJQUNBdVcsRUFBQUssaUJBQUEzRSxFQVFTcEIsSUFBWTBGLEVBQUF0RSxrQ0NockJyQixJQUFBNEUsRUFBY3hYLEVBQVEsSUFDdEJ5WCxFQUFBLENBQ0FDLG1CQUFBLEVBQ0FDLGFBQUEsRUFDQUMsY0FBQSxFQUNBQyxjQUFBLEVBQ0FuRyxhQUFBLEVBQ0FvRyxpQkFBQSxFQUNBQywwQkFBQSxFQUNBQywwQkFBQSxFQUNBQyxRQUFBLEVBQ0FDLFdBQUEsRUFDQUMsTUFBQSxHQUdBQyxFQUFBLENBQ0F6WCxNQUFBLEVBQ0E2QixRQUFBLEVBQ0FSLFdBQUEsRUFDQXFXLFFBQUEsRUFDQUMsUUFBQSxFQUNBL1YsV0FBQSxFQUNBZ1csT0FBQSxHQVdBQyxFQUFBLENBQ0FDLFVBQUEsRUFDQUMsU0FBQSxFQUNBYixjQUFBLEVBQ0FuRyxhQUFBLEVBQ0F3RyxXQUFBLEVBQ0FDLE1BQUEsR0FHQVEsRUFBQSxHQUdBLFNBQUFDLEVBQUFuRCxHQUNBLE9BQUErQixFQUFBcUIsT0FBQXBELEdBQ0ErQyxFQUVBRyxFQUFBbEQsRUFBQSxXQUFBZ0MsRUFOQWtCLEVBQUFuQixFQUFBc0IsWUFsQkEsQ0FDQUwsVUFBQSxFQUNBaEcsUUFBQSxFQUNBb0YsY0FBQSxFQUNBbkcsYUFBQSxFQUNBd0csV0FBQSxHQXNCQSxJQUFBblgsRUFBQUQsT0FBQUMsZUFDQWdZLEVBQUFqWSxPQUFBaVksb0JBQ0FDLEVBQUFsWSxPQUFBa1ksc0JBQ0FDLEVBQUFuWSxPQUFBbVkseUJBQ0FDLEVBQUFwWSxPQUFBb1ksZUFDQUMsRUFBQXJZLE9BQUFrQixVQXVDQTdCLEVBQUFELFFBckNBLFNBQUFrWixFQUFBQyxFQUFBQyxFQUFBQyxHQUNBLG9CQUFBRCxFQUFBLENBR0EsR0FBQUgsRUFBQSxDQUNBLElBQUFLLEVBQUFOLEVBQUFJLEdBQ0FFLE9BQUFMLEdBQ0FDLEVBQUFDLEVBQUFHLEVBQUFELEdBSUEsSUFBQXZXLEVBQUErVixFQUFBTyxHQUVBTixJQUNBaFcsSUFBQThCLE9BQUFrVSxFQUFBTSxLQU1BLElBSEEsSUFBQUcsRUFBQWIsRUFBQVMsR0FDQUssRUFBQWQsRUFBQVUsR0FFQWxaLEVBQUEsRUFBdUJBLEVBQUE0QyxFQUFBUixTQUFpQnBDLEVBQUEsQ0FDeEMsSUFBQXVCLEVBQUFxQixFQUFBNUMsR0FDQSxLQUFBZ1ksRUFBQXpXLElBQUE0WCxLQUFBNVgsSUFBQStYLEtBQUEvWCxJQUFBOFgsS0FBQTlYLElBQUEsQ0FDQSxJQUFBZ1ksRUFBQVYsRUFBQUssRUFBQTNYLEdBQ0EsSUFFQVosRUFBQXNZLEVBQUExWCxFQUFBZ1ksR0FDaUIsTUFBQTlSLE1BSWpCLE9BQUF3UixFQUdBLE9BQUFBLGlDQ25EQWxaLEVBQUFELFFBNUJBLFNBQUF1RCxFQUFBbVcsRUFBQWhVLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsRUFBQWdTLEdBT0EsSUFBQXBXLEVBQUEsQ0FDQSxJQUFBcVcsRUFDQSxRQUFBdlYsSUFBQXFWLEVBQ0FFLEVBQUEsSUFBQW5XLE1BQ0EscUlBR0ssQ0FDTCxJQUFBc0YsRUFBQSxDQUFBckQsRUFBQUMsRUFBQXBGLEVBQUFDLEVBQUFtSCxFQUFBZ1MsR0FDQUUsRUFBQSxHQUNBRCxFQUFBLElBQUFuVyxNQUNBaVcsRUFBQXZNLFFBQUEsaUJBQTBDLE9BQUFwRSxFQUFBOFEsU0FFMUNwWixLQUFBLHNCQUlBLE1BREFtWixFQUFBRSxZQUFBLEVBQ0FGLGtDQ3pDQTNaLEVBQUFELFFBQW1CRixFQUFRLGtDQ0gzQkEsRUFBQWtCLEVBQUEwQixHQUFBNUMsRUFBQVUsRUFBQWtDLEVBQUEsZ0NBQUFxWCxJQUFBamEsRUFBQVUsRUFBQWtDLEVBQUEsb0NBQUFzWCxJQUFBbGEsRUFBQVUsRUFBQWtDLEVBQUEsdUNBQUF1WCxJQUFBbmEsRUFBQVUsRUFBQWtDLEVBQUEsb0NBQUF3WCxJQUFBcGEsRUFBQVUsRUFBQWtDLEVBQUEsNEJBQUF5WCxJQUFBcmEsRUFBQVUsRUFBQWtDLEVBQUEsOENBQUEwWCxJQUFBLElBQUFDLEVBQUF2YSxFQUFBLElBUUF3YSxFQUFBLFdBQ0EsT0FBQW5QLEtBQUFDLFNBQUFDLFNBQUEsSUFBQThDLFVBQUEsR0FBQTVKLE1BQUEsSUFBQVksS0FBQSxNQUdBaVYsRUFBQSxDQUNBRyxLQUFBLGVBQUFELElBQ0FFLFFBQUEsa0JBQUFGLElBQ0FHLHFCQUFBLFdBQ0EscUNBQUFILE1BUUEsU0FBQUksRUFBQW5WLEdBQ0Esb0JBQUFBLEdBQUEsT0FBQUEsRUFBQSxTQUdBLElBRkEsSUFBQW9WLEVBQUFwVixFQUVBLE9BQUEzRSxPQUFBb1ksZUFBQTJCLElBQ0FBLEVBQUEvWixPQUFBb1ksZUFBQTJCLEdBR0EsT0FBQS9aLE9BQUFvWSxlQUFBelQsS0FBQW9WLEVBNkJBLFNBQUFaLEVBQUFhLEVBQUFDLEVBQUFDLEdBQ0EsSUFBQUMsRUFFQSxzQkFBQUYsR0FBQSxtQkFBQUMsR0FBQSxtQkFBQUEsR0FBQSxtQkFBQXpZLFVBQUEsR0FDQSxVQUFBb0IsTUFBQSxzSkFRQSxHQUxBLG1CQUFBb1gsUUFBQSxJQUFBQyxJQUNBQSxFQUFBRCxFQUNBQSxPQUFBeFcsUUFHQSxJQUFBeVcsRUFBQSxDQUNBLHNCQUFBQSxFQUNBLFVBQUFyWCxNQUFBLDJDQUdBLE9BQUFxWCxFQUFBZixFQUFBZSxDQUFBRixFQUFBQyxHQUdBLHNCQUFBRCxFQUNBLFVBQUFuWCxNQUFBLDBDQUdBLElBQUF1WCxFQUFBSixFQUNBSyxFQUFBSixFQUNBSyxFQUFBLEdBQ0FDLEVBQUFELEVBQ0FFLEdBQUEsRUFFQSxTQUFBQyxJQUNBRixJQUFBRCxJQUNBQyxFQUFBRCxFQUFBcFUsU0FVQSxTQUFBd1UsSUFDQSxHQUFBRixFQUNBLFVBQUEzWCxNQUFBLHdNQUdBLE9BQUF3WCxFQTJCQSxTQUFBTSxFQUFBN1MsR0FDQSxzQkFBQUEsRUFDQSxVQUFBakYsTUFBQSwyQ0FHQSxHQUFBMlgsRUFDQSxVQUFBM1gsTUFBQSwrVEFHQSxJQUFBK1gsR0FBQSxFQUdBLE9BRkFILElBQ0FGLEVBQUF4UyxLQUFBRCxHQUNBLFdBQ0EsR0FBQThTLEVBQUEsQ0FJQSxHQUFBSixFQUNBLFVBQUEzWCxNQUFBLG9LQUdBK1gsR0FBQSxFQUNBSCxJQUNBLElBQUF0WCxFQUFBb1gsRUFBQXBZLFFBQUEyRixHQUNBeVMsRUFBQXRMLE9BQUE5TCxFQUFBLEtBOEJBLFNBQUEwWCxFQUFBclQsR0FDQSxJQUFBc1MsRUFBQXRTLEdBQ0EsVUFBQTNFLE1BQUEsMkVBR0EsWUFBQTJFLEVBQUE2UCxLQUNBLFVBQUF4VSxNQUFBLHNGQUdBLEdBQUEyWCxFQUNBLFVBQUEzWCxNQUFBLHNDQUdBLElBQ0EyWCxHQUFBLEVBQ0FILEVBQUFELEVBQUFDLEVBQUE3UyxHQUNLLFFBQ0xnVCxHQUFBLEVBS0EsSUFGQSxJQUFBcFQsRUFBQWtULEVBQUFDLEVBRUFqYixFQUFBLEVBQW1CQSxFQUFBOEgsRUFBQTFGLE9BQXNCcEMsSUFBQSxFQUV6Q3dJLEVBREFWLEVBQUE5SCxNQUlBLE9BQUFrSSxFQXlFQSxPQUhBcVQsRUFBQSxDQUNBeEQsS0FBQW1DLEVBQUFHLFFBRUFRLEVBQUEsQ0FDQVUsV0FDQUYsWUFDQUQsV0FDQUksZUEvREEsU0FBQUMsR0FDQSxzQkFBQUEsRUFDQSxVQUFBbFksTUFBQSw4Q0FHQXVYLEVBQUFXLEVBQ0FGLEVBQUEsQ0FDQXhELEtBQUFtQyxFQUFBSSxhQXlEV0gsRUFBQSxHQTlDWCxXQUNBLElBQUFyUCxFQUVBNFEsRUFBQUwsRUFDQSxPQUFBdlEsRUFBQSxDQVNBdVEsVUFBQSxTQUFBTSxHQUNBLG9CQUFBQSxHQUFBLE9BQUFBLEVBQ0EsVUFBQUMsVUFBQSwwQ0FHQSxTQUFBQyxJQUNBRixFQUFBRyxNQUNBSCxFQUFBRyxLQUFBVixLQU1BLE9BRkFTLElBRUEsQ0FDQUUsWUFGQUwsRUFBQUcsT0FLWTFCLEVBQUEsR0FBWSxXQUN4QixPQUFBNVgsTUFDS3VJLEdBY2tCK1AsRUEwQnZCLFNBQUFtQixFQUFBemEsRUFBQTJHLEdBQ0EsSUFBQStULEVBQUEvVCxLQUFBNlAsS0FFQSxnQkFEQWtFLEdBQUEsV0FBQUMsT0FBQUQsR0FBQSxrQkFDQSxjQUFBMWEsRUFBQSxpTEFnRUEsU0FBQXVZLEVBQUFxQyxHQUlBLElBSEEsSUFBQUMsRUFBQTFiLE9BQUFrQyxLQUFBdVosR0FDQUUsRUFBQSxHQUVBcmMsRUFBQSxFQUFpQkEsRUFBQW9jLEVBQUFoYSxPQUF3QnBDLElBQUEsQ0FDekMsSUFBQXVCLEVBQUE2YSxFQUFBcGMsR0FFUSxFQU1SLG1CQUFBbWMsRUFBQTVhLEtBQ0E4YSxFQUFBOWEsR0FBQTRhLEVBQUE1YSxJQUlBLElBT0ErYSxFQVBBQyxFQUFBN2IsT0FBQWtDLEtBQUF5WixHQVNBLEtBL0RBLFNBQUFGLEdBQ0F6YixPQUFBa0MsS0FBQXVaLEdBQUFwVCxRQUFBLFNBQUF4SCxHQUNBLElBQUFtWixFQUFBeUIsRUFBQTVhLEdBS0EsWUFKQW1aLE9BQUF2VyxFQUFBLENBQ0E0VCxLQUFBbUMsRUFBQUcsT0FJQSxVQUFBOVcsTUFBQSxZQUFBaEMsRUFBQSxpUkFHQSxRQUVLLElBRkxtWixPQUFBdlcsRUFBQSxDQUNBNFQsS0FBQW1DLEVBQUFLLHlCQUVBLFVBQUFoWCxNQUFBLFlBQUFoQyxFQUFBLDZFQUFBMlksRUFBQUcsS0FBQSxpVEFrREFtQyxDQUFBSCxHQUNHLE1BQUE1VSxHQUNINlUsRUFBQTdVLEVBR0EsZ0JBQUFQLEVBQUFnQixHQUtBLFFBSkEsSUFBQWhCLElBQ0FBLEVBQUEsSUFHQW9WLEVBQ0EsTUFBQUEsRUFjQSxJQVgrQyxJQVEvQ0csR0FBQSxFQUNBblIsRUFBQSxHQUVBb1IsRUFBQSxFQUFvQkEsRUFBQUgsRUFBQW5hLE9BQThCc2EsSUFBQSxDQUNsRCxJQUFBNVQsRUFBQXlULEVBQUFHLEdBQ0FoQyxFQUFBMkIsRUFBQXZULEdBQ0E2VCxFQUFBelYsRUFBQTRCLEdBQ0E4VCxFQUFBbEMsRUFBQWlDLEVBQUF6VSxHQUVBLFlBQUEwVSxFQUFBLENBQ0EsSUFBQUMsRUFBQWIsRUFBQWxULEVBQUFaLEdBQ0EsVUFBQTNFLE1BQUFzWixHQUdBdlIsRUFBQXhDLEdBQUE4VCxFQUNBSCxLQUFBRyxJQUFBRCxFQUdBLE9BQUFGLEVBQUFuUixFQUFBcEUsR0FJQSxTQUFBNFYsRUFBQUMsRUFBQXhCLEdBQ0Esa0JBQ0EsT0FBQUEsRUFBQXdCLEVBQUF6YSxNQUFBQyxLQUFBSixhQTBCQSxTQUFBNFgsRUFBQWlELEVBQUF6QixHQUNBLHNCQUFBeUIsRUFDQSxPQUFBRixFQUFBRSxFQUFBekIsR0FHQSxvQkFBQXlCLEdBQUEsT0FBQUEsRUFDQSxVQUFBelosTUFBQSxpRkFBQXlaLEVBQUEsY0FBQUEsR0FBQSw4RkFNQSxJQUhBLElBQUFwYSxFQUFBbEMsT0FBQWtDLEtBQUFvYSxHQUNBQyxFQUFBLEdBRUFqZCxFQUFBLEVBQWlCQSxFQUFBNEMsRUFBQVIsT0FBaUJwQyxJQUFBLENBQ2xDLElBQUF1QixFQUFBcUIsRUFBQTVDLEdBQ0ErYyxFQUFBQyxFQUFBemIsR0FFQSxtQkFBQXdiLElBQ0FFLEVBQUExYixHQUFBdWIsRUFBQUMsRUFBQXhCLElBSUEsT0FBQTBCLEVBR0EsU0FBQUMsRUFBQTdYLEVBQUE5RCxFQUFBTixHQVlBLE9BWEFNLEtBQUE4RCxFQUNBM0UsT0FBQUMsZUFBQTBFLEVBQUE5RCxFQUFBLENBQ0FOLFFBQ0FMLFlBQUEsRUFDQXVjLGNBQUEsRUFDQUMsVUFBQSxJQUdBL1gsRUFBQTlELEdBQUFOLEVBR0FvRSxFQWdDQSxTQUFBNFUsSUFDQSxRQUFBclIsRUFBQXpHLFVBQUFDLE9BQUFpYixFQUFBLElBQUEzWCxNQUFBa0QsR0FBQUUsRUFBQSxFQUFzRUEsRUFBQUYsRUFBYUUsSUFDbkZ1VSxFQUFBdlUsR0FBQTNHLFVBQUEyRyxHQUdBLFdBQUF1VSxFQUFBamIsT0FDQSxTQUFBa2IsR0FDQSxPQUFBQSxHQUlBLElBQUFELEVBQUFqYixPQUNBaWIsRUFBQSxHQUdBQSxFQUFBNUksT0FBQSxTQUFBalAsRUFBQUMsR0FDQSxrQkFDQSxPQUFBRCxFQUFBQyxFQUFBbkQsV0FBQSxFQUFBSCxlQXNCQSxTQUFBNlgsSUFDQSxRQUFBcFIsRUFBQXpHLFVBQUFDLE9BQUFtYixFQUFBLElBQUE3WCxNQUFBa0QsR0FBQUUsRUFBQSxFQUE0RUEsRUFBQUYsRUFBYUUsSUFDekZ5VSxFQUFBelUsR0FBQTNHLFVBQUEyRyxHQUdBLGdCQUFBK1EsR0FDQSxrQkFDQSxJQUFBMkQsRUFBQTNELEVBQUF2WCxXQUFBLEVBQUFILFdBRUFzYixFQUFBLFdBQ0EsVUFBQWxhLE1BQUEsMkhBR0FtYSxFQUFBLENBQ0F0QyxTQUFBb0MsRUFBQXBDLFNBQ0FHLFNBQUEsV0FDQSxPQUFBa0MsRUFBQW5iLFdBQUEsRUFBQUgsYUFHQXdiLEVBQUFKLEVBQUFoTyxJQUFBLFNBQUFxTyxHQUNBLE9BQUFBLEVBQUFGLEtBR0EsT0EzRkEsU0FBQXhiLEdBQ0EsUUFBQWxDLEVBQUEsRUFBaUJBLEVBQUFtQyxVQUFBQyxPQUFzQnBDLElBQUEsQ0FDdkMsSUFBQXFDLEVBQUEsTUFBQUYsVUFBQW5DLEdBQUFtQyxVQUFBbkMsR0FBQSxHQUNBNmQsRUFBQW5kLE9BQUFrQyxLQUFBUCxHQUVBLG1CQUFBM0IsT0FBQWtZLHdCQUNBaUYsSUFBQW5aLE9BQUFoRSxPQUFBa1ksc0JBQUF2VyxHQUFBcUcsT0FBQSxTQUFBb1YsR0FDQSxPQUFBcGQsT0FBQW1ZLHlCQUFBeFcsRUFBQXliLEdBQUFsZCxlQUlBaWQsRUFBQTlVLFFBQUEsU0FBQXhILEdBQ0EyYixFQUFBaGIsRUFBQVgsRUFBQWMsRUFBQWQsTUFJQSxPQUFBVyxFQTJFQTZiLENBQUEsR0FBNkJQLEVBQUEsQ0FDN0JqQyxTQUZBa0MsRUFBQXhELEVBQUEzWCxXQUFBLEVBQUFxYixFQUFBMUQsQ0FBQXVELEVBQUFqQyw4Q0N0bUJBLFNBQUF5QyxJQUVBLEdBQ0Esb0JBQUFDLGdDQUNBLG1CQUFBQSwrQkFBQUQsU0FjQSxJQUVBQywrQkFBQUQsWUFDRyxNQUFBRSxHQUdIQyxRQUFBekUsTUFBQXdFLElBT0FGLEdBQ0FqZSxFQUFBRCxRQUFtQkYsRUFBUSxtQkNsQzNCLElBQUF3ZSxFQUdBQSxFQUFBLFdBQ0EsT0FBQTdiLEtBREEsR0FJQSxJQUVBNmIsS0FBQSxJQUFBQyxTQUFBLGlCQUNDLE1BQUE1VyxHQUVELGlCQUFBMkIsU0FBQWdWLEVBQUFoVixRQU9BckosRUFBQUQsUUFBQXNlLG1CQ25CQSxJQUFBRSxFQUFjMWUsRUFBUSxJQUt0QkcsRUFBQUQsUUFBQXllLEVBQ0F4ZSxFQUFBRCxRQUFBMGUsUUFDQXplLEVBQUFELFFBQUEyVCxRQXNHQSxTQUFBZ0wsRUFBQXhLLEdBQ0EsT0FBQXlLLEVBQUFGLEVBQUFDLEVBQUF4SyxLQXRHQWxVLEVBQUFELFFBQUE0ZSxtQkFDQTNlLEVBQUFELFFBQUE2ZSxpQkFPQSxJQUFBQyxFQUFBLElBQUFwWSxPQUFBLENBR0EsVUFPQSwwR0FDQXZCLEtBQUEsVUFTQSxTQUFBdVosRUFBQUMsRUFBQXhLLEdBUUEsSUFQQSxJQUtBNEssRUFMQUMsRUFBQSxHQUNBdmQsRUFBQSxFQUNBc0MsRUFBQSxFQUNBd0MsRUFBQSxHQUNBMFksRUFBQTlLLEtBQUErSyxXQUFBLElBR0EsT0FBQUgsRUFBQUQsRUFBQTNKLEtBQUF3SixLQUFBLENBQ0EsSUFBQXJlLEVBQUF5ZSxFQUFBLEdBQ0FJLEVBQUFKLEVBQUEsR0FDQUssRUFBQUwsRUFBQWhiLE1BS0EsR0FKQXdDLEdBQUFvWSxFQUFBN1gsTUFBQS9DLEVBQUFxYixHQUNBcmIsRUFBQXFiLEVBQUE5ZSxFQUFBZ0MsT0FHQTZjLEVBQ0E1WSxHQUFBNFksRUFBQSxPQURBLENBS0EsSUFBQW5ELEVBQUEyQyxFQUFBNWEsR0FDQVQsRUFBQXliLEVBQUEsR0FDQXRlLEVBQUFzZSxFQUFBLEdBQ0FNLEVBQUFOLEVBQUEsR0FDQU8sRUFBQVAsRUFBQSxHQUNBUSxFQUFBUixFQUFBLEdBQ0FTLEVBQUFULEVBQUEsR0FHQXhZLElBQ0F5WSxFQUFBclcsS0FBQXBDLEdBQ0FBLEVBQUEsSUFHQSxJQUFBa1osRUFBQSxNQUFBbmMsR0FBQSxNQUFBMFksT0FBQTFZLEVBQ0FvYyxFQUFBLE1BQUFILEdBQUEsTUFBQUEsRUFDQUksRUFBQSxNQUFBSixHQUFBLE1BQUFBLEVBQ0FMLEVBQUFILEVBQUEsSUFBQUUsRUFDQVcsRUFBQVAsR0FBQUMsRUFFQU4sRUFBQXJXLEtBQUEsQ0FDQWxJLFFBQUFnQixJQUNBNkIsVUFBQSxHQUNBNGIsWUFDQVMsV0FDQUQsU0FDQUQsVUFDQUQsYUFDQUksVUFBQUMsRUFBQUQsR0FBQUosRUFBQSxVQUFBTSxFQUFBWixHQUFBLFNBY0EsT0FUQW5iLEVBQUE0YSxFQUFBcmMsU0FDQWlFLEdBQUFvWSxFQUFBdlosT0FBQXJCLElBSUF3QyxHQUNBeVksRUFBQXJXLEtBQUFwQyxHQUdBeVksRUFvQkEsU0FBQWUsRUFBQXBCLEdBQ0EsT0FBQXFCLFVBQUFyQixHQUFBeFIsUUFBQSxtQkFBQTVNLEdBQ0EsVUFBQUEsRUFBQTBmLFdBQUEsR0FBQTVVLFNBQUEsSUFBQTZVLGdCQW1CQSxTQUFBdEIsRUFBQUksR0FLQSxJQUhBLElBQUFtQixFQUFBLElBQUF2YSxNQUFBb1osRUFBQTFjLFFBR0FwQyxFQUFBLEVBQWlCQSxFQUFBOGUsRUFBQTFjLE9BQW1CcEMsSUFDcEMsaUJBQUE4ZSxFQUFBOWUsS0FDQWlnQixFQUFBamdCLEdBQUEsSUFBQXdHLE9BQUEsT0FBQXNZLEVBQUE5ZSxHQUFBMGYsUUFBQSxPQUlBLGdCQUFBcmEsRUFBQTZhLEdBTUEsSUFMQSxJQUFBN1osRUFBQSxHQUNBOFosRUFBQTlhLEdBQUEsR0FFQSthLEdBREFGLEdBQUEsSUFDQXZNLE9BQUFrTSxFQUFBUSxtQkFFQXJnQixFQUFBLEVBQW1CQSxFQUFBOGUsRUFBQTFjLE9BQW1CcEMsSUFBQSxDQUN0QyxJQUFBc2dCLEVBQUF4QixFQUFBOWUsR0FFQSxvQkFBQXNnQixFQUFBLENBTUEsSUFDQUMsRUFEQXRmLEVBQUFrZixFQUFBRyxFQUFBL2YsTUFHQSxTQUFBVSxFQUFBLENBQ0EsR0FBQXFmLEVBQUFiLFNBQUEsQ0FFQWEsRUFBQWYsVUFDQWxaLEdBQUFpYSxFQUFBbGQsUUFHQSxTQUVBLFVBQUF3WSxVQUFBLGFBQUEwRSxFQUFBL2YsS0FBQSxtQkFJQSxHQUFBK2QsRUFBQXJkLEdBQUEsQ0FDQSxJQUFBcWYsRUFBQWQsT0FDQSxVQUFBNUQsVUFBQSxhQUFBMEUsRUFBQS9mLEtBQUEsa0NBQUFpZ0IsS0FBQUMsVUFBQXhmLEdBQUEsS0FHQSxPQUFBQSxFQUFBbUIsT0FBQSxDQUNBLEdBQUFrZSxFQUFBYixTQUNBLFNBRUEsVUFBQTdELFVBQUEsYUFBQTBFLEVBQUEvZixLQUFBLHFCQUlBLFFBQUFtZ0IsRUFBQSxFQUF1QkEsRUFBQXpmLEVBQUFtQixPQUFrQnNlLElBQUEsQ0FHekMsR0FGQUgsRUFBQUgsRUFBQW5mLEVBQUF5ZixLQUVBVCxFQUFBamdCLEdBQUF5RyxLQUFBOFosR0FDQSxVQUFBM0UsVUFBQSxpQkFBQTBFLEVBQUEvZixLQUFBLGVBQUErZixFQUFBWixRQUFBLG9CQUFBYyxLQUFBQyxVQUFBRixHQUFBLEtBR0FsYSxJQUFBLElBQUFxYSxFQUFBSixFQUFBbGQsT0FBQWtkLEVBQUF0QixXQUFBdUIsT0FwQkEsQ0E0QkEsR0FGQUEsRUFBQUQsRUFBQWhCLFNBNUVBUSxVQTRFQTdlLEdBNUVBZ00sUUFBQSxpQkFBQTVNLEdBQ0EsVUFBQUEsRUFBQTBmLFdBQUEsR0FBQTVVLFNBQUEsSUFBQTZVLGdCQTJFQUksRUFBQW5mLElBRUFnZixFQUFBamdCLEdBQUF5RyxLQUFBOFosR0FDQSxVQUFBM0UsVUFBQSxhQUFBMEUsRUFBQS9mLEtBQUEsZUFBQStmLEVBQUFaLFFBQUEsb0JBQUFhLEVBQUEsS0FHQWxhLEdBQUFpYSxFQUFBbGQsT0FBQW1kLFFBckRBbGEsR0FBQWlhLEVBd0RBLE9BQUFqYSxHQVVBLFNBQUF1WixFQUFBbkIsR0FDQSxPQUFBQSxFQUFBeFIsUUFBQSw2QkFBbUMsUUFTbkMsU0FBQTBTLEVBQUFQLEdBQ0EsT0FBQUEsRUFBQW5TLFFBQUEsd0JBVUEsU0FBQTBULEVBQUFDLEVBQUFoZSxHQUVBLE9BREFnZSxFQUFBaGUsT0FDQWdlLEVBU0EsU0FBQUMsRUFBQTVNLEdBQ0EsT0FBQUEsRUFBQU8sVUFBQSxPQXdFQSxTQUFBbUssRUFBQUcsRUFBQWxjLEVBQUFxUixHQUNBcUssRUFBQTFiLEtBQ0FxUixFQUFpQ3JSLEdBQUFxUixFQUNqQ3JSLEVBQUEsSUFVQSxJQUxBLElBQUEwUixHQUZBTCxLQUFBLElBRUFLLE9BQ0FPLEdBQUEsSUFBQVosRUFBQVksSUFDQWlNLEVBQUEsR0FHQTlnQixFQUFBLEVBQWlCQSxFQUFBOGUsRUFBQTFjLE9BQW1CcEMsSUFBQSxDQUNwQyxJQUFBc2dCLEVBQUF4QixFQUFBOWUsR0FFQSxvQkFBQXNnQixFQUNBUSxHQUFBbEIsRUFBQVUsT0FDSyxDQUNMLElBQUFsZCxFQUFBd2MsRUFBQVUsRUFBQWxkLFFBQ0ErYixFQUFBLE1BQUFtQixFQUFBWixRQUFBLElBRUE5YyxFQUFBNkYsS0FBQTZYLEdBRUFBLEVBQUFkLFNBQ0FMLEdBQUEsTUFBQS9iLEVBQUErYixFQUFBLE1BYUEyQixHQU5BM0IsRUFKQW1CLEVBQUFiLFNBQ0FhLEVBQUFmLFFBR0FuYyxFQUFBLElBQUErYixFQUFBLEtBRkEsTUFBQS9iLEVBQUEsSUFBQStiLEVBQUEsTUFLQS9iLEVBQUEsSUFBQStiLEVBQUEsS0FPQSxJQUFBSCxFQUFBWSxFQUFBM0wsRUFBQStLLFdBQUEsS0FDQStCLEVBQUFELEVBQUFsYSxPQUFBb1ksRUFBQTVjLFVBQUE0YyxFQWtCQSxPQVpBMUssSUFDQXdNLEdBQUFDLEVBQUFELEVBQUFsYSxNQUFBLEdBQUFvWSxFQUFBNWMsUUFBQTBlLEdBQUEsTUFBQTlCLEVBQUEsV0FJQThCLEdBREFqTSxFQUNBLElBSUFQLEdBQUF5TSxFQUFBLFNBQUEvQixFQUFBLE1BR0EyQixFQUFBLElBQUFuYSxPQUFBLElBQUFzYSxFQUFBRCxFQUFBNU0sSUFBQXJSLEdBZUEsU0FBQTJiLEVBQUFsWSxFQUFBekQsRUFBQXFSLEdBUUEsT0FQQXFLLEVBQUExYixLQUNBcVIsRUFBaUNyUixHQUFBcVIsRUFDakNyUixFQUFBLElBR0FxUixLQUFBLEdBRUE1TixhQUFBRyxPQWxKQSxTQUFBSCxFQUFBekQsR0FFQSxJQUFBb2UsRUFBQTNhLEVBQUFoRSxPQUFBa1EsTUFBQSxhQUVBLEdBQUF5TyxFQUNBLFFBQUFoaEIsRUFBQSxFQUFtQkEsRUFBQWdoQixFQUFBNWUsT0FBbUJwQyxJQUN0QzRDLEVBQUE2RixLQUFBLENBQ0FsSSxLQUFBUCxFQUNBb0QsT0FBQSxLQUNBNGIsVUFBQSxLQUNBUyxVQUFBLEVBQ0FELFFBQUEsRUFDQUQsU0FBQSxFQUNBRCxVQUFBLEVBQ0FJLFFBQUEsT0FLQSxPQUFBaUIsRUFBQXRhLEVBQUF6RCxHQWdJQXFlLENBQUE1YSxFQUFrRCxHQUdsRGlZLEVBQUFqWSxHQXhIQSxTQUFBQSxFQUFBekQsRUFBQXFSLEdBR0EsSUFGQSxJQUFBaU4sRUFBQSxHQUVBbGhCLEVBQUEsRUFBaUJBLEVBQUFxRyxFQUFBakUsT0FBaUJwQyxJQUNsQ2toQixFQUFBelksS0FBQThWLEVBQUFsWSxFQUFBckcsR0FBQTRDLEVBQUFxUixHQUFBNVIsUUFLQSxPQUFBc2UsRUFGQSxJQUFBbmEsT0FBQSxNQUFBMGEsRUFBQWpjLEtBQUEsU0FBQTRiLEVBQUE1TSxJQUVBclIsR0FnSEF1ZSxDQUEyQyxFQUE4QixFQUFBbE4sR0FyR3pFLFNBQUE1TixFQUFBekQsRUFBQXFSLEdBQ0EsT0FBQTBLLEVBQUFILEVBQUFuWSxFQUFBNE4sR0FBQXJSLEVBQUFxUixHQXVHQW1OLENBQTBDLEVBQThCLEVBQUFuTixtQ0N4YXhFLFNBQUFvTixFQUFBdGhCLEdBQUEsSUFHQXVoQixFQUhBQyxFQUFBM2hCLEVBQUEsSUFNQTBoQixFQURBLG9CQUFBbk8sS0FDQUEsS0FDQyxvQkFBQS9KLE9BQ0RBLFlBQ0MsSUFBQWlZLEVBQ0RBLEVBRUF0aEIsRUFLQSxJQUFBaUYsRUFBYXRFLE9BQUE2Z0IsRUFBQSxFQUFBN2dCLENBQVE0Z0IsR0FDTjllLEVBQUE7Ozs7O0VDVmYsSUFBQW9XLEVBQUFsWSxPQUFBa1ksc0JBQ0EvVyxFQUFBbkIsT0FBQWtCLFVBQUFDLGVBQ0EyZixFQUFBOWdCLE9BQUFrQixVQUFBNmYscUJBc0RBMWhCLEVBQUFELFFBNUNBLFdBQ0EsSUFDQSxJQUFBWSxPQUFBdUIsT0FDQSxTQU1BLElBQUF5ZixFQUFBLElBQUF4RixPQUFBLE9BRUEsR0FEQXdGLEVBQUEsUUFDQSxNQUFBaGhCLE9BQUFpWSxvQkFBQStJLEdBQUEsR0FDQSxTQUtBLElBREEsSUFBQUMsRUFBQSxHQUNBM2hCLEVBQUEsRUFBaUJBLEVBQUEsR0FBUUEsSUFDekIyaEIsRUFBQSxJQUFBekYsT0FBQTBGLGFBQUE1aEIsTUFLQSxrQkFIQVUsT0FBQWlZLG9CQUFBZ0osR0FBQXBTLElBQUEsU0FBQTlOLEdBQ0EsT0FBQWtnQixFQUFBbGdCLEtBRUF3RCxLQUFBLElBQ0EsU0FJQSxJQUFBNGMsRUFBQSxHQUlBLE1BSEEsdUJBQUF4ZCxNQUFBLElBQUEwRSxRQUFBLFNBQUErWSxHQUNBRCxFQUFBQyxPQUdBLHlCQURBcGhCLE9BQUFrQyxLQUFBbEMsT0FBQXVCLE9BQUEsR0FBa0M0ZixJQUFBNWMsS0FBQSxJQU1oQyxNQUFBaVosR0FFRixVQUlBNkQsR0FBQXJoQixPQUFBdUIsT0FBQSxTQUFBQyxFQUFBRyxHQUtBLElBSkEsSUFBQTZCLEVBRUE4ZCxFQURBL2QsRUF0REEsU0FBQWdlLEdBQ0EsR0FBQUEsUUFDQSxVQUFBckcsVUFBQSx5REFHQSxPQUFBbGIsT0FBQXVoQixHQWlEQUMsQ0FBQWhnQixHQUdBSCxFQUFBLEVBQWdCQSxFQUFBSSxVQUFBQyxPQUFzQkwsSUFBQSxDQUd0QyxRQUFBUixLQUZBMkMsRUFBQXhELE9BQUF5QixVQUFBSixJQUdBRixFQUFBMUIsS0FBQStELEVBQUEzQyxLQUNBMEMsRUFBQTFDLEdBQUEyQyxFQUFBM0MsSUFJQSxHQUFBcVgsRUFBQSxDQUNBb0osRUFBQXBKLEVBQUExVSxHQUNBLFFBQUFsRSxFQUFBLEVBQWtCQSxFQUFBZ2lCLEVBQUE1ZixPQUFvQnBDLElBQ3RDd2hCLEVBQUFyaEIsS0FBQStELEVBQUE4ZCxFQUFBaGlCLE1BQ0FpRSxFQUFBK2QsRUFBQWhpQixJQUFBa0UsRUFBQThkLEVBQUFoaUIsTUFNQSxPQUFBaUUsaUNDdEZBbkUsRUFBQXNCLFlBQUEsRUFFQSxJQUVBK2dCLEVBQUFDLEVBRmF4aUIsRUFBUSxJQU1yQnlpQixFQUFBRCxFQUZzQnhpQixFQUFRLEtBSTlCLFNBQUF3aUIsRUFBQS9jLEdBQXNDLE9BQUFBLEtBQUFqRSxXQUFBaUUsRUFBQSxDQUF1Q2lkLFFBQUFqZCxHQUU3RXZGLEVBQUF3aUIsUUFBQUgsRUFBQUcsUUFBQUMsZUFBQUYsRUFBQUMsUUFDQXZpQixFQUFBRCxVQUFBLHNDQ2ZlLFNBQUEwaUIsRUFBQWxCLEdBQ2YsSUFBQXRjLEVBQ0FqRSxFQUFBdWdCLEVBQUF2Z0IsT0FhQSxNQVhBLG1CQUFBQSxFQUNBQSxFQUFBMGhCLFdBQ0F6ZCxFQUFBakUsRUFBQTBoQixZQUVBemQsRUFBQWpFLEVBQUEsY0FDQUEsRUFBQTBoQixXQUFBemQsR0FHQUEsRUFBQSxlQUdBQSxFQWZBcEYsRUFBQVUsRUFBQWtDLEVBQUEsc0JBQUFnZ0IsdUtDQUEsSUFBQUUsRUFBQUMsRUFBQS9pQixFQUFBLElBQ0FnakIsRUFBQUQsRUFBQS9pQixFQUFBLEtBRUFpakIsRUFBQUYsRUFBQS9pQixFQUFBLEtBQ0FrakIsRUFBQWxqQixFQUFBLElBQ0FtakIsRUFBQW5qQixFQUFBLElBQ0FvakIsRUFBQXBqQixFQUFBLElBQ0FxakIsRUFBQU4sRUFBQS9pQixFQUFBLEtBQ0FzakIsRUFBQVAsRUFBQS9pQixFQUFBLEtBRU00ZCxFQUFRdUYsRUFBQWxKLFlBQVlxSixFQUFBLFFBQVUsR0FBSUgsRUFBQS9JLGdCQUFnQmlKLEVBQUEsVUFFeERMLEVBQUEsUUFBU08sUUFDUFQsRUFBQSxRQUFBcFosY0FBQzBaLEVBQUEzUixTQUFRLENBQUNtTSxNQUFPQSxHQUNma0YsRUFBQSxRQUFBcFosY0FBQ3daLEVBQUFNLGNBQWEsS0FDWlYsRUFBQSxRQUFBcFosY0FBQ3VaLEVBQUEsUUFBTSxRQUdYeFosU0FBU2dhLGVBQWU7Ozs7Ozs7O0dDVGIsSUFBQXZmLEVBQU1sRSxFQUFRLElBQWU2QixFQUFBLG1CQUFBVixlQUFBdWlCLElBQUF4aEIsRUFBQUwsRUFBQVYsT0FBQXVpQixJQUFBLHVCQUFBQyxFQUFBOWhCLEVBQUFWLE9BQUF1aUIsSUFBQSxzQkFBQXhpQixFQUFBVyxFQUFBVixPQUFBdWlCLElBQUEsd0JBQUFwaUIsRUFBQU8sRUFBQVYsT0FBQXVpQixJQUFBLDJCQUFBRSxFQUFBL2hCLEVBQUFWLE9BQUF1aUIsSUFBQSx3QkFBQUcsRUFBQWhpQixFQUFBVixPQUFBdWlCLElBQUEsd0JBQUFJLEVBQUFqaUIsRUFBQVYsT0FBQXVpQixJQUFBLHVCQUFBSyxFQUFBbGlCLEVBQUFWLE9BQUF1aUIsSUFBQSwrQkFBQU0sRUFBQW5pQixFQUFBVixPQUFBdWlCLElBQUEsMkJBQUFPLEVBQUFwaUIsRUFBQVYsT0FBQXVpQixJQUFBLHdCQUFBUSxFQUFBcmlCLEVBQUFWLE9BQUF1aUIsSUFBQSxjQUMxQyxNQUFBUyxFQUFBdGlCLEVBQUFWLE9BQUF1aUIsSUFBQSxvQkFBQVUsRUFBQSxtQkFBQWpqQixlQUFBcUUsU0FDQSxTQUFBNmUsRUFBQXplLEdBQWMsUUFBQUMsRUFBQXRELFVBQUFDLE9BQUEsRUFBQTlCLEVBQUEseURBQUFrRixFQUFBbkYsRUFBQSxFQUE4RkEsRUFBQW9GLEVBQUlwRixJQUFBQyxHQUFBLFdBQUErZixtQkFBQWxlLFVBQUE5QixFQUFBLEtBRHhCLFNBQUFtRixFQUFBQyxFQUFBbkYsRUFBQUQsRUFBQW9ILEVBQUEyVyxFQUFBOEYsRUFBQXpLLEdBQTZCLElBQUFqVSxFQUFBLENBQWdCLEdBQVRBLE9BQUEsT0FBUyxJQUFBQyxFQUFBRCxFQUFBakMsTUFBQSxxSUFBdUosQ0FBSyxJQUFBdEQsRUFBQSxDQUFBSyxFQUFBRCxFQUFBb0gsRUFBQTJXLEVBQUE4RixFQUFBekssR0FBQXJaLEVBQUEsR0FBd0JvRixFQUFBakMsTUFBQWtDLEVBQUF3SCxRQUFBLGlCQUFtQyxPQUFBaE4sRUFBQUcsU0FBaUJHLEtBQUEsc0JBQTZDLE1BQWhCaUYsRUFBQW9VLFlBQUEsRUFBZ0JwVSxHQUNyUDJlLEVBQUEsMkJBQUEzZSxFQUFBLDRIQUFtQ2xGLEdBQTZILElBQUF3VyxFQUFBLENBQU9zTixVQUFBLFdBQXFCLFVBQVNDLG1CQUFBLGFBQWdDQyxvQkFBQSxhQUFpQ0MsZ0JBQUEsY0FBOEJDLEVBQUEsR0FDemMsU0FBQUMsRUFBQWpmLEVBQUFDLEVBQUFuRixHQUFrQmlDLEtBQUFzSCxNQUFBckUsRUFBYWpELEtBQUFnTyxRQUFBOUssRUFBZWxELEtBQUFtaUIsS0FBQUYsRUFBWWppQixLQUFBb2lCLFFBQUFya0IsR0FBQXdXLEVBQXNTLFNBQUE4TixLQUFzQyxTQUFBQyxFQUFBcmYsRUFBQUMsRUFBQW5GLEdBQWtCaUMsS0FBQXNILE1BQUFyRSxFQUFhakQsS0FBQWdPLFFBQUE5SyxFQUFlbEQsS0FBQW1pQixLQUFBRixFQUFZamlCLEtBQUFvaUIsUUFBQXJrQixHQUFBd1csRUFBcFgyTixFQUFBN2lCLFVBQUFrakIsaUJBQUEsR0FBZ0NMLEVBQUE3aUIsVUFBQXlKLFNBQUEsU0FBQTdGLEVBQUFDLEdBQW1DLGlCQUFBRCxHQUFBLG1CQUFBQSxHQUFBLE1BQUFBLEdBQUF5ZSxFQUFBLE1BQW1FMWhCLEtBQUFvaUIsUUFBQUosZ0JBQUFoaUIsS0FBQWlELEVBQUFDLEVBQUEsYUFBbURnZixFQUFBN2lCLFVBQUFtakIsWUFBQSxTQUFBdmYsR0FBb0NqRCxLQUFBb2lCLFFBQUFOLG1CQUFBOWhCLEtBQUFpRCxFQUFBLGdCQUFxRW9mLEVBQUFoakIsVUFBQTZpQixFQUFBN2lCLFVBQW9HLElBQUFvakIsRUFBQUgsRUFBQWpqQixVQUFBLElBQUFnakIsRUFDbGRJLEVBQUEvaEIsWUFBQTRoQixFQUFnQi9nQixFQUFBa2hCLEVBQUFQLEVBQUE3aUIsV0FBaUJvakIsRUFBQUMsc0JBQUEsRUFBMEIsSUFBQUMsRUFBQSxDQUFPQyxRQUFBLE1BQWFDLEVBQUEsQ0FBSUQsUUFBQSxNQUFhRSxFQUFBM2tCLE9BQUFrQixVQUFBQyxlQUFBeWpCLEVBQUEsQ0FBc0MvakIsS0FBQSxFQUFBMlYsS0FBQSxFQUFBcU8sUUFBQSxFQUFBQyxVQUFBLEdBQ3RJLFNBQUFDLEVBQUFqZ0IsRUFBQUMsRUFBQW5GLEdBQWtCLElBQUFELE9BQUEsRUFBQW9ILEVBQUEsR0FBaUIyVyxFQUFBLEtBQUE4RixFQUFBLEtBQWUsU0FBQXplLEVBQUEsSUFBQXBGLFVBQUEsSUFBQW9GLEVBQUF5UixNQUFBZ04sRUFBQXplLEVBQUF5UixVQUFBLElBQUF6UixFQUFBbEUsTUFBQTZjLEVBQUEsR0FBQTNZLEVBQUFsRSxLQUFBa0UsRUFBQTRmLEVBQUFsbEIsS0FBQXNGLEVBQUFwRixLQUFBaWxCLEVBQUF6akIsZUFBQXhCLEtBQUFvSCxFQUFBcEgsR0FBQW9GLEVBQUFwRixJQUE0SCxJQUFBb1osRUFBQXRYLFVBQUFDLE9BQUEsRUFBeUIsT0FBQXFYLEVBQUFoUyxFQUFBNkssU0FBQWhTLE9BQXNCLEtBQUFtWixFQUFBLENBQWEsUUFBQXhaLEVBQUF5RixNQUFBK1QsR0FBQXJaLEVBQUEsRUFBdUJBLEVBQUFxWixFQUFJclosSUFBQUgsRUFBQUcsR0FBQStCLFVBQUEvQixFQUFBLEdBQXdCcUgsRUFBQTZLLFNBQUFyUyxFQUFhLEdBQUF1RixLQUFBaVMsYUFBQSxJQUFBcFgsS0FBQW9aLEVBQUFqVSxFQUFBaVMsa0JBQUEsSUFBQWhRLEVBQUFwSCxLQUFBb0gsRUFBQXBILEdBQUFvWixFQUFBcFosSUFBNEUsT0FBT2dZLFNBQUF2VyxFQUFBaVcsS0FBQXZTLEVBQUFqRSxJQUFBNmMsRUFBQWxILElBQUFnTixFQUFBcmEsTUFBQXBDLEVBQUFpZSxPQUFBTixFQUFBRCxTQUMvUixTQUFBUSxFQUFBbmdCLEdBQWMsdUJBQUFBLEdBQUEsT0FBQUEsS0FBQTZTLFdBQUF2VyxFQUE0SixJQUFBOGpCLEVBQUEsT0FBQUMsRUFBQSxHQUFrQixTQUFBQyxFQUFBdGdCLEVBQUFDLEVBQUFuRixFQUFBRCxHQUFvQixHQUFBd2xCLEVBQUF6akIsT0FBQSxDQUFhLElBQUFxRixFQUFBb2UsRUFBQTloQixNQUFzRSxPQUF4RDBELEVBQUF6QyxPQUFBUSxFQUFXaUMsRUFBQXNlLFVBQUF0Z0IsRUFBY2dDLEVBQUF1ZSxLQUFBMWxCLEVBQVNtSCxFQUFBOEksUUFBQWxRLEVBQVlvSCxFQUFBOE4sTUFBQSxFQUFVOU4sRUFBUyxPQUFPekMsT0FBQVEsRUFBQXVnQixVQUFBdGdCLEVBQUF1Z0IsS0FBQTFsQixFQUFBaVEsUUFBQWxRLEVBQUFrVixNQUFBLEdBQ2paLFNBQUEwUSxFQUFBemdCLEdBQWNBLEVBQUFSLE9BQUEsS0FBY1EsRUFBQXVnQixVQUFBLEtBQWlCdmdCLEVBQUF3Z0IsS0FBQSxLQUFZeGdCLEVBQUErSyxRQUFBLEtBQWUvSyxFQUFBK1AsTUFBQSxFQUFVLEdBQUFzUSxFQUFBempCLFFBQUF5akIsRUFBQXBkLEtBQUFqRCxHQUVtRyxTQUFBMGdCLEVBQUExZ0IsRUFBQUMsRUFBQW5GLEdBQWtCLGFBQUFrRixFQUFBLEVBRHZNLFNBQUEyZ0IsRUFBQTNnQixFQUFBQyxFQUFBbkYsRUFBQUQsR0FBb0IsSUFBQW9ILFNBQUFqQyxFQUFlLGNBQUFpQyxHQUFBLFlBQUFBLElBQUFqQyxFQUFBLE1BQXlDLElBQUE0WSxHQUFBLEVBQVMsVUFBQTVZLEVBQUE0WSxHQUFBLE9BQWlCLE9BQUEzVyxHQUFlLDBCQUFBMlcsR0FBQSxFQUFpQyxNQUFNLG9CQUFBNVksRUFBQTZTLFVBQWlDLEtBQUF2VyxFQUFBLEtBQUF5aEIsRUFBQW5GLEdBQUEsR0FBb0IsR0FBQUEsRUFBQSxPQUFBOWQsRUFBQUQsRUFBQW1GLEVBQUEsS0FBQUMsRUFBQSxJQUFBMmdCLEVBQUE1Z0IsRUFBQSxHQUFBQyxHQUFBLEVBQWdFLEdBQXZCMlksRUFBQSxFQUFJM1ksRUFBQSxLQUFBQSxFQUFBLElBQUFBLEVBQUEsSUFBbUJDLE1BQUFDLFFBQUFILEdBQUEsUUFBQTBlLEVBQUEsRUFBZ0NBLEVBQUExZSxFQUFBcEQsT0FBVzhoQixJQUFBLENBQVksSUFBQXpLLEVBQUFoVSxFQUFBMmdCLEVBQVAzZSxFQUFBakMsRUFBQTBlLEdBQU9BLEdBQWU5RixHQUFBK0gsRUFBQTFlLEVBQUFnUyxFQUFBblosRUFBQUQsUUFBYyxHQUFBb1osRUFBQSxPQUFBalUsR0FBQSxpQkFBQUEsRUFBQSx3QkFBQWlVLEVBQUF1SyxHQUFBeGUsRUFBQXdlLElBQUF4ZSxFQUFBLGVBQUFpVSxFQUFBLHdCQUFBQSxFQUFBLElBQUFqVSxFQUFBaVUsRUFBQXRaLEtBQUFxRixHQUFBMGUsRUFDclcsSUFBRXpjLEVBQUFqQyxFQUFBc1csUUFBQXVLLE1BQW1CakksR0FBQStILEVBQUExZSxJQUFBeEcsTUFBQXdZLEVBQUFoVSxFQUFBMmdCLEVBQUEzZSxFQUFBeWMsS0FBQTVqQixFQUFBRCxPQUFzQyxXQUFBb0gsR0FBQXdjLEVBQUEseUJBQUEzakIsRUFBQSxHQUFBa0YsR0FBQSxxQkFBMEU5RSxPQUFBa0MsS0FBQTRDLEdBQUFQLEtBQUEsVUFBOEIzRSxFQUFBLElBQVMsT0FBQThkLEVBQTJCK0gsQ0FBQTNnQixFQUFBLEdBQUFDLEVBQUFuRixHQUE2QixTQUFBOGxCLEVBQUE1Z0IsRUFBQUMsR0FBZ0IsdUJBQUFELEdBQUEsT0FBQUEsR0FBQSxNQUFBQSxFQUFBakUsSUFIcEYsU0FBQWlFLEdBQW1CLElBQUFDLEVBQUEsQ0FBTzZnQixJQUFBLEtBQUFDLElBQUEsTUFBbUIsY0FBQS9nQixHQUFBeUgsUUFBQSxpQkFBQXpILEdBQTZDLE9BQUFDLEVBQUFELEtBR05naEIsQ0FBQWhoQixFQUFBakUsS0FBQWtFLEVBQUEwRixTQUFBLElBQThFLFNBQUFzYixFQUFBamhCLEVBQUFDLEdBQWlCRCxFQUFBd2dCLEtBQUE3bEIsS0FBQXFGLEVBQUErSyxRQUFBOUssRUFBQUQsRUFBQStQLFNBQ25WLFNBQUFtUixFQUFBbGhCLEVBQUFDLEVBQUFuRixHQUFtQixJQUFBRCxFQUFBbUYsRUFBQVIsT0FBQXlDLEVBQUFqQyxFQUFBdWdCLFVBQTZCdmdCLElBQUF3Z0IsS0FBQTdsQixLQUFBcUYsRUFBQStLLFFBQUE5SyxFQUFBRCxFQUFBK1AsU0FBcUM3UCxNQUFBQyxRQUFBSCxHQUFBbWhCLEVBQUFuaEIsRUFBQW5GLEVBQUFDLEVBQUEsU0FBQWtGLEdBQXFDLE9BQUFBLElBQVMsTUFBQUEsSUFBQW1nQixFQUFBbmdCLE9BSm5JLFNBQUFBLEVBQUFDLEdBQWlCLE9BQU80UyxTQUFBdlcsRUFBQWlXLEtBQUF2UyxFQUFBdVMsS0FBQXhXLElBQUFrRSxFQUFBeVIsSUFBQTFSLEVBQUEwUixJQUFBck4sTUFBQXJFLEVBQUFxRSxNQUFBNmIsT0FBQWxnQixFQUFBa2dCLFFBSTJHa0IsQ0FBQXBoQixFQUFBaUMsSUFBQWpDLEVBQUFqRSxLQUFBa0UsS0FBQWxFLE1BQUFpRSxFQUFBakUsSUFBQSxPQUFBaUUsRUFBQWpFLEtBQUEwTCxRQUFBMlksRUFBQSxZQUFBdGxCLElBQUFELEVBQUFvSSxLQUFBakQsSUFBeUcsU0FBQW1oQixFQUFBbmhCLEVBQUFDLEVBQUFuRixFQUFBRCxFQUFBb0gsR0FBc0IsSUFBQTJXLEVBQUEsR0FBUyxNQUFBOWQsSUFBQThkLEdBQUEsR0FBQTlkLEdBQUEyTSxRQUFBMlksRUFBQSxZQUFzRE0sRUFBQTFnQixFQUFBa2hCLEVBQWJqaEIsRUFBQXFnQixFQUFBcmdCLEVBQUEyWSxFQUFBL2QsRUFBQW9ILElBQXVCd2UsRUFBQXhnQixHQUFLLFNBQUFvaEIsSUFBYSxJQUFBcmhCLEVBQUEwZixFQUFBQyxRQUF5QyxPQUF6QixPQUFBM2YsR0FBQXllLEVBQUEsT0FBeUJ6ZSxFQUN0WSxJQUFBc2hCLEVBQUEsQ0FBT3hSLFNBQUEsQ0FBVS9GLElBQUEsU0FBQS9KLEVBQUFDLEVBQUFuRixHQUFvQixTQUFBa0YsRUFBQSxPQUFBQSxFQUFvQixJQUFBbkYsRUFBQSxHQUF5QixPQUFoQnNtQixFQUFBbmhCLEVBQUFuRixFQUFBLEtBQUFvRixFQUFBbkYsR0FBZ0JELEdBQVMwSSxRQUFBLFNBQUF2RCxFQUFBQyxFQUFBbkYsR0FBeUIsU0FBQWtGLEVBQUEsT0FBQUEsRUFBdUMwZ0IsRUFBQTFnQixFQUFBaWhCLEVBQW5CaGhCLEVBQUFxZ0IsRUFBQSxVQUFBcmdCLEVBQUFuRixJQUE2QjJsQixFQUFBeGdCLElBQUs4UCxNQUFBLFNBQUEvUCxHQUFtQixPQUFBMGdCLEVBQUExZ0IsRUFBQSxXQUFzQixhQUFZLE9BQU91aEIsUUFBQSxTQUFBdmhCLEdBQXFCLElBQUFDLEVBQUEsR0FBMkMsT0FBbENraEIsRUFBQW5oQixFQUFBQyxFQUFBLGNBQUFELEdBQXVCLE9BQUFBLElBQVdDLEdBQVN1aEIsS0FBQSxTQUFBeGhCLEdBQXVDLE9BQXJCbWdCLEVBQUFuZ0IsSUFBQXllLEVBQUEsT0FBcUJ6ZSxJQUFVeWhCLFVBQUEsV0FBc0IsT0FBTzlCLFFBQUEsT0FBYzNTLFVBQUFpUyxFQUFBeUMsY0FBQXJDLEVBQUF0QyxjQUFBLFNBQUEvYyxFQUFBQyxHQUMzUixZQURvVixJQUFBQSxNQUFBLE9BQXFCRCxFQUFBLENBQUc2UyxTQUFBcUwsRUFBQXlELHNCQUFBMWhCLEVBQzVkMmhCLGNBQUE1aEIsRUFBQTZoQixlQUFBN2hCLEVBQUE4aEIsYUFBQSxFQUFBalcsU0FBQSxLQUFBRSxTQUFBLE9BQTZFRixTQUFBLENBQVlnSCxTQUFBb0wsRUFBQThELFNBQUEvaEIsR0FBdUJBLEVBQUErTCxTQUFBL0wsR0FBb0JnaUIsV0FBQSxTQUFBaGlCLEdBQXdCLE9BQU82UyxTQUFBdUwsRUFBQXZSLE9BQUE3TSxJQUFxQmlpQixLQUFBLFNBQUFqaUIsR0FBa0IsT0FBTzZTLFNBQUEwTCxFQUFBMkQsTUFBQWxpQixFQUFBbWlCLFNBQUEsRUFBQUMsUUFBQSxPQUE2Q3pTLEtBQUEsU0FBQTNQLEVBQUFDLEdBQW9CLE9BQU80UyxTQUFBeUwsRUFBQS9MLEtBQUF2UyxFQUFBOFMsYUFBQSxJQUFBN1MsRUFBQSxLQUFBQSxJQUE4Q29pQixZQUFBLFNBQUFyaUIsRUFBQUMsR0FBMkIsT0FBQW9oQixJQUFBZ0IsWUFBQXJpQixFQUFBQyxJQUE0QnFpQixXQUFBLFNBQUF0aUIsRUFBQUMsR0FBMEIsT0FBQW9oQixJQUFBaUIsV0FBQXRpQixFQUFBQyxJQUEyQnNpQixVQUFBLFNBQUF2aUIsRUFBQUMsR0FBeUIsT0FBQW9oQixJQUFBa0IsVUFBQXZpQixFQUFBQyxJQUEwQnVpQixvQkFBQSxTQUFBeGlCLEVBQ3RlQyxFQUFBbkYsR0FBSyxPQUFBdW1CLElBQUFtQixvQkFBQXhpQixFQUFBQyxFQUFBbkYsSUFBc0MybkIsY0FBQSxhQUEyQkMsZ0JBQUEsU0FBQTFpQixFQUFBQyxHQUErQixPQUFBb2hCLElBQUFxQixnQkFBQTFpQixFQUFBQyxJQUFnQzBpQixRQUFBLFNBQUEzaUIsRUFBQUMsR0FBdUIsT0FBQW9oQixJQUFBc0IsUUFBQTNpQixFQUFBQyxJQUF3QjJpQixXQUFBLFNBQUE1aUIsRUFBQUMsRUFBQW5GLEdBQTRCLE9BQUF1bUIsSUFBQXVCLFdBQUE1aUIsRUFBQUMsRUFBQW5GLElBQTZCK25CLE9BQUEsU0FBQTdpQixHQUFvQixPQUFBcWhCLElBQUF3QixPQUFBN2lCLElBQXFCOGlCLFNBQUEsU0FBQTlpQixHQUFzQixPQUFBcWhCLElBQUF5QixTQUFBOWlCLElBQXVCK2lCLFNBQUF6bkIsRUFBQTBuQixXQUFBdG5CLEVBQUF1bkIsU0FBQTVFLEVBQUF2YSxjQUFBbWMsRUFBQTVPLGFBQUEsU0FBQXJSLEVBQUFDLEVBQUFuRixHQUFpRixNQUFBa0YsR0FBQXllLEVBQUEsTUFBQXplLEdBQXVDLElBQUFuRixPQUFBLEVBQUFvSCxFQUFBM0QsRUFBQSxHQUFtQjBCLEVBQUFxRSxPQUFBdVUsRUFBQTVZLEVBQUFqRSxJQUFBMmlCLEVBQUExZSxFQUFBMFIsSUFBQXVDLEVBQUFqVSxFQUFBa2dCLE9BQXFDLFNBQ25mamdCLEVBQUEsTUFBRyxJQUFBQSxFQUFBeVIsTUFBQWdOLEVBQUF6ZSxFQUFBeVIsSUFBQXVDLEVBQUEyTCxFQUFBRCxjQUFzQyxJQUFBMWYsRUFBQWxFLE1BQUE2YyxFQUFBLEdBQUEzWSxFQUFBbEUsS0FBNkIsSUFBQXRCLE9BQUEsRUFBa0UsSUFBQUksS0FBckRtRixFQUFBdVMsTUFBQXZTLEVBQUF1UyxLQUFBTixlQUFBeFgsRUFBQXVGLEVBQUF1UyxLQUFBTixjQUFxRGhTLEVBQUE0ZixFQUFBbGxCLEtBQUFzRixFQUFBcEYsS0FBQWlsQixFQUFBempCLGVBQUF4QixLQUFBb0gsRUFBQXBILFFBQUEsSUFBQW9GLEVBQUFwRixTQUFBLElBQUFKLElBQUFJLEdBQUFvRixFQUFBcEYsSUFBOEcsUUFBckJBLEVBQUE4QixVQUFBQyxPQUFBLEdBQXFCcUYsRUFBQTZLLFNBQUFoUyxPQUFzQixLQUFBRCxFQUFBLENBQWFKLEVBQUF5RixNQUFBckYsR0FBVyxRQUFBRCxFQUFBLEVBQVlBLEVBQUFDLEVBQUlELElBQUFILEVBQUFHLEdBQUErQixVQUFBL0IsRUFBQSxHQUF3QnFILEVBQUE2SyxTQUFBclMsRUFBYSxPQUFPb1ksU0FBQXZXLEVBQUFpVyxLQUFBdlMsRUFBQXVTLEtBQUF4VyxJQUFBNmMsRUFBQWxILElBQUFnTixFQUFBcmEsTUFBQXBDLEVBQUFpZSxPQUFBak0sSUFBcURpUCxjQUFBLFNBQUFsakIsR0FBMkIsSUFBQUMsRUFBQWdnQixFQUFBamtCLEtBQUEsS0FBQWdFLEdBQThCLE9BQVRDLEVBQUFzUyxLQUFBdlMsRUFBU0MsR0FBU21SLGVBQUErTyxFQUFBZ0QsUUFBQSxTQUN2ZEMsd0JBQUFqRixFQUFBa0Ysa0JBQUFyRixFQUFBc0YsbURBQUEsQ0FBa0dDLHVCQUFBN0QsRUFBQThELGtCQUFBNUQsRUFBQW5qQixPQUFBNkIsSUFBdURtbEIsRUFBQSxDQUFJM0csUUFBQXdFLEdBQVVvQyxFQUFBRCxHQUFBbkMsR0FBQW1DLEVBQVdscEIsRUFBQUQsUUFBQW9wQixFQUFBNUcsU0FBQTRHOzs7Ozs7OztHQ1pySyxJQUFBcEYsRUFBT2xrQixFQUFRLEdBQU82QixFQUFJN0IsRUFBUSxJQUFla0IsRUFBSWxCLEVBQVEsSUFDMUUsU0FBQStqQixFQUFBbmUsR0FBYyxRQUFBQyxFQUFBdEQsVUFBQUMsT0FBQSxFQUFBL0IsRUFBQSx5REFBQW1GLEVBQUFsRixFQUFBLEVBQThGQSxFQUFBbUYsRUFBSW5GLElBQUFELEdBQUEsV0FBQWdnQixtQkFBQWxlLFVBQUE3QixFQUFBLEtBRHpCLFNBQUFrRixFQUFBQyxFQUFBcEYsRUFBQUMsRUFBQW1ILEVBQUFnUyxFQUFBMkUsRUFBQThGLEdBQTZCLElBQUExZSxFQUFBLENBQWdCLEdBQVRBLE9BQUEsT0FBUyxJQUFBQyxFQUFBRCxFQUFBakMsTUFBQSxxSUFBdUosQ0FBSyxJQUFBdEQsRUFBQSxDQUFBSSxFQUFBQyxFQUFBbUgsRUFBQWdTLEVBQUEyRSxFQUFBOEYsR0FBQXBnQixFQUFBLEdBQXdCMEIsRUFBQWpDLE1BQUFrQyxFQUFBd0gsUUFBQSxpQkFBbUMsT0FBQWhOLEVBQUE2RCxTQUFpQnZELEtBQUEsc0JBQTZDLE1BQWhCaUYsRUFBQW9VLFlBQUEsRUFBZ0JwVSxHQUNwUHVlLEVBQUEsMkJBQUF2ZSxFQUFBLDRIQUFtQ25GLEdBQTZIeWpCLEdBQUFILEVBQUEsT0FDclUsSUFBQWlELEdBQUEsRUFBQUgsRUFBQSxLQUFBQyxHQUFBLEVBQUF5QyxFQUFBLEtBQUFDLEVBQUEsQ0FBb0NDLFFBQUEsU0FBQTdqQixHQUFvQm9oQixHQUFBLEVBQU1ILEVBQUFqaEIsSUFBTyxTQUFBOGpCLEVBQUE5akIsRUFBQUMsRUFBQXBGLEVBQUFDLEVBQUFtSCxFQUFBZ1MsRUFBQTJFLEVBQUE4RixFQUFBamtCLEdBQStCMm1CLEdBQUEsRUFBTUgsRUFBQSxLQUQ4TyxTQUFBamhCLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsRUFBQWdTLEVBQUEyRSxFQUFBOEYsRUFBQWprQixHQUErQixJQUFBNkQsRUFBQTRCLE1BQUE5RCxVQUFBZ0YsTUFBQXpHLEtBQUFnQyxVQUFBLEdBQThDLElBQUlzRCxFQUFBbkQsTUFBQWpDLEVBQUF5RCxHQUFhLE1BQUExRCxHQUFTbUMsS0FBQThtQixRQUFBanBCLEtBQzdVa0MsTUFBQThtQixFQUFBam5CLFdBQTZKLElBQUFvbkIsRUFBQSxLQUFBQyxFQUFBLEdBQy9RLFNBQUFDLElBQWMsR0FBQUYsRUFBQSxRQUFBL2pCLEtBQUFna0IsRUFBQSxDQUF1QixJQUFBL2pCLEVBQUErakIsRUFBQWhrQixHQUFBbkYsRUFBQWtwQixFQUFBMW1CLFFBQUEyQyxHQUFrRCxJQUF0QixFQUFBbkYsR0FBQXNqQixFQUFBLEtBQUFuZSxJQUFzQmtrQixFQUFBcnBCLEdBQW1FLFFBQUFDLEtBQXhEbUYsRUFBQWtrQixlQUFBaEcsRUFBQSxLQUFBbmUsR0FBaUNra0IsRUFBQXJwQixHQUFBb0YsRUFBUXBGLEVBQUFvRixFQUFBbWtCLFdBQWUsQ0FBZ0IsSUFBQW5pQixPQUFBLEVBQWFnUyxFQUFBcFosRUFBQUMsR0FBQThkLEVBQUEzWSxFQUFBeWUsRUFBQTVqQixFQUFtQnVwQixFQUFBaG9CLGVBQUFxaUIsSUFBQVAsRUFBQSxLQUFBTyxHQUFzQzJGLEVBQUEzRixHQUFBekssRUFBUSxJQUFBeFosRUFBQXdaLEVBQUFxUSx3QkFBZ0MsR0FBQTdwQixFQUFBLENBQU0sSUFBQXdILEtBQUF4SCxJQUFBNEIsZUFBQTRGLElBQUFzaUIsRUFBQTlwQixFQUFBd0gsR0FBQTJXLEVBQUE4RixHQUE2Q3pjLEdBQUEsT0FBS2dTLEVBQUF1USxrQkFBQUQsRUFBQXRRLEVBQUF1USxpQkFBQTVMLEVBQUE4RixHQUFBemMsR0FBQSxHQUFBQSxHQUFBLEVBQStEQSxHQUFBa2MsRUFBQSxLQUFBcmpCLEVBQUFrRixLQUMvWSxTQUFBdWtCLEVBQUF2a0IsRUFBQUMsRUFBQXBGLEdBQW1CNHBCLEVBQUF6a0IsSUFBQW1lLEVBQUEsTUFBQW5lLEdBQXdCeWtCLEVBQUF6a0IsR0FBQUMsRUFBUXlrQixFQUFBMWtCLEdBQUFDLEVBQUFta0IsV0FBQXZwQixHQUFBOHBCLGFBQW1DLElBQUFULEVBQUEsR0FBQUcsRUFBQSxHQUFlSSxFQUFBLEdBQU1DLEVBQUEsR0FBTUUsRUFBQSxLQUFBcmdCLEVBQUEsS0FBQXNnQixFQUFBLEtBQXlCLFNBQUFDLEVBQUE5a0IsRUFBQUMsRUFBQXBGLEdBQW1CLElBQUFDLEVBQUFrRixFQUFBdVMsTUFBQSxnQkFBOEJ2UyxFQUFBK2tCLGNBQUFGLEVBQUFocUIsR0FGbEQsU0FBQW1GLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsRUFBQWdTLEVBQUEyRSxFQUFBOEYsRUFBQWprQixHQUF3RCxHQUF6QnFwQixFQUFBaG5CLE1BQUFDLEtBQUFKLFdBQXlCeWtCLEVBQUEsQ0FBTyxHQUFBQSxFQUFBLENBQU8sSUFBQTlpQixFQUFBMmlCLEVBQVNHLEdBQUEsRUFBTUgsRUFBQSxVQUFROUMsRUFBQSxPQUFBN2YsT0FBQSxFQUF1QjRpQixPQUFBLEVBQUF5QyxFQUFBcmxCLElBRTVDMG1CLENBQUFscUIsRUFBQW1GLE9BQUEsRUFBQUQsR0FBaUJBLEVBQUEra0IsY0FBQSxLQUFxQixTQUFBRSxFQUFBamxCLEVBQUFDLEdBQXdDLE9BQXZCLE1BQUFBLEdBQUFrZSxFQUFBLE1BQXVCLE1BQUFuZSxFQUFBQyxFQUFvQkMsTUFBQUMsUUFBQUgsR0FBcUJFLE1BQUFDLFFBQUFGLElBQUFELEVBQUFpRCxLQUFBbkcsTUFBQWtELEVBQUFDLEdBQUFELElBQStDQSxFQUFBaUQsS0FBQWhELEdBQVVELEdBQVNFLE1BQUFDLFFBQUFGLEdBQUEsQ0FBQUQsR0FBQWQsT0FBQWUsR0FBQSxDQUFBRCxFQUFBQyxHQUMxWSxTQUFBaWxCLEVBQUFsbEIsRUFBQUMsRUFBQXBGLEdBQW1CcUYsTUFBQUMsUUFBQUgsS0FBQXVELFFBQUF0RCxFQUFBcEYsR0FBQW1GLEdBQUFDLEVBQUF0RixLQUFBRSxFQUFBbUYsR0FBK0MsSUFBQW1sQixFQUFBLEtBQVksU0FBQUMsRUFBQXBsQixHQUFlLEdBQUFBLEVBQUEsQ0FBTSxJQUFBQyxFQUFBRCxFQUFBcWxCLG1CQUFBeHFCLEVBQUFtRixFQUFBc2xCLG1CQUFrRCxHQUFBcGxCLE1BQUFDLFFBQUFGLEdBQUEsUUFBQW5GLEVBQUEsRUFBZ0NBLEVBQUFtRixFQUFBckQsU0FBQW9ELEVBQUF1bEIsdUJBQXNDenFCLElBQUFncUIsRUFBQTlrQixFQUFBQyxFQUFBbkYsR0FBQUQsRUFBQUMsU0FBb0JtRixHQUFBNmtCLEVBQUE5a0IsRUFBQUMsRUFBQXBGLEdBQWtCbUYsRUFBQXFsQixtQkFBQSxLQUEwQnJsQixFQUFBc2xCLG1CQUFBLEtBQTBCdGxCLEVBQUF3bEIsZ0JBQUF4bEIsRUFBQXZDLFlBQUFtUSxRQUFBNU4sSUFDclQsSUFBQXlsQixFQUFBLENBQVFDLHVCQUFBLFNBQUExbEIsR0FBbUMrakIsR0FBQTVGLEVBQUEsT0FBbUI0RixFQUFBN2pCLE1BQUE5RCxVQUFBZ0YsTUFBQXpHLEtBQUFxRixHQUFpQ2lrQixLQUFLMEIseUJBQUEsU0FBQTNsQixHQUFzQyxJQUFBbkYsRUFBQW9GLEdBQUEsRUFBVyxJQUFBcEYsS0FBQW1GLEVBQUEsR0FBQUEsRUFBQTNELGVBQUF4QixHQUFBLENBQW1DLElBQUFDLEVBQUFrRixFQUFBbkYsR0FBV21wQixFQUFBM25CLGVBQUF4QixJQUFBbXBCLEVBQUFucEIsS0FBQUMsSUFBQWtwQixFQUFBbnBCLElBQUFzakIsRUFBQSxNQUFBdGpCLEdBQUFtcEIsRUFBQW5wQixHQUFBQyxFQUFBbUYsR0FBQSxHQUF3RUEsR0FBQWdrQixNQUMzUSxTQUFBMkIsRUFBQTVsQixFQUFBQyxHQUFpQixJQUFBcEYsRUFBQW1GLEVBQUE2bEIsVUFBa0IsSUFBQWhyQixFQUFBLFlBQWtCLElBQUFDLEVBQUE4cEIsRUFBQS9wQixHQUFZLElBQUFDLEVBQUEsWUFBa0JELEVBQUFDLEVBQUFtRixHQUFPRCxFQUFBLE9BQUFDLEdBQVksZ05BQUFuRixLQUFBZ3JCLFlBQUFockIsSUFBQSxZQUFBa0YsSUFBQXVTLE9BQUEsVUFBQXZTLEdBQUEsV0FBQUEsR0FBQSxhQUFBQSxJQUFrVEEsR0FBQWxGLEVBQUssTUFBQWtGLEVBQVEsUUFBQUEsR0FBQSxFQUFhLE9BQUFBLEVBQUEsTUFBaUJuRixHQUFBLG1CQUFBQSxHQUFBc2pCLEVBQUEsTUFBQWxlLFNBQUFwRixHQUNuY0EsR0FBUyxTQUFBa3JCLEVBQUEvbEIsR0FBb0QsR0FBckMsT0FBQUEsSUFBQW1sQixFQUFBRixFQUFBRSxFQUFBbmxCLElBQXdCQSxFQUFBbWxCLEVBQUtBLEVBQUEsS0FBUW5sQixJQUFBa2xCLEVBQUFsbEIsRUFBQW9sQixHQUFBRCxHQUFBaEgsRUFBQSxNQUFBK0MsR0FBQSxNQUFBbGhCLEVBQUEyakIsRUFBQXpDLEdBQUEsRUFBQXlDLEVBQUEsS0FBQTNqQixFQUFrRSxJQUFBZ21CLEVBQUF2Z0IsS0FBQUMsU0FBQUMsU0FBQSxJQUFBdkUsTUFBQSxHQUFBNmtCLEVBQUEsMkJBQUFELEVBQUFFLEVBQUEsd0JBQUFGLEVBQTBHLFNBQUFHLEVBQUFubUIsR0FBZSxHQUFBQSxFQUFBaW1CLEdBQUEsT0FBQWptQixFQUFBaW1CLEdBQXNCLE1BQUtqbUIsRUFBQWltQixJQUFPLEtBQUFqbUIsRUFBQW9tQixXQUFnQyxZQUFoQ3BtQixJQUFBb21CLFdBQXlELFlBQVJwbUIsSUFBQWltQixJQUFRSSxLQUFBLElBQUFybUIsRUFBQXFtQixJQUFBcm1CLEVBQUEsS0FBbUMsU0FBQXNtQixFQUFBdG1CLEdBQXVCLFFBQVJBLElBQUFpbUIsS0FBUSxJQUFBam1CLEVBQUFxbUIsS0FBQSxJQUFBcm1CLEVBQUFxbUIsSUFBQSxLQUFBcm1CLEVBQzdZLFNBQUF1bUIsRUFBQXZtQixHQUFlLE9BQUFBLEVBQUFxbUIsS0FBQSxJQUFBcm1CLEVBQUFxbUIsSUFBQSxPQUFBcm1CLEVBQUE2bEIsVUFBMkMxSCxFQUFBLE1BQVEsU0FBQXFJLEVBQUF4bUIsR0FBZSxPQUFBQSxFQUFBa21CLElBQUEsS0FBbUIsU0FBQU8sRUFBQXptQixHQUFlLEdBQUFBLElBQUEwbUIsYUFBYzFtQixHQUFBLElBQUFBLEVBQUFxbUIsS0FBb0IsT0FBQXJtQixHQUFBLEtBQWdCLFNBQUEybUIsRUFBQTNtQixFQUFBQyxFQUFBcEYsSUFBbUJvRixFQUFBMmxCLEVBQUE1bEIsRUFBQW5GLEVBQUErckIsZUFBQXRDLHdCQUFBcmtCLE9BQUFwRixFQUFBd3FCLG1CQUFBSixFQUFBcHFCLEVBQUF3cUIsbUJBQUFwbEIsR0FBQXBGLEVBQUF5cUIsbUJBQUFMLEVBQUFwcUIsRUFBQXlxQixtQkFBQXRsQixJQUN4TCxTQUFBNm1CLEVBQUE3bUIsR0FBZSxHQUFBQSxLQUFBNG1CLGVBQUF0Qyx3QkFBQSxDQUFnRCxRQUFBcmtCLEVBQUFELEVBQUE4bUIsWUFBQWpzQixFQUFBLEdBQTZCb0YsR0FBRXBGLEVBQUFvSSxLQUFBaEQsS0FBQXdtQixFQUFBeG1CLEdBQW1CLElBQUFBLEVBQUFwRixFQUFBK0IsT0FBZSxFQUFBcUQsS0FBTTBtQixFQUFBOXJCLEVBQUFvRixHQUFBLFdBQUFELEdBQXVCLElBQUFDLEVBQUEsRUFBUUEsRUFBQXBGLEVBQUErQixPQUFXcUQsSUFBQTBtQixFQUFBOXJCLEVBQUFvRixHQUFBLFVBQUFELElBQTBCLFNBQUErbUIsRUFBQS9tQixFQUFBQyxFQUFBcEYsR0FBbUJtRixHQUFBbkYsS0FBQStyQixlQUFBcEMsbUJBQUF2a0IsRUFBQTJsQixFQUFBNWxCLEVBQUFuRixFQUFBK3JCLGVBQUFwQyxxQkFBQTNwQixFQUFBd3FCLG1CQUFBSixFQUFBcHFCLEVBQUF3cUIsbUJBQUFwbEIsR0FBQXBGLEVBQUF5cUIsbUJBQUFMLEVBQUFwcUIsRUFBQXlxQixtQkFBQXRsQixJQUF3TCxTQUFBZ25CLEVBQUFobkIsR0FBZUEsS0FBQTRtQixlQUFBcEMsa0JBQUF1QyxFQUFBL21CLEVBQUE4bUIsWUFBQSxLQUFBOW1CLEdBQ3BhLFNBQUFpbkIsRUFBQWpuQixHQUFla2xCLEVBQUFsbEIsRUFBQTZtQixHQUFTLElBQUFLLElBQUEsb0JBQUF0akIsZ0JBQUFDLFdBQUFELE9BQUFDLFNBQUFDLGVBQXdGLFNBQUFxakIsRUFBQW5uQixFQUFBQyxHQUFpQixJQUFBcEYsRUFBQSxHQUF3RixPQUEvRUEsRUFBQW1GLEVBQUFvbkIsZUFBQW5uQixFQUFBbW5CLGNBQW1DdnNCLEVBQUEsU0FBQW1GLEdBQUEsU0FBQUMsRUFBeUJwRixFQUFBLE1BQUFtRixHQUFBLE1BQUFDLEVBQW1CcEYsRUFBUyxJQUFBd3NCLEVBQUEsQ0FBUUMsYUFBQUgsRUFBQSw0QkFBQUksbUJBQUFKLEVBQUEsa0NBQUFLLGVBQUFMLEVBQUEsOEJBQUFNLGNBQUFOLEVBQUEsK0JBQW1NTyxFQUFBLEdBQU1DLEVBQUEsR0FDL0wsU0FBQUMsRUFBQTVuQixHQUFlLEdBQUEwbkIsRUFBQTFuQixHQUFBLE9BQUEwbkIsRUFBQTFuQixHQUFzQixJQUFBcW5CLEVBQUFybkIsR0FBQSxPQUFBQSxFQUFtQixJQUFBbkYsRUFBQW9GLEVBQUFvbkIsRUFBQXJuQixHQUFjLElBQUFuRixLQUFBb0YsRUFBQSxHQUFBQSxFQUFBNUQsZUFBQXhCLFNBQUE4c0IsRUFBQSxPQUFBRCxFQUFBMW5CLEdBQUFDLEVBQUFwRixHQUE2RCxPQUFBbUYsRUFBdlhrbkIsSUFBQVMsRUFBQTlqQixTQUFBQyxjQUFBLE9BQUErakIsTUFBQSxtQkFBQWprQixnQkFBQXlqQixFQUFBQyxhQUFBUSxpQkFBQVQsRUFBQUUsbUJBQUFPLGlCQUFBVCxFQUFBRyxlQUFBTSxXQUFBLG9CQUFBbGtCLGVBQUF5akIsRUFBQUksY0FBQU0sWUFDQSxJQUFBQyxFQUFBSixFQUFBLGdCQUFBSyxFQUFBTCxFQUFBLHNCQUFBTSxFQUFBTixFQUFBLGtCQUFBTyxHQUFBUCxFQUFBLGlCQUFBUSxHQUFBLHNOQUFBdnBCLE1BQUEsS0FBQXdwQixHQUFBLEtBQUFDLEdBQUEsS0FBQUMsR0FBQSxLQUNBLFNBQUFDLEtBQWMsR0FBQUQsR0FBQSxPQUFBQSxHQUFnQixJQUFBdm9CLEVBQUFsRixFQUFBbUYsRUFBQXFvQixHQUFBenRCLEVBQUFvRixFQUFBckQsT0FBQXFGLEVBQUEsVUFBQW9tQixNQUFBNXNCLE1BQUE0c0IsR0FBQUksWUFBQXhVLEVBQUFoUyxFQUFBckYsT0FBMEUsSUFBQW9ELEVBQUEsRUFBUUEsRUFBQW5GLEdBQUFvRixFQUFBRCxLQUFBaUMsRUFBQWpDLEdBQWlCQSxLQUFLLElBQUE0WSxFQUFBL2QsRUFBQW1GLEVBQVUsSUFBQWxGLEVBQUEsRUFBUUEsR0FBQThkLEdBQUEzWSxFQUFBcEYsRUFBQUMsS0FBQW1ILEVBQUFnUyxFQUFBblosR0FBc0JBLEtBQUssT0FBQXl0QixHQUFBdG1CLEVBQUFiLE1BQUFwQixFQUFBLEVBQUFsRixFQUFBLEVBQUFBLE9BQUEsR0FBb0MsU0FBQTR0QixLQUFjLFNBQVMsU0FBQUMsS0FBYyxTQUM1UCxTQUFBdkssR0FBQXBlLEVBQUFDLEVBQUFwRixFQUFBQyxHQUE2RyxRQUFBbUgsS0FBekZsRixLQUFBNnBCLGVBQUE1bUIsRUFBc0JqRCxLQUFBK3BCLFlBQUE3bUIsRUFBbUJsRCxLQUFBNnJCLFlBQUEvdEIsRUFBbUJtRixFQUFBakQsS0FBQVUsWUFBQW9yQixVQUE2QjdvQixFQUFBM0QsZUFBQTRGLE1BQUFoQyxFQUFBRCxFQUFBaUMsSUFBQWxGLEtBQUFrRixHQUFBaEMsRUFBQXBGLEdBQUEsV0FBQW9ILEVBQUFsRixLQUFBTCxPQUFBNUIsRUFBQWlDLEtBQUFrRixHQUFBcEgsRUFBQW9ILElBQWdPLE9BQTVIbEYsS0FBQStyQixvQkFBQSxNQUFBanVCLEVBQUFrdUIsaUJBQUFsdUIsRUFBQWt1QixrQkFBQSxJQUFBbHVCLEVBQUFtdUIsYUFBQU4sR0FBQUMsR0FBK0Y1ckIsS0FBQXdvQixxQkFBQW9ELEdBQTZCNXJCLEtBRzlFLFNBQUFrc0IsR0FBQWpwQixFQUFBQyxFQUFBcEYsRUFBQUMsR0FBcUIsR0FBQWlDLEtBQUFtc0IsVUFBQXRzQixPQUFBLENBQTBCLElBQUFxRixFQUFBbEYsS0FBQW1zQixVQUFBM3FCLE1BQWdELE9BQXJCeEIsS0FBQXBDLEtBQUFzSCxFQUFBakMsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQXFCbUgsRUFBUyxXQUFBbEYsS0FBQWlELEVBQUFDLEVBQUFwRixFQUFBQyxHQUF5QixTQUFBcXVCLEdBQUFucEIsR0FBZUEsYUFBQWpELE1BQUFvaEIsRUFBQSxPQUFrQ25lLEVBQUFvcEIsYUFBZSxHQUFBcnNCLEtBQUFtc0IsVUFBQXRzQixRQUFBRyxLQUFBbXNCLFVBQUFqbUIsS0FBQWpELEdBQ2hjLFNBQUFxcEIsR0FBQXJwQixHQUFlQSxFQUFBa3BCLFVBQUEsR0FBZWxwQixFQUFBc3BCLFVBQUFMLEdBQWVqcEIsRUFBQTROLFFBQUF1YixHQUg3Q2x0QixFQUFBbWlCLEdBQUFoaUIsVUFBQSxDQUFlbXRCLGVBQUEsV0FBMEJ4c0IsS0FBQWdzQixrQkFBQSxFQUF5QixJQUFBL29CLEVBQUFqRCxLQUFBNnJCLFlBQXVCNW9CLE1BQUF1cEIsZUFBQXZwQixFQUFBdXBCLGlCQUFBLGtCQUFBdnBCLEVBQUFncEIsY0FBQWhwQixFQUFBZ3BCLGFBQUEsR0FBQWpzQixLQUFBK3JCLG1CQUFBSixLQUF5SGMsZ0JBQUEsV0FBNEIsSUFBQXhwQixFQUFBakQsS0FBQTZyQixZQUF1QjVvQixNQUFBd3BCLGdCQUFBeHBCLEVBQUF3cEIsa0JBQUEsa0JBQUF4cEIsRUFBQXlwQixlQUFBenBCLEVBQUF5cEIsY0FBQSxHQUFBMXNCLEtBQUF3b0IscUJBQUFtRCxLQUErSGdCLFFBQUEsV0FBb0Izc0IsS0FBQXlvQixhQUFBa0QsSUFBcUJsRCxhQUFBbUQsR0FBQVMsV0FBQSxXQUF1QyxJQUNwZG5wQixFQURvZEQsRUFBQWpELEtBQUFVLFlBQUFvckIsVUFDbGQsSUFBQTVvQixLQUFBRCxFQUFBakQsS0FBQWtELEdBQUEsS0FBd0JsRCxLQUFBNnJCLFlBQUE3ckIsS0FBQStwQixZQUFBL3BCLEtBQUE2cEIsZUFBQSxLQUEyRDdwQixLQUFBd29CLHFCQUFBeG9CLEtBQUErckIsbUJBQUFILEdBQXFENXJCLEtBQUF1b0IsbUJBQUF2b0IsS0FBQXNvQixtQkFBQSxRQUF3RGpILEdBQUF5SyxVQUFBLENBQWF0VyxLQUFBLEtBQUE3VixPQUFBLEtBQUFxb0IsY0FBQSxXQUErQyxhQUFZNEUsV0FBQSxLQUFBQyxRQUFBLEtBQUFDLFdBQUEsS0FBQUMsVUFBQSxTQUFBOXBCLEdBQW9FLE9BQUFBLEVBQUE4cEIsV0FBQUMsS0FBQUMsT0FBK0JqQixpQkFBQSxLQUFBa0IsVUFBQSxNQUM3VzdMLEdBQUE4TCxPQUFBLFNBQUFscUIsR0FBcUIsU0FBQUMsS0FBYyxTQUFBcEYsSUFBYSxPQUFBQyxFQUFBZ0MsTUFBQUMsS0FBQUosV0FBK0IsSUFBQTdCLEVBQUFpQyxLQUFXa0QsRUFBQTdELFVBQUF0QixFQUFBc0IsVUFBd0IsSUFBQTZGLEVBQUEsSUFBQWhDLEVBQTZILE9BQWpIaEUsRUFBQWdHLEVBQUFwSCxFQUFBdUIsV0FBaUJ2QixFQUFBdUIsVUFBQTZGLEVBQWNwSCxFQUFBdUIsVUFBQXFCLFlBQUE1QyxFQUEwQkEsRUFBQWd1QixVQUFBNXNCLEVBQUEsR0FBZ0JuQixFQUFBK3RCLFVBQUE3b0IsR0FBZ0JuRixFQUFBcXZCLE9BQUFwdkIsRUFBQW92QixPQUFrQmIsR0FBQXh1QixHQUFNQSxHQUFVd3VCLEdBQUFqTCxJQUMvTCxJQUFBK0wsR0FBQS9MLEdBQUE4TCxPQUFBLENBQWlCdlAsS0FBQSxPQUFVeVAsR0FBQWhNLEdBQUE4TCxPQUFBLENBQWV2UCxLQUFBLE9BQVUwUCxHQUFBLGFBQUFDLEdBQUFwRCxHQUFBLHFCQUFBdGpCLE9BQUEybUIsR0FBQSxLQUE2RHJELEdBQUEsaUJBQUFyakIsV0FBQTBtQixHQUFBMW1CLFNBQUEybUIsY0FDM0ssSUFBQUMsR0FBQXZELEdBQUEsY0FBQXRqQixTQUFBMm1CLEdBQUFHLEdBQUF4RCxLQUFBb0QsSUFBQUMsSUFBQSxFQUFBQSxJQUFBLElBQUFBLElBQUFJLEdBQUFqVSxPQUFBMEYsYUFBQSxJQUFBd08sR0FBQSxDQUFtR0MsWUFBQSxDQUFhdkcsd0JBQUEsQ0FBeUJ3RyxRQUFBLGdCQUFBQyxTQUFBLHdCQUF3RHBHLGFBQUEsbURBQWdFcUcsZUFBQSxDQUFpQjFHLHdCQUFBLENBQXlCd0csUUFBQSxtQkFBQUMsU0FBQSwyQkFBOERwRyxhQUFBLHVEQUFBOWxCLE1BQUEsTUFBZ0Zvc0IsaUJBQUEsQ0FBbUIzRyx3QkFBQSxDQUF5QndHLFFBQUEscUJBQ3JlQyxTQUFBLDZCQUFxQ3BHLGFBQUEseURBQUE5bEIsTUFBQSxNQUFrRnFzQixrQkFBQSxDQUFvQjVHLHdCQUFBLENBQXlCd0csUUFBQSxzQkFBQUMsU0FBQSw4QkFBb0VwRyxhQUFBLDBEQUFBOWxCLE1BQUEsT0FBb0Zzc0IsSUFBQSxFQUM1VCxTQUFBQyxHQUFBcHJCLEVBQUFDLEdBQWlCLE9BQUFELEdBQVUsdUJBQUFxcUIsR0FBQWh0QixRQUFBNEMsRUFBQW9yQixTQUE4QywyQkFBQXByQixFQUFBb3JCLFFBQXNDLG1EQUFzRCxrQkFBa0IsU0FBQUMsR0FBQXRyQixHQUEwQix1QkFBWEEsSUFBQXVyQixTQUFXLFNBQUF2ckIsSUFBQTJhLEtBQUEsS0FBa0QsSUFBQTZRLElBQUEsRUFFblEsSUFBQUMsR0FBQSxDQUFRckgsV0FBQXdHLEdBQUF6RyxjQUFBLFNBQUFua0IsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQThDLElBQUFtSCxPQUFBLEVBQWFnUyxPQUFBLEVBQWEsR0FBQXFXLEdBQUFycUIsRUFBQSxDQUFTLE9BQUFELEdBQVUsdUJBQUFpQyxFQUFBMm9CLEdBQUFLLGlCQUE4QyxNQUFBaHJCLEVBQVEscUJBQUFnQyxFQUFBMm9CLEdBQUFJLGVBQTBDLE1BQUEvcUIsRUFBUSx3QkFBQWdDLEVBQUEyb0IsR0FBQU0sa0JBQWdELE1BQUFqckIsRUFBUWdDLE9BQUEsT0FBU3VwQixHQUFBSixHQUFBcHJCLEVBQUFuRixLQUFBb0gsRUFBQTJvQixHQUFBSSxnQkFBQSxZQUFBaHJCLEdBQUEsTUFBQW5GLEVBQUF3d0IsVUFBQXBwQixFQUFBMm9CLEdBQUFLLGtCQUMvRixPQUQ4TGhwQixHQUFBeW9CLElBQUEsT0FBQTd2QixFQUFBNndCLFNBQUFGLElBQUF2cEIsSUFBQTJvQixHQUFBSyxpQkFBQWhwQixJQUFBMm9CLEdBQUFJLGdCQUFBUSxLQUFBdlgsRUFBQXVVLE9BQUFGLEdBQUEsVUFBQUQsR0FBQXZ0QixHQUFBdXRCLEdBQUE1c0IsTUFBQTRzQixHQUFBSSxZQUFBK0MsSUFDM1csSUFBQXZwQixFQUFBa29CLEdBQUFiLFVBQUFybkIsRUFBQWhDLEVBQUFwRixFQUFBQyxHQUFBbVosRUFBQWhTLEVBQUEwWSxLQUFBMUcsRUFBQSxRQUFBQSxFQUFBcVgsR0FBQXp3QixNQUFBb0gsRUFBQTBZLEtBQUExRyxHQUFBZ1QsRUFBQWhsQixHQUFBZ1MsRUFBQWhTLEdBQUFnUyxFQUFBLE1BQXlGalUsRUFBQXlxQixHQUhvTCxTQUFBenFCLEVBQUFDLEdBQWlCLE9BQUFELEdBQVUsNEJBQUFzckIsR0FBQXJyQixHQUFtQywyQkFBQUEsRUFBQTByQixNQUFBLE1BQTRDUixJQUFBLEVBQU1SLElBQVUsdUJBQUEzcUIsRUFBQUMsRUFBQTBhLFFBQUFnUSxJQUFBUSxHQUFBLEtBQUFuckIsRUFBbUQscUJBR2pXNHJCLENBQUE1ckIsRUFBQW5GLEdBRnpGLFNBQUFtRixFQUFBQyxHQUFpQixHQUFBdXJCLEdBQUEseUJBQUF4ckIsSUFBQXNxQixJQUFBYyxHQUFBcHJCLEVBQUFDLElBQUFELEVBQUF3b0IsS0FBQUQsR0FBQUQsR0FBQUQsR0FBQSxLQUFBbUQsSUFBQSxFQUFBeHJCLEdBQUEsS0FBbUYsT0FBQUEsR0FBVSx3QkFBeUIsb0JBQUFDLEVBQUE0ckIsU0FBQTVyQixFQUFBNnJCLFFBQUE3ckIsRUFBQThyQixVQUFBOXJCLEVBQUE0ckIsU0FBQTVyQixFQUFBNnJCLE9BQUEsQ0FBMkUsR0FBQTdyQixFQUFBK3JCLE1BQUEsRUFBQS9yQixFQUFBK3JCLEtBQUFwdkIsT0FBQSxPQUFBcUQsRUFBQStyQixLQUF5QyxHQUFBL3JCLEVBQUEwckIsTUFBQSxPQUFBalYsT0FBQTBGLGFBQUFuYyxFQUFBMHJCLE9BQStDLFlBQVksNEJBQUFqQixJQUFBLE9BQUF6cUIsRUFBQXlyQixPQUFBLEtBQUF6ckIsRUFBQTBhLEtBQTZELHFCQUUxUnNSLENBQUFqc0IsRUFBQW5GLE1BQUFvRixFQUFBbXFCLEdBQUFkLFVBQUFzQixHQUFBQyxZQUFBNXFCLEVBQUFwRixFQUFBQyxJQUFBNmYsS0FBQTNhLEVBQUFpbkIsRUFBQWhuQixNQUFBLEtBQW9GLE9BQUFnVSxFQUFBaFUsRUFBQSxPQUFBQSxFQUFBZ1UsRUFBQSxDQUFBQSxFQUFBaFUsS0FBb0Npc0IsR0FBQSxLQUFBQyxHQUFBLEtBQUFDLEdBQUEsS0FBeUIsU0FBQUMsR0FBQXJzQixHQUFlLEdBQUFBLEVBQUF1RSxFQUFBdkUsR0FBQSxDQUFZLG1CQUFBa3NCLElBQUEvTixFQUFBLE9BQXVDLElBQUFsZSxFQUFBMmtCLEVBQUE1a0IsRUFBQTZsQixXQUFzQnFHLEdBQUFsc0IsRUFBQTZsQixVQUFBN2xCLEVBQUF1UyxLQUFBdFMsSUFBMEIsU0FBQXFzQixHQUFBdHNCLEdBQWVtc0IsR0FBQUMsTUFBQW5wQixLQUFBakQsR0FBQW9zQixHQUFBLENBQUFwc0IsR0FBQW1zQixHQUFBbnNCLEVBQTZCLFNBQUF1c0IsS0FBYyxHQUFBSixHQUFBLENBQU8sSUFBQW5zQixFQUFBbXNCLEdBQUFsc0IsRUFBQW1zQixHQUErQixHQUFqQkEsR0FBQUQsR0FBQSxLQUFXRSxHQUFBcnNCLEdBQU1DLEVBQUEsSUFBQUQsRUFBQSxFQUFhQSxFQUFBQyxFQUFBckQsT0FBV29ELElBQUFxc0IsR0FBQXBzQixFQUFBRCxLQUNwZCxTQUFBd3NCLEdBQUF4c0IsRUFBQUMsR0FBaUIsT0FBQUQsRUFBQUMsR0FBWSxTQUFBd3NCLEdBQUF6c0IsRUFBQUMsRUFBQXBGLEdBQW1CLE9BQUFtRixFQUFBQyxFQUFBcEYsR0FBYyxTQUFBNnhCLE1BQWUsSUFBQUMsSUFBQSxFQUFVLFNBQUFDLEdBQUE1c0IsRUFBQUMsR0FBaUIsR0FBQTBzQixHQUFBLE9BQUEzc0IsRUFBQUMsR0FBa0Iwc0IsSUFBQSxFQUFNLElBQUksT0FBQUgsR0FBQXhzQixFQUFBQyxHQUFlLFFBQVEwc0IsSUFBQSxVQUFBUixJQUFBLE9BQUFDLE1BQUFNLEtBQUFILE9BQXlDLElBQUFNLEdBQUEsQ0FBUUMsT0FBQSxFQUFBQyxNQUFBLEVBQUFDLFVBQUEsRUFBQUMsa0JBQUEsRUFBQUMsT0FBQSxFQUFBQyxPQUFBLEVBQUFDLFFBQUEsRUFBQUMsVUFBQSxFQUFBQyxPQUFBLEVBQUEvckIsUUFBQSxFQUFBZ3NCLEtBQUEsRUFBQUMsTUFBQSxFQUFBQyxNQUFBLEVBQUFsaEIsS0FBQSxFQUFBbWhCLE1BQUEsR0FBbUosU0FBQUMsR0FBQTN0QixHQUFlLElBQUFDLEVBQUFELEtBQUE0dEIsVUFBQTV0QixFQUFBNHRCLFNBQUF4RyxjQUE4QyxnQkFBQW5uQixJQUFBNHNCLEdBQUE3c0IsRUFBQXVTLE1BQUEsYUFBQXRTLEVBQzVaLFNBQUE0dEIsR0FBQTd0QixHQUF5RyxPQUExRkEsSUFBQXRELFFBQUFzRCxFQUFBOHRCLFlBQUFscUIsUUFBaUNtcUIsMEJBQUEvdEIsSUFBQSt0Qix5QkFBeUQsSUFBQS90QixFQUFBZ3VCLFNBQUFodUIsRUFBQW9tQixXQUFBcG1CLEVBQXFDLFNBQUFpdUIsR0FBQWp1QixHQUFlLElBQUFrbkIsRUFBQSxTQUF5QixJQUFBam5CLEdBQVRELEVBQUEsS0FBQUEsS0FBUzZELFNBQWdILE9BQTVGNUQsT0FBQTRELFNBQUFDLGNBQUEsUUFBQW9xQixhQUFBbHVCLEVBQUEsV0FBNkRDLEVBQUEsbUJBQUFBLEVBQUFELElBQStCQyxFQUFTLFNBQUFrdUIsR0FBQW51QixHQUFlLElBQUFDLEVBQUFELEVBQUF1UyxLQUFhLE9BQUF2UyxJQUFBNHRCLFdBQUEsVUFBQTV0QixFQUFBb25CLGdCQUFBLGFBQUFubkIsR0FBQSxVQUFBQSxHQUV2VCxTQUFBbXVCLEdBQUFwdUIsR0FBZUEsRUFBQXF1QixnQkFBQXJ1QixFQUFBcXVCLGNBRG5DLFNBQUFydUIsR0FBZSxJQUFBQyxFQUFBa3VCLEdBQUFudUIsR0FBQSxrQkFBQW5GLEVBQUFLLE9BQUFtWSx5QkFBQXJULEVBQUF2QyxZQUFBckIsVUFBQTZELEdBQUFuRixFQUFBLEdBQUFrRixFQUFBQyxHQUFxRyxJQUFBRCxFQUFBM0QsZUFBQTRELFNBQUEsSUFBQXBGLEdBQUEsbUJBQUFBLEVBQUFRLEtBQUEsbUJBQUFSLEVBQUF5ekIsSUFBQSxDQUF1RyxJQUFBcnNCLEVBQUFwSCxFQUFBUSxJQUFBNFksRUFBQXBaLEVBQUF5ekIsSUFBaU0sT0FBN0twekIsT0FBQUMsZUFBQTZFLEVBQUFDLEVBQUEsQ0FBMkIwWCxjQUFBLEVBQUF0YyxJQUFBLFdBQStCLE9BQUE0RyxFQUFBdEgsS0FBQW9DLE9BQW9CdXhCLElBQUEsU0FBQXR1QixHQUFpQmxGLEVBQUEsR0FBQWtGLEVBQU9pVSxFQUFBdFosS0FBQW9DLEtBQUFpRCxNQUFrQjlFLE9BQUFDLGVBQUE2RSxFQUFBQyxFQUFBLENBQTJCN0UsV0FBQVAsRUFBQU8sYUFBMEIsQ0FBT216QixTQUFBLFdBQW9CLE9BQUF6ekIsR0FBUzB6QixTQUFBLFNBQUF4dUIsR0FBc0JsRixFQUFBLEdBQUFrRixHQUFPeXVCLGFBQUEsV0FBeUJ6dUIsRUFBQXF1QixjQUN0ZixZQUFLcnVCLEVBQUFDLE1BQThCeXVCLENBQUExdUIsSUFBeUMsU0FBQTJ1QixHQUFBM3VCLEdBQWUsSUFBQUEsRUFBQSxTQUFlLElBQUFDLEVBQUFELEVBQUFxdUIsY0FBc0IsSUFBQXB1QixFQUFBLFNBQWUsSUFBQXBGLEVBQUFvRixFQUFBc3VCLFdBQW1CenpCLEVBQUEsR0FBMkQsT0FBbERrRixJQUFBbEYsRUFBQXF6QixHQUFBbnVCLEtBQUE0dUIsUUFBQSxlQUFBNXVCLEVBQUF2RSxRQUE4Q3VFLEVBQUFsRixLQUFJRCxJQUFBb0YsRUFBQXV1QixTQUFBeHVCLElBQUEsR0FBbUMsSUFBQTZ1QixHQUFBdlEsRUFBQWdGLG1EQUE2RHVMLEdBQUF4eUIsZUFBQSw0QkFBQXd5QixHQUFBdEwsdUJBQUEsQ0FBeUU1RCxRQUFBLE9BQ3RZLElBQUFtUCxHQUFBLGNBQUF6USxHQUFBLG1CQUFBOWlCLGVBQUF1aUIsSUFBQWlSLEdBQUExUSxHQUFBOWlCLE9BQUF1aUIsSUFBQSx1QkFBQWtSLEdBQUEzUSxHQUFBOWlCLE9BQUF1aUIsSUFBQSxzQkFBQW1SLEdBQUE1USxHQUFBOWlCLE9BQUF1aUIsSUFBQSx3QkFBQW9SLEdBQUE3USxHQUFBOWlCLE9BQUF1aUIsSUFBQSwyQkFBQXFSLEdBQUE5USxHQUFBOWlCLE9BQUF1aUIsSUFBQSx3QkFBQXNSLEdBQUEvUSxHQUFBOWlCLE9BQUF1aUIsSUFBQSx3QkFBQXVSLEdBQUFoUixHQUFBOWlCLE9BQUF1aUIsSUFBQSx1QkFBQXdSLEdBQUFqUixHQUFBOWlCLE9BQUF1aUIsSUFBQSwrQkFBQXlSLEdBQUFsUixHQUFBOWlCLE9BQUF1aUIsSUFBQSwyQkFBQTBSLEdBQUFuUixHQUFBOWlCLE9BQUF1aUIsSUFBQSx3QkFBQTJSLEdBQUFwUixHQUFBOWlCLE9BQUF1aUIsSUFBQSxjQUNBLE1BQUE0UixHQUFBclIsR0FBQTlpQixPQUFBdWlCLElBQUEsb0JBQUE2UixHQUFBLG1CQUFBcDBCLGVBQUFxRSxTQUF5RixTQUFBZ3dCLEdBQUE1dkIsR0FBZSxjQUFBQSxHQUFBLGlCQUFBQSxFQUFBLEtBQTBFLG1CQUE3QkEsRUFBQTJ2QixJQUFBM3ZCLEVBQUEydkIsS0FBQTN2QixFQUFBLGVBQTZCQSxFQUFBLEtBQ2xMLFNBQUE2dkIsR0FBQTd2QixHQUFlLFNBQUFBLEVBQUEsWUFBdUIsc0JBQUFBLEVBQUEsT0FBQUEsRUFBQThMLGFBQUE5TCxFQUFBakYsTUFBQSxLQUE0RCxvQkFBQWlGLEVBQUEsT0FBQUEsRUFBZ0MsT0FBQUEsR0FBVSxLQUFBc3ZCLEdBQUEsdUJBQStCLEtBQUFMLEdBQUEsaUJBQXlCLEtBQUFELEdBQUEsZUFBdUIsS0FBQUcsR0FBQSxpQkFBeUIsS0FBQUQsR0FBQSxtQkFBMkIsS0FBQU0sR0FBQSxpQkFBeUIsb0JBQUF4dkIsRUFBQSxPQUFBQSxFQUFBNlMsVUFBMEMsS0FBQXdjLEdBQUEseUJBQWlDLEtBQUFELEdBQUEseUJBQWlDLEtBQUFHLEdBQUEsSUFBQXR2QixFQUFBRCxFQUFBNk0sT0FBbUQsT0FBNUI1TSxJQUFBNkwsYUFBQTdMLEVBQUFsRixNQUFBLEdBQTRCaUYsRUFBQThMLGNBQUEsS0FBQTdMLEVBQUEsY0FBQUEsRUFDdmMsa0JBQWtCLEtBQUF3dkIsR0FBQSxPQUFBSSxHQUFBN3ZCLEVBQUF1UyxNQUEwQixLQUFBbWQsR0FBQSxHQUFBMXZCLEVBQUEsSUFBQUEsRUFBQW1pQixRQUFBbmlCLEVBQUFvaUIsUUFBQSxZQUFBeU4sR0FBQTd2QixHQUF1RCxZQUFZLFNBQUE4dkIsR0FBQTl2QixHQUFlLElBQUFDLEVBQUEsR0FBUyxHQUFHRCxFQUFBLE9BQUFBLEVBQUFxbUIsS0FBZ0IsK0NBQUF4ckIsRUFBQSxHQUFvRCxNQUFBbUYsRUFBUSxZQUFBbEYsRUFBQWtGLEVBQUErdkIsWUFBQTl0QixFQUFBakMsRUFBQWd3QixhQUFBL2IsRUFBQTRiLEdBQUE3dkIsRUFBQXVTLE1BQTBEMVgsRUFBQSxLQUFPQyxJQUFBRCxFQUFBZzFCLEdBQUEvMEIsRUFBQXlYLE9BQWtCelgsRUFBQW1aLEVBQUlBLEVBQUEsR0FBS2hTLEVBQUFnUyxFQUFBLFFBQUFoUyxFQUFBZ3VCLFNBQUF4b0IsUUFBQXFuQixHQUFBLFFBQUE3c0IsRUFBQWl1QixXQUFBLElBQUFyMUIsSUFBQW9aLEVBQUEsZ0JBQUFwWixFQUFBLEtBQXdGQSxFQUFBLGFBQUFDLEdBQUEsV0FBQW1aLEVBQStCaFUsR0FBQXBGLEVBQUttRixJQUFBMG1CLGFBQVcxbUIsR0FBUyxPQUFBQyxFQUNsYyxJQUFBa3dCLEdBQUEsOFZBQUFDLEdBQUFsMUIsT0FBQWtCLFVBQUFDLGVBQUFnMEIsR0FBQSxHQUE2WUMsR0FBQSxHQUVyTCxTQUFBaGYsR0FBQXRSLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsR0FBc0JsRixLQUFBd3pCLGdCQUFBLElBQUF0d0IsR0FBQSxJQUFBQSxHQUFBLElBQUFBLEVBQXlDbEQsS0FBQXl6QixjQUFBMTFCLEVBQXFCaUMsS0FBQTB6QixtQkFBQXh1QixFQUEwQmxGLEtBQUEyekIsZ0JBQUE3MUIsRUFBdUJrQyxLQUFBNHpCLGFBQUEzd0IsRUFBb0JqRCxLQUFBd1YsS0FBQXRTLEVBQVksSUFBQStlLEdBQUEsR0FDN1gsdUlBQUFuZ0IsTUFBQSxLQUFBMEUsUUFBQSxTQUFBdkQsR0FBc0tnZixHQUFBaGYsR0FBQSxJQUFBc1IsR0FBQXRSLEVBQUEsS0FBQUEsRUFBQSxRQUE0Qix3R0FBQXVELFFBQUEsU0FBQXZELEdBQTRILElBQUFDLEVBQUFELEVBQUEsR0FBV2dmLEdBQUEvZSxHQUFBLElBQUFxUixHQUFBclIsRUFBQSxLQUFBRCxFQUFBLFdBQStCLHFEQUFBdUQsUUFBQSxTQUFBdkQsR0FBeUVnZixHQUFBaGYsR0FBQSxJQUFBc1IsR0FBQXRSLEVBQUEsS0FBQUEsRUFBQW9uQixjQUFBLFFBQ2piLHdFQUFBN2pCLFFBQUEsU0FBQXZELEdBQTRGZ2YsR0FBQWhmLEdBQUEsSUFBQXNSLEdBQUF0UixFQUFBLEtBQUFBLEVBQUEsUUFBNEIsZ01BQUFuQixNQUFBLEtBQUEwRSxRQUFBLFNBQUF2RCxHQUErTmdmLEdBQUFoZixHQUFBLElBQUFzUixHQUFBdFIsRUFBQSxLQUFBQSxFQUFBb25CLGNBQUEsUUFBMEMsMENBQUE3akIsUUFBQSxTQUFBdkQsR0FBOERnZixHQUFBaGYsR0FBQSxJQUFBc1IsR0FBQXRSLEVBQUEsS0FBQUEsRUFBQSxRQUMvYix1QkFBQXVELFFBQUEsU0FBQXZELEdBQTJDZ2YsR0FBQWhmLEdBQUEsSUFBQXNSLEdBQUF0UixFQUFBLEtBQUFBLEVBQUEsUUFBNEIsOEJBQUF1RCxRQUFBLFNBQUF2RCxHQUFrRGdmLEdBQUFoZixHQUFBLElBQUFzUixHQUFBdFIsRUFBQSxLQUFBQSxFQUFBLFFBQTRCLG9CQUFBdUQsUUFBQSxTQUFBdkQsR0FBd0NnZixHQUFBaGYsR0FBQSxJQUFBc1IsR0FBQXRSLEVBQUEsS0FBQUEsRUFBQW9uQixjQUFBLFFBQTBDLElBQUF3SixHQUFBLGdCQUF1QixTQUFBQyxHQUFBN3dCLEdBQWUsT0FBQUEsRUFBQSxHQUFBd2EsY0FHN1EsU0FBQXNXLEdBQUE5d0IsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQXFCLElBQUFtSCxFQUFBK2MsR0FBQTNpQixlQUFBNEQsR0FBQStlLEdBQUEvZSxHQUFBLE1BQW9DLE9BQUFnQyxFQUFBLElBQUFBLEVBQUFzUSxNQUFBelgsSUFBQSxFQUFBbUYsRUFBQXJELFNBQUEsTUFBQXFELEVBQUEsVUFBQUEsRUFBQSxZQUFBQSxFQUFBLFVBQUFBLEVBQUEsUUFOekQsU0FBQUQsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQXFCLFNBQUFtRixHQUQ4RixTQUFBRCxFQUFBQyxFQUFBcEYsRUFBQUMsR0FBcUIsVUFBQUQsR0FBQSxJQUFBQSxFQUFBMFgsS0FBQSxTQUFpQyxjQUFBdFMsR0FBaUIscUNBQXVDLHFCQUFBbkYsSUFBNkIsT0FBQUQsS0FBQTAxQixnQkFBa0UsV0FBN0J2d0IsSUFBQW9uQixjQUFBaG1CLE1BQUEsT0FBNkIsVUFBQXBCLEdBQStCLGtCQUMxVSt3QixDQUFBL3dCLEVBQUFDLEVBQUFwRixFQUFBQyxHQUFBLFNBQTBELEdBQUFBLEVBQUEsU0FBYyxVQUFBRCxFQUFBLE9BQUFBLEVBQUEwWCxNQUEyQixjQUFBdFMsRUFBZ0Isa0JBQUFBLEVBQW9CLGNBQUErd0IsTUFBQS93QixHQUF1QixjQUFBK3dCLE1BQUEvd0IsSUFBQSxFQUFBQSxFQUE0QixTQU1uRGd4QixDQUFBaHhCLEVBQUFwRixFQUFBb0gsRUFBQW5ILEtBQUFELEVBQUEsTUFBQUMsR0FBQSxPQUFBbUgsRUFQNUosU0FBQWpDLEdBQWUsUUFBQW93QixHQUFBejFCLEtBQUEyMUIsR0FBQXR3QixLQUEwQm93QixHQUFBejFCLEtBQUEwMUIsR0FBQXJ3QixLQUEwQm13QixHQUFBbHZCLEtBQUFqQixHQUFBc3dCLEdBQUF0d0IsSUFBQSxHQUE4QnF3QixHQUFBcndCLElBQUEsR0FBUyxJQU9rRGt4QixDQUFBanhCLEtBQUEsT0FBQXBGLEVBQUFtRixFQUFBbXhCLGdCQUFBbHhCLEdBQUFELEVBQUFrdUIsYUFBQWp1QixFQUFBLEdBQUFwRixJQUFBb0gsRUFBQXl1QixnQkFBQTF3QixFQUFBaUMsRUFBQTB1QixjQUFBLE9BQUE5MUIsRUFBQSxJQUFBb0gsRUFBQXNRLE1BQUEsR0FBQTFYLEdBQUFvRixFQUFBZ0MsRUFBQXV1QixjQUFBMTFCLEVBQUFtSCxFQUFBd3VCLG1CQUFBLE9BQUE1MUIsRUFBQW1GLEVBQUFteEIsZ0JBQUFseEIsSUFBQXBGLEVBQUEsS0FBQW9ILElBQUFzUSxPQUFBLElBQUF0USxJQUFBLElBQUFwSCxFQUFBLE1BQUFBLEVBQUFDLEVBQUFrRixFQUFBb3hCLGVBQUF0MkIsRUFBQW1GLEVBQUFwRixHQUFBbUYsRUFBQWt1QixhQUFBanVCLEVBQUFwRixNQUM1SixTQUFBdzJCLEdBQUFyeEIsR0FBZSxjQUFBQSxHQUFpQiw0RUFBQUEsRUFBbUYsa0JBQWtCLFNBQUFzeEIsR0FBQXR4QixFQUFBQyxHQUFpQixJQUFBcEYsRUFBQW9GLEVBQUEydUIsUUFBZ0IsT0FBQTN5QixFQUFBLEdBQVdnRSxFQUFBLENBQUlzeEIsb0JBQUEsRUFBQUMsa0JBQUEsRUFBQS8xQixXQUFBLEVBQUFtekIsUUFBQSxNQUFBL3pCLElBQUFtRixFQUFBeXhCLGNBQUFDLGlCQUNyTCxTQUFBQyxHQUFBM3hCLEVBQUFDLEdBQWlCLElBQUFwRixFQUFBLE1BQUFvRixFQUFBdXhCLGFBQUEsR0FBQXZ4QixFQUFBdXhCLGFBQUExMkIsRUFBQSxNQUFBbUYsRUFBQTJ1QixRQUFBM3VCLEVBQUEydUIsUUFBQTN1QixFQUFBc3hCLGVBQTBGMTJCLEVBQUF3MkIsR0FBQSxNQUFBcHhCLEVBQUF4RSxNQUFBd0UsRUFBQXhFLE1BQUFaLEdBQThCbUYsRUFBQXl4QixjQUFBLENBQWlCQyxlQUFBNTJCLEVBQUE4MkIsYUFBQS8yQixFQUFBZzNCLFdBQUEsYUFBQTV4QixFQUFBc1MsTUFBQSxVQUFBdFMsRUFBQXNTLEtBQUEsTUFBQXRTLEVBQUEydUIsUUFBQSxNQUFBM3VCLEVBQUF4RSxPQUFnSCxTQUFBcTJCLEdBQUE5eEIsRUFBQUMsR0FBNkIsT0FBWkEsSUFBQTJ1QixVQUFZa0MsR0FBQTl3QixFQUFBLFVBQUFDLEdBQUEsR0FDdlMsU0FBQTh4QixHQUFBL3hCLEVBQUFDLEdBQWlCNnhCLEdBQUE5eEIsRUFBQUMsR0FBUSxJQUFBcEYsRUFBQXcyQixHQUFBcHhCLEVBQUF4RSxPQUFBWCxFQUFBbUYsRUFBQXNTLEtBQTJCLFNBQUExWCxFQUFBLFdBQUFDLEdBQTRCLElBQUFELEdBQUEsS0FBQW1GLEVBQUF2RSxPQUFBdUUsRUFBQXZFLE9BQUFaLEtBQUFtRixFQUFBdkUsTUFBQSxHQUFBWixHQUFnRG1GLEVBQUF2RSxRQUFBLEdBQUFaLElBQUFtRixFQUFBdkUsTUFBQSxHQUFBWixRQUFvQyxjQUFBQyxHQUFBLFVBQUFBLEVBQThELFlBQTNCa0YsRUFBQW14QixnQkFBQSxTQUFrQ2x4QixFQUFBNUQsZUFBQSxTQUFBMjFCLEdBQUFoeUIsRUFBQUMsRUFBQXNTLEtBQUExWCxHQUFBb0YsRUFBQTVELGVBQUEsaUJBQUEyMUIsR0FBQWh5QixFQUFBQyxFQUFBc1MsS0FBQThlLEdBQUFweEIsRUFBQXV4QixlQUEyRyxNQUFBdnhCLEVBQUEydUIsU0FBQSxNQUFBM3VCLEVBQUFzeEIsaUJBQUF2eEIsRUFBQXV4QixpQkFBQXR4QixFQUFBc3hCLGdCQUNwVixTQUFBVSxHQUFBanlCLEVBQUFDLEVBQUFwRixHQUFtQixHQUFBb0YsRUFBQTVELGVBQUEsVUFBQTRELEVBQUE1RCxlQUFBLGlCQUFnRSxJQUFBdkIsRUFBQW1GLEVBQUFzUyxLQUFhLGdCQUFBelgsR0FBQSxVQUFBQSxRQUFBLElBQUFtRixFQUFBeEUsT0FBQSxPQUFBd0UsRUFBQXhFLE9BQUEsT0FBeUV3RSxFQUFBLEdBQUFELEVBQUF5eEIsY0FBQUcsYUFBa0MvMkIsR0FBQW9GLElBQUFELEVBQUF2RSxRQUFBdUUsRUFBQXZFLE1BQUF3RSxHQUE0QkQsRUFBQXd4QixhQUFBdnhCLEVBQTBCLE1BQVRwRixFQUFBbUYsRUFBQWpGLFFBQVNpRixFQUFBakYsS0FBQSxJQUFvQmlGLEVBQUF1eEIsZ0JBQUF2eEIsRUFBQXV4QixlQUFtQ3Z4QixFQUFBdXhCLGlCQUFBdnhCLEVBQUF5eEIsY0FBQUMsZUFBa0QsS0FBQTcyQixJQUFBbUYsRUFBQWpGLEtBQUFGLEdBQzFXLFNBQUFtM0IsR0FBQWh5QixFQUFBQyxFQUFBcEYsR0FBbUIsV0FBQW9GLEdBQUFELEVBQUFreUIsY0FBQUMsZ0JBQUFueUIsSUFBQSxNQUFBbkYsRUFBQW1GLEVBQUF3eEIsYUFBQSxHQUFBeHhCLEVBQUF5eEIsY0FBQUcsYUFBQTV4QixFQUFBd3hCLGVBQUEsR0FBQTMyQixJQUFBbUYsRUFBQXd4QixhQUFBLEdBQUEzMkIsSUFQbkIsMGpDQUFBZ0UsTUFBQSxLQUFBMEUsUUFBQSxTQUFBdkQsR0FBeWxDLElBQUFDLEVBQUFELEVBQUF5SCxRQUFBbXBCLEdBQ3psQ0MsSUFBSTdSLEdBQUEvZSxHQUFBLElBQUFxUixHQUFBclIsRUFBQSxLQUFBRCxFQUFBLFFBQTRCLHNGQUFBbkIsTUFBQSxLQUFBMEUsUUFBQSxTQUFBdkQsR0FBcUgsSUFBQUMsRUFBQUQsRUFBQXlILFFBQUFtcEIsR0FBQUMsSUFBdUI3UixHQUFBL2UsR0FBQSxJQUFBcVIsR0FBQXJSLEVBQUEsS0FBQUQsRUFBQSxrQ0FBc0Qsb0NBQUF1RCxRQUFBLFNBQUF2RCxHQUF3RCxJQUFBQyxFQUFBRCxFQUFBeUgsUUFBQW1wQixHQUFBQyxJQUF1QjdSLEdBQUEvZSxHQUFBLElBQUFxUixHQUFBclIsRUFBQSxLQUFBRCxFQUFBLDBDQUE4RCwyQkFBQXVELFFBQUEsU0FBQXZELEdBQStDZ2YsR0FBQWhmLEdBQUEsSUFBQXNSLEdBQUF0UixFQUFBLEtBQUFBLEVBQUFvbkIsY0FBQSxRQU1wUCxJQUFBZ0wsR0FBQSxDQUFRQyxPQUFBLENBQVEvTix3QkFBQSxDQUF5QndHLFFBQUEsV0FBQUMsU0FBQSxtQkFBOENwRyxhQUFBLDhEQUFBOWxCLE1BQUEsT0FBeUYsU0FBQXl6QixHQUFBdHlCLEVBQUFDLEVBQUFwRixHQUE4RSxPQUEzRG1GLEVBQUFvZSxHQUFBa0wsVUFBQThJLEdBQUFDLE9BQUFyeUIsRUFBQUMsRUFBQXBGLElBQStCMFgsS0FBQSxTQUFnQitaLEdBQUF6eEIsR0FBTW9zQixFQUFBam5CLEdBQU1BLEVBQVMsSUFBQXV5QixHQUFBLEtBQUFDLEdBQUEsS0FBb0IsU0FBQUMsR0FBQXp5QixHQUFlK2xCLEVBQUEvbEIsR0FDcGQsU0FBQTB5QixHQUFBMXlCLEdBQTJCLEdBQUEydUIsR0FBWnBJLEVBQUF2bUIsSUFBWSxPQUFBQSxFQUFrQixTQUFBMnlCLEdBQUEzeUIsRUFBQUMsR0FBaUIsY0FBQUQsRUFBQSxPQUFBQyxFQUF5QixJQUFBMnlCLElBQUEsRUFBa0YsU0FBQUMsS0FBY04sUUFBQU8sWUFBQSxtQkFBQUMsSUFBQVAsR0FBQUQsR0FBQSxNQUF1RCxTQUFBUSxHQUFBL3lCLEdBQWUsVUFBQUEsRUFBQTJ3QixjQUFBK0IsR0FBQUYsS0FBQTVGLEdBQUE2RixHQUFBenlCLEVBQUFzeUIsR0FBQUUsR0FBQXh5QixFQUFBNnRCLEdBQUE3dEIsS0FBOEQsU0FBQWd6QixHQUFBaHpCLEVBQUFDLEVBQUFwRixHQUFtQixVQUFBbUYsR0FBQTZ5QixLQUFBTCxHQUFBMzNCLEdBQUEwM0IsR0FBQXR5QixHQUFBZ3pCLFlBQUEsbUJBQUFGLEtBQUEsU0FBQS95QixHQUFBNnlCLEtBQW9GLFNBQUFLLEdBQUFsekIsR0FBZSx1QkFBQUEsR0FBQSxVQUFBQSxHQUFBLFlBQUFBLEVBQUEsT0FBQTB5QixHQUFBRixJQUNqYixTQUFBVyxHQUFBbnpCLEVBQUFDLEdBQWlCLGFBQUFELEVBQUEsT0FBQTB5QixHQUFBenlCLEdBQTRCLFNBQUFtekIsR0FBQXB6QixFQUFBQyxHQUFpQixhQUFBRCxHQUFBLFdBQUFBLEVBQUEsT0FBQTB5QixHQUFBenlCLEdBRG1DaW5CLElBQUEwTCxHQUFBM0UsR0FBQSxZQUFBcHFCLFNBQUEybUIsY0FBQSxFQUFBM21CLFNBQUEybUIsZUFFakcsSUFBQTZJLEdBQUEsQ0FBUWpQLFdBQUFnTyxHQUFBa0IsdUJBQUFWLEdBQUF6TyxjQUFBLFNBQUFua0IsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQXdFLElBQUFtSCxFQUFBaEMsRUFBQXNtQixFQUFBdG1CLEdBQUEyRCxPQUFBcVEsT0FBQSxFQUFBMkUsT0FBQSxFQUFBOEYsRUFBQXpjLEVBQUEyckIsVUFBQTNyQixFQUFBMnJCLFNBQUF4RyxjQUFtUCxHQUFySyxXQUFBMUksR0FBQSxVQUFBQSxHQUFBLFNBQUF6YyxFQUFBc1EsS0FBQTBCLEVBQUEwZSxHQUFBaEYsR0FBQTFyQixHQUFBMndCLEdBQUEzZSxFQUFBbWYsSUFBQW5mLEVBQUFpZixHQUFBdGEsRUFBQW9hLEtBQUF0VSxFQUFBemMsRUFBQTJyQixXQUFBLFVBQUFsUCxFQUFBMEksZ0JBQUEsYUFBQW5sQixFQUFBc1EsTUFBQSxVQUFBdFEsRUFBQXNRLFFBQUEwQixFQUFBa2YsSUFBcUtsZixRQUFBalUsRUFBQUMsSUFBQSxPQUFBcXlCLEdBQUFyZSxFQUFBcFosRUFBQUMsR0FBa0M4ZCxLQUFBNVksRUFBQWlDLEVBQUFoQyxHQUFZLFNBQUFELE1BQUFpQyxFQUFBd3ZCLGdCQUFBenhCLEVBQUE2eEIsWUFBQSxXQUFBNXZCLEVBQUFzUSxNQUFBeWYsR0FBQS92QixFQUFBLFNBQUFBLEVBQUF4RyxTQUEwRjgzQixHQUFBblYsR0FBQThMLE9BQUEsQ0FBY3NKLEtBQUEsS0FBQWpJLE9BQUEsT0FBc0JrSSxHQUFBLENBQU1DLElBQUEsU0FDcmZDLFFBQUEsVUFBQUMsS0FBQSxVQUFBQyxNQUFBLFlBQW1ELFNBQUFDLEdBQUE5ekIsR0FBZSxJQUFBQyxFQUFBbEQsS0FBQTZyQixZQUF1QixPQUFBM29CLEVBQUE4ekIsaUJBQUE5ekIsRUFBQTh6QixpQkFBQS96QixRQUFBeXpCLEdBQUF6ekIsT0FBQUMsRUFBQUQsR0FBb0UsU0FBQWcwQixLQUFjLE9BQUFGLEdBQzNLLElBQUFHLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxJQUFBLEVBQUFDLElBQUEsRUFBQUMsR0FBQWQsR0FBQXJKLE9BQUEsQ0FBd0NvSyxRQUFBLEtBQUFDLFFBQUEsS0FBQUMsUUFBQSxLQUFBQyxRQUFBLEtBQUFDLE1BQUEsS0FBQUMsTUFBQSxLQUFBOUksUUFBQSxLQUFBK0ksU0FBQSxLQUFBOUksT0FBQSxLQUFBQyxRQUFBLEtBQUFnSSxpQkFBQUMsR0FBQWEsT0FBQSxLQUFBQyxRQUFBLEtBQUFDLGNBQUEsU0FBQS8wQixHQUFxTSxPQUFBQSxFQUFBKzBCLGdCQUFBLzBCLEVBQUFnMUIsY0FBQWgxQixFQUFBOHRCLFdBQUE5dEIsRUFBQWkxQixVQUFBajFCLEVBQUFnMUIsY0FBaUZFLFVBQUEsU0FBQWwxQixHQUF1QixpQkFBQUEsRUFBQSxPQUFBQSxFQUFBazFCLFVBQXNDLElBQUFqMUIsRUFBQWcwQixHQUFzQixPQUFiQSxHQUFBajBCLEVBQUFzMEIsUUFBYUgsR0FBQSxjQUFBbjBCLEVBQUF1UyxLQUFBdlMsRUFBQXMwQixRQUFBcjBCLEVBQUEsR0FBQWswQixJQUFBLE1BQXVEZ0IsVUFBQSxTQUFBbjFCLEdBQXVCLGlCQUFBQSxFQUFBLE9BQUFBLEVBQUFtMUIsVUFDL2QsSUFBQWwxQixFQUFBaTBCLEdBQXNCLE9BQWJBLEdBQUFsMEIsRUFBQXUwQixRQUFhSCxHQUFBLGNBQUFwMEIsRUFBQXVTLEtBQUF2UyxFQUFBdTBCLFFBQUF0MEIsRUFBQSxHQUFBbTBCLElBQUEsUUFBd0RnQixHQUFBZixHQUFBbkssT0FBQSxDQUFnQm1MLFVBQUEsS0FBQUMsTUFBQSxLQUFBQyxPQUFBLEtBQUFDLFNBQUEsS0FBQUMsbUJBQUEsS0FBQUMsTUFBQSxLQUFBQyxNQUFBLEtBQUFDLE1BQUEsS0FBQUMsWUFBQSxLQUFBQyxVQUFBLE9BQTZJQyxHQUFBLENBQU1DLFdBQUEsQ0FBWXhSLGlCQUFBLGVBQUFHLGFBQUEsMEJBQXNFc1IsV0FBQSxDQUFhelIsaUJBQUEsZUFBQUcsYUFBQSwwQkFBc0V1UixhQUFBLENBQWUxUixpQkFBQSxpQkFBQUcsYUFBQSw4QkFBNEV3UixhQUFBLENBQWUzUixpQkFBQSxpQkFDaGdCRyxhQUFBLCtCQUEyQ3lSLEdBQUEsQ0FBS2hTLFdBQUEyUixHQUFBNVIsY0FBQSxTQUFBbmtCLEVBQUFDLEVBQUFwRixFQUFBQyxHQUE4QyxJQUFBbUgsRUFBQSxjQUFBakMsR0FBQSxnQkFBQUEsRUFBQWlVLEVBQUEsYUFBQWpVLEdBQUEsZUFBQUEsRUFBNEUsR0FBQWlDLElBQUFwSCxFQUFBazZCLGVBQUFsNkIsRUFBQW02QixlQUFBL2dCLElBQUFoUyxFQUFBLFlBQWtNLEdBQXZJQSxFQUFBbkgsRUFBQThJLFNBQUE5SSxLQUFBbUgsRUFBQW5ILEVBQUFvM0IsZUFBQWp3QixFQUFBbzBCLGFBQUFwMEIsRUFBQXEwQixhQUFBMXlCLE9BQTBFcVEsS0FBQWhVLE9BQUFwRixFQUFBazZCLGVBQUFsNkIsRUFBQW82QixXQUFBOU8sRUFBQWxtQixHQUFBLE1BQUFnVSxFQUFBLEtBQTZEQSxJQUFBaFUsRUFBQSxZQUFxQixJQUFBMlksT0FBQSxFQUFBOEYsT0FBQSxFQUFBamtCLE9BQUEsRUFBQTZELE9BQUEsRUFBd0MsYUFBQTBCLEdBQUEsY0FBQUEsR0FBQTRZLEVBQUF5YixHQUFBM1YsRUFBQXFYLEdBQUFFLFdBQUF4N0IsRUFBQXM3QixHQUFBQyxXQUFBMTNCLEVBQUEsU0FDemEsZUFBQTBCLEdBQUEsZ0JBQUFBLElBQUE0WSxFQUFBd2MsR0FBQTFXLEVBQUFxWCxHQUFBSSxhQUFBMTdCLEVBQUFzN0IsR0FBQUcsYUFBQTUzQixFQUFBLFdBQWlHLElBQUExRCxFQUFBLE1BQUFxWixFQUFBaFMsRUFBQXNrQixFQUFBdFMsR0FBc0wsR0FBaEtoUyxFQUFBLE1BQUFoQyxFQUFBZ0MsRUFBQXNrQixFQUFBdG1CLElBQWtCRCxFQUFBNFksRUFBQTBRLFVBQUE1SyxFQUFBekssRUFBQXBaLEVBQUFDLElBQXVCeVgsS0FBQWpVLEVBQUEsUUFBaUIwQixFQUFBdEQsT0FBQTlCLEVBQVdvRixFQUFBKzBCLGNBQUE5eUIsR0FBa0JwSCxFQUFBK2QsRUFBQTBRLFVBQUE3dUIsRUFBQXdGLEVBQUFwRixFQUFBQyxJQUF1QnlYLEtBQUFqVSxFQUFBLFFBQWlCekQsRUFBQTZCLE9BQUF1RixFQUFXcEgsRUFBQWs2QixjQUFBbjZCLEVBQWtCRSxFQUFBbUYsRUFBSWdVLEdBQUFuWixFQUFBa0YsRUFBQSxDQUF1QixJQUFSaUMsRUFBQW5ILEVBQUl3RCxFQUFBLEVBQUlzYSxFQUFaM1ksRUFBQWdVLEVBQW9CMkUsRUFBRUEsRUFBQTZOLEVBQUE3TixHQUFBdGEsSUFBZ0IsSUFBSnNhLEVBQUEsRUFBSW5lLEVBQUF3SCxFQUFReEgsRUFBRUEsRUFBQWdzQixFQUFBaHNCLEdBQUFtZSxJQUFZLEtBQUssRUFBQXRhLEVBQUFzYSxHQUFNM1ksRUFBQXdtQixFQUFBeG1CLEdBQUEzQixJQUFhLEtBQUssRUFBQXNhLEVBQUF0YSxHQUFNMkQsRUFBQXdrQixFQUFBeGtCLEdBQUEyVyxJQUFhLEtBQUt0YSxLQUFJLENBQUUsR0FBQTJCLElBQUFnQyxHQUFBaEMsSUFBQWdDLEVBQUFzMEIsVUFBQSxNQUFBdjJCLEVBQWtDQyxFQUFBd21CLEVBQUF4bUIsR0FBUWdDLEVBQUF3a0IsRUFBQXhrQixHQUFRaEMsRUFBQSxVQUFPQSxFQUFBLEtBQWdCLElBQUpnQyxFQUFBaEMsRUFBSUEsRUFBQSxHQUFTZ1UsT0FBQWhTLElBQy9kLFFBRDBlM0QsRUFDdGYyVixFQUFBc2lCLFlBQVlqNEIsSUFBQTJELElBQXlCaEMsRUFBQWdELEtBQUFnUixHQUFVQSxFQUFBd1MsRUFBQXhTLEdBQVEsSUFBQUEsRUFBQSxHQUFTblosT0FBQW1ILElBQXlCLFFBQWQzRCxFQUFBeEQsRUFBQXk3QixZQUFjajRCLElBQUEyRCxJQUF5QmdTLEVBQUFoUixLQUFBbkksR0FBVUEsRUFBQTJyQixFQUFBM3JCLEdBQVEsSUFBQUEsRUFBQSxFQUFRQSxFQUFBbUYsRUFBQXJELE9BQVc5QixJQUFBaXNCLEVBQUE5bUIsRUFBQW5GLEdBQUEsVUFBQWtGLEdBQXlCLElBQUFsRixFQUFBbVosRUFBQXJYLE9BQWUsRUFBQTlCLEtBQU1pc0IsRUFBQTlTLEVBQUFuWixHQUFBLFdBQUFELEdBQXVCLE9BQUFtRixFQUFBbkYsS0FBYyxTQUFBMjdCLEdBQUF4MkIsRUFBQUMsR0FBaUIsT0FBQUQsSUFBQUMsSUFBQSxJQUFBRCxHQUFBLEVBQUFBLEdBQUEsRUFBQUMsSUFBQUQsTUFBQUMsS0FBK0MsSUFBQXcyQixHQUFBdjdCLE9BQUFrQixVQUFBQyxlQUMxUyxTQUFBcTZCLEdBQUExMkIsRUFBQUMsR0FBaUIsR0FBQXUyQixHQUFBeDJCLEVBQUFDLEdBQUEsU0FBb0Isb0JBQUFELEdBQUEsT0FBQUEsR0FBQSxpQkFBQUMsR0FBQSxPQUFBQSxFQUFBLFNBQXlFLElBQUFwRixFQUFBSyxPQUFBa0MsS0FBQTRDLEdBQUFsRixFQUFBSSxPQUFBa0MsS0FBQTZDLEdBQXNDLEdBQUFwRixFQUFBK0IsU0FBQTlCLEVBQUE4QixPQUFBLFNBQWdDLElBQUE5QixFQUFBLEVBQVFBLEVBQUFELEVBQUErQixPQUFXOUIsSUFBQSxJQUFBMjdCLEdBQUE5N0IsS0FBQXNGLEVBQUFwRixFQUFBQyxNQUFBMDdCLEdBQUF4MkIsRUFBQW5GLEVBQUFDLElBQUFtRixFQUFBcEYsRUFBQUMsS0FBQSxTQUF1RCxTQUFTLFNBQUE2N0IsR0FBQTMyQixHQUFlLElBQUFDLEVBQUFELEVBQVEsR0FBQUEsRUFBQXUyQixVQUFBLEtBQW9CdDJCLEVBQUF5bUIsUUFBU3ptQixJQUFBeW1CLFdBQVksQ0FBSyxTQUFBem1CLEVBQUEyMkIsV0FBQSxTQUFnQyxLQUFLMzJCLEVBQUF5bUIsUUFBUyxVQUFBem1CLElBQUF5bUIsUUFBQWtRLFdBQUEsU0FBNEMsV0FBQTMyQixFQUFBb21CLElBQUEsSUFBcUIsU0FBQXdRLEdBQUE3MkIsR0FBZSxJQUFBMjJCLEdBQUEzMkIsSUFBQW1lLEVBQUEsT0FFNVYsU0FBQTJZLEdBQUE5MkIsR0FBdUIsS0FBUkEsRUFEN0gsU0FBQUEsR0FBZSxJQUFBQyxFQUFBRCxFQUFBdTJCLFVBQWtCLElBQUF0MkIsRUFBQSxZQUFBQSxFQUFBMDJCLEdBQUEzMkIsS0FBQW1lLEVBQUEsV0FBQWxlLEVBQUEsS0FBQUQsRUFBd0QsUUFBQW5GLEVBQUFtRixFQUFBbEYsRUFBQW1GLElBQWlCLENBQUUsSUFBQWdDLEVBQUFwSCxFQUFBNnJCLE9BQUF6UyxFQUFBaFMsSUFBQXMwQixVQUFBLEtBQW9DLElBQUF0MEIsSUFBQWdTLEVBQUEsTUFBZ0IsR0FBQWhTLEVBQUFrUCxRQUFBOEMsRUFBQTlDLE1BQUEsQ0FBc0IsUUFBQXlILEVBQUEzVyxFQUFBa1AsTUFBa0J5SCxHQUFFLENBQUUsR0FBQUEsSUFBQS9kLEVBQUEsT0FBQWc4QixHQUFBNTBCLEdBQUFqQyxFQUF3QixHQUFBNFksSUFBQTlkLEVBQUEsT0FBQSs3QixHQUFBNTBCLEdBQUFoQyxFQUF3QjJZLElBQUFtZSxRQUFZNVksRUFBQSxPQUFTLEdBQUF0akIsRUFBQTZyQixTQUFBNXJCLEVBQUE0ckIsT0FBQTdyQixFQUFBb0gsRUFBQW5ILEVBQUFtWixNQUErQixDQUFLMkUsR0FBQSxFQUFLLFFBQUE4RixFQUFBemMsRUFBQWtQLE1BQWtCdU4sR0FBRSxDQUFFLEdBQUFBLElBQUE3akIsRUFBQSxDQUFVK2QsR0FBQSxFQUFLL2QsRUFBQW9ILEVBQUluSCxFQUFBbVosRUFBSSxNQUFNLEdBQUF5SyxJQUFBNWpCLEVBQUEsQ0FBVThkLEdBQUEsRUFBSzlkLEVBQUFtSCxFQUFJcEgsRUFBQW9aLEVBQUksTUFBTXlLLElBQUFxWSxRQUFZLElBQUFuZSxFQUFBLENBQU8sSUFBQThGLEVBQUF6SyxFQUFBOUMsTUFBY3VOLEdBQUUsQ0FBRSxHQUFBQSxJQUFBN2pCLEVBQUEsQ0FBVStkLEdBQUEsRUFBSy9kLEVBQUFvWixFQUFJblosRUFBQW1ILEVBQUksTUFBTSxHQUFBeWMsSUFBQTVqQixFQUFBLENBQVU4ZCxHQUFBLEVBQUs5ZCxFQUFBbVosRUFBSXBaLEVBQUFvSCxFQUFJLE1BQU15YyxJQUFBcVksUUFBWW5lLEdBQ3JmdUYsRUFBQSxRQUFpQnRqQixFQUFBMDdCLFlBQUF6N0IsR0FBQXFqQixFQUFBLE9BQTBELE9BQTFCLElBQUF0akIsRUFBQXdyQixLQUFBbEksRUFBQSxPQUEwQnRqQixFQUFBZ3JCLFVBQUFsRyxVQUFBOWtCLEVBQUFtRixFQUFBQyxFQUFrRCsyQixDQUFBaDNCLElBQVEsWUFBa0IsUUFBQUMsRUFBQUQsSUFBYSxDQUFFLE9BQUFDLEVBQUFvbUIsS0FBQSxJQUFBcG1CLEVBQUFvbUIsSUFBQSxPQUFBcG1CLEVBQWlDLEdBQUFBLEVBQUFrUixNQUFBbFIsRUFBQWtSLE1BQUF1VixPQUFBem1CLE1BQUFrUixVQUFzQyxDQUFLLEdBQUFsUixJQUFBRCxFQUFBLE1BQWUsTUFBS0MsRUFBQTgyQixTQUFXLENBQUUsSUFBQTkyQixFQUFBeW1CLFFBQUF6bUIsRUFBQXltQixTQUFBMW1CLEVBQUEsWUFBdUNDLElBQUF5bUIsT0FBV3ptQixFQUFBODJCLFFBQUFyUSxPQUFBem1CLEVBQUF5bUIsT0FBMEJ6bUIsSUFBQTgyQixTQUFhLFlBQzVXLElBQUFFLEdBQUE3WSxHQUFBOEwsT0FBQSxDQUFpQmdOLGNBQUEsS0FBQUMsWUFBQSxLQUFBQyxjQUFBLE9BQXVEQyxHQUFBalosR0FBQThMLE9BQUEsQ0FBZW9OLGNBQUEsU0FBQXQzQixHQUEwQix3QkFBQUEsSUFBQXMzQixjQUFBMXpCLE9BQUEwekIsaUJBQWdFQyxHQUFBaEUsR0FBQXJKLE9BQUEsQ0FBZ0I2SyxjQUFBLE9BQXFCLFNBQUF5QyxHQUFBeDNCLEdBQWUsSUFBQUMsRUFBQUQsRUFBQXFyQixRQUF1RixNQUF2RSxhQUFBcnJCLEVBQUEsS0FBQUEsSUFBQXkzQixXQUFBLEtBQUF4M0IsSUFBQUQsRUFBQSxJQUFBQSxFQUFBQyxFQUF3RCxLQUFBRCxNQUFBLElBQWUsSUFBQUEsR0FBQSxLQUFBQSxJQUFBLEVBQzVULElBQUEwM0IsR0FBQSxDQUFRQyxJQUFBLFNBQUFDLFNBQUEsSUFBQUMsS0FBQSxZQUFBQyxHQUFBLFVBQUFDLE1BQUEsYUFBQUMsS0FBQSxZQUFBQyxJQUFBLFNBQUFDLElBQUEsS0FBQUMsS0FBQSxjQUFBQyxLQUFBLGNBQUFDLE9BQUEsYUFBQUMsZ0JBQUEsZ0JBQTJNQyxHQUFBLENBQUtDLEVBQUEsWUFBQUMsRUFBQSxNQUFBQyxHQUFBLFFBQUFDLEdBQUEsUUFBQUMsR0FBQSxRQUFBQyxHQUFBLFVBQUFDLEdBQUEsTUFBQUMsR0FBQSxRQUFBQyxHQUFBLFdBQUFDLEdBQUEsU0FBQUMsR0FBQSxJQUFBQyxHQUFBLFNBQUFDLEdBQUEsV0FBQUMsR0FBQSxNQUFBQyxHQUFBLE9BQUFDLEdBQUEsWUFBQUMsR0FBQSxVQUFBQyxHQUFBLGFBQUFDLEdBQUEsWUFBQUMsR0FBQSxTQUFBQyxHQUFBLFNBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FDeE5DLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLE1BQUFDLElBQUEsTUFBQUMsSUFBQSxNQUFBQyxJQUFBLFVBQUFDLElBQUEsYUFBQUMsSUFBQSxRQUFxSEMsR0FBQXJILEdBQUFySixPQUFBLENBQWVudUIsSUFBQSxTQUFBaUUsR0FBZ0IsR0FBQUEsRUFBQWpFLElBQUEsQ0FBVSxJQUFBa0UsRUFBQXkzQixHQUFBMTNCLEVBQUFqRSxNQUFBaUUsRUFBQWpFLElBQXVCLG9CQUFBa0UsRUFBQSxPQUFBQSxFQUErQixtQkFBQUQsRUFBQXVTLEtBQUEsTUFBQXZTLEVBQUF3M0IsR0FBQXgzQixJQUFBLFFBQUEwVyxPQUFBMEYsYUFBQXBjLEdBQUEsWUFBQUEsRUFBQXVTLE1BQUEsVUFBQXZTLEVBQUF1UyxLQUFBZ21CLEdBQUF2NEIsRUFBQXFyQixVQUFBLG1CQUFnSi9wQixTQUFBLEtBQUF1cUIsUUFBQSxLQUFBK0ksU0FBQSxLQUFBOUksT0FBQSxLQUFBQyxRQUFBLEtBQUEvUixPQUFBLEtBQUEwUixPQUFBLEtBQUFxSSxpQkFBQUMsR0FBQXlELFNBQUEsU0FBQXozQixHQUFvSSxtQkFDeGVBLEVBQUF1UyxLQUFBaWxCLEdBQUF4M0IsR0FBQSxHQUFlcXJCLFFBQUEsU0FBQXJyQixHQUFxQixrQkFBQUEsRUFBQXVTLE1BQUEsVUFBQXZTLEVBQUF1UyxLQUFBdlMsRUFBQXFyQixRQUFBLEdBQXVETSxNQUFBLFNBQUEzckIsR0FBbUIsbUJBQUFBLEVBQUF1UyxLQUFBaWxCLEdBQUF4M0IsR0FBQSxZQUFBQSxFQUFBdVMsTUFBQSxVQUFBdlMsRUFBQXVTLEtBQUF2UyxFQUFBcXJCLFFBQUEsS0FBa0Z3UCxHQUFBeEcsR0FBQW5LLE9BQUEsQ0FBZ0I0USxhQUFBLE9BQWtCQyxHQUFBeEgsR0FBQXJKLE9BQUEsQ0FBZ0I4USxRQUFBLEtBQUFDLGNBQUEsS0FBQUMsZUFBQSxLQUFBcFAsT0FBQSxLQUFBQyxRQUFBLEtBQUFGLFFBQUEsS0FBQStJLFNBQUEsS0FBQWIsaUJBQUFDLEtBQTRIbUgsR0FBQS9jLEdBQUE4TCxPQUFBLENBQWV5RyxhQUFBLEtBQUF3RyxZQUFBLEtBQUFDLGNBQUEsT0FBc0RnRSxHQUFBL0csR0FBQW5LLE9BQUEsQ0FBZ0JtUixPQUFBLFNBQUFyN0IsR0FBbUIsaUJBQUFBLElBQUFxN0IsT0FBQSxnQkFDdGRyN0IsS0FBQXM3QixZQUFBLEdBQW1CQyxPQUFBLFNBQUF2N0IsR0FBb0IsaUJBQUFBLElBQUF1N0IsT0FBQSxnQkFBQXY3QixLQUFBdzdCLFlBQUEsZUFBQXg3QixLQUFBeTdCLFdBQUEsR0FBOEZDLE9BQUEsS0FBQUMsVUFBQSxPQUE0QkMsR0FBQSxvQkFBQTVULEVBQUEsaUJBQUFDLEVBQUEsdUJBQUFDLEVBQUEsb1JBQ2pLLHNmQUNBLGlHQUFBQyxHQUFBLDBEQUFBMFQsR0FBQSxHQUFtS0MsR0FBQSxHQUFPLFNBQUFDLEdBQUEvN0IsRUFBQUMsR0FBaUIsSUFBQXBGLEVBQUFtRixFQUFBLEdBQWtCbEYsRUFBQSxPQUFQa0YsSUFBQSxJQUFPLEdBQUF3YSxjQUFBeGEsRUFBQW9CLE1BQUEsSUFBMkNuQixFQUFBLENBQUdxa0Isd0JBQUEsQ0FBeUJ3RyxRQUFBaHdCLEVBQUFpd0IsU0FBQWp3QixFQUFBLFdBQStCNnBCLGFBQUEsQ0FBQTlwQixHQUFBbWhDLGNBQUEvN0IsR0FBbUM0N0IsR0FBQTc3QixHQUFBQyxFQUFRNjdCLEdBQUFqaEMsR0FBQW9GLEVBQzlWLHdmQUNBLGlRQUFBc0QsUUFBQSxTQUFBdkQsR0FBcVIrN0IsR0FBQS83QixHQUFBLEtBQVc0N0IsR0FBQXI0QixRQUFBLFNBQUF2RCxHQUF1Qis3QixHQUFBLzdCLEdBQUEsS0FDdlQsSUFBQWk4QixHQUFBLENBQVE3WCxXQUFBeVgsR0FBQUssK0JBQUEsU0FBQWw4QixHQUFpRSxpQkFBUkEsRUFBQTg3QixHQUFBOTdCLE1BQVEsSUFBQUEsRUFBQWc4QixlQUF3QzdYLGNBQUEsU0FBQW5rQixFQUFBQyxFQUFBcEYsRUFBQUMsR0FBaUMsSUFBQW1ILEVBQUE2NUIsR0FBQTk3QixHQUFZLElBQUFpQyxFQUFBLFlBQWtCLE9BQUFqQyxHQUFVLHNCQUFBdzNCLEdBQUEzOEIsR0FBQSxZQUF5QywwQkFBQW1GLEVBQUE0NkIsR0FBaUMsTUFBTSx1QkFBQTU2QixFQUFBdTNCLEdBQThCLE1BQU0sbUJBQUExOEIsRUFBQWc2QixPQUFBLFlBQXlDLDZIQUFBNzBCLEVBQUFxMEIsR0FBMEksTUFBTSxrSEFBQXIwQixFQUN2ZTY2QixHQUFHLE1BQU0sa0VBQUE3NkIsRUFBQSs2QixHQUEyRSxNQUFNLEtBQUEvUyxFQUFBLEtBQUFDLEVBQUEsS0FBQUMsRUFBQWxvQixFQUFBaTNCLEdBQTZCLE1BQU0sS0FBQTlPLEdBQUFub0IsRUFBQW03QixHQUFhLE1BQU0sYUFBQW43QixFQUFBdXpCLEdBQW1CLE1BQU0sWUFBQXZ6QixFQUFBbzdCLEdBQWtCLE1BQU0saUNBQUFwN0IsRUFBQXEzQixHQUF5QyxNQUFNLDRKQUFBcjNCLEVBQUFvMUIsR0FBeUssTUFBTSxRQUFBcDFCLEVBQUFvZSxHQUF5QyxPQUFONkksRUFBdkJobkIsRUFBQUQsRUFBQXNwQixVQUFBcm5CLEVBQUFoQyxFQUFBcEYsRUFBQUMsSUFBNkJtRixJQUFVazhCLEdBQUFGLEdBQUFDLCtCQUNsZEUsR0FBQSxHQUFNLFNBQUFDLEdBQUFyOEIsR0FBZSxJQUFBQyxFQUFBRCxFQUFBczhCLFdBQUF6aEMsRUFBQW9GLEVBQXVCLEdBQUcsSUFBQXBGLEVBQUEsQ0FBT21GLEVBQUF1OEIsVUFBQXQ1QixLQUFBcEksR0FBb0IsTUFBTSxJQUFBQyxFQUFNLElBQUFBLEVBQUFELEVBQVFDLEVBQUE0ckIsUUFBUzVyQixJQUFBNHJCLE9BQXVELEtBQTNDNXJCLEVBQUEsSUFBQUEsRUFBQXVyQixJQUFBLEtBQUF2ckIsRUFBQStxQixVQUFBMlcsZUFBMkMsTUFBWXg4QixFQUFBdThCLFVBQUF0NUIsS0FBQXBJLEdBQW9CQSxFQUFBc3JCLEVBQUFyckIsU0FBUUQsR0FBUyxJQUFBQSxFQUFBLEVBQVFBLEVBQUFtRixFQUFBdThCLFVBQUEzL0IsT0FBcUIvQixJQUFBLENBQUtvRixFQUFBRCxFQUFBdThCLFVBQUExaEMsR0FBaUIsSUFBQW9ILEVBQUE0ckIsR0FBQTd0QixFQUFBNG9CLGFBQXdCOXRCLEVBQUFrRixFQUFBeThCLGFBQWlCLFFBQUF4b0IsRUFBQWpVLEVBQUE0b0IsWUFBQWhRLEVBQUEsS0FBQThGLEVBQUEsRUFBbUNBLEVBQUF3RixFQUFBdG5CLE9BQVk4aEIsSUFBQSxDQUFLLElBQUFqa0IsRUFBQXlwQixFQUFBeEYsR0FBWWprQixRQUFBMHBCLGNBQUFycEIsRUFBQW1GLEVBQUFnVSxFQUFBaFMsTUFBQTJXLEVBQUFxTSxFQUFBck0sRUFBQW5lLElBQTZDc3JCLEVBQUFuTixJQUFPLElBQUE4akIsSUFBQSxFQUMvWixTQUFBemQsR0FBQWpmLEVBQUFDLEdBQWdCLElBQUFBLEVBQUEsWUFBa0IsSUFBQXBGLEdBQUFzaEMsR0FBQW44QixHQUFBMjhCLEdBQUFDLElBQUE1Z0MsS0FBQSxLQUFBZ0UsR0FBaUNDLEVBQUFpSCxpQkFBQWxILEVBQUFuRixHQUFBLEdBQTJCLFNBQUFnaUMsR0FBQTc4QixFQUFBQyxHQUFpQixJQUFBQSxFQUFBLFlBQWtCLElBQUFwRixHQUFBc2hDLEdBQUFuOEIsR0FBQTI4QixHQUFBQyxJQUFBNWdDLEtBQUEsS0FBQWdFLEdBQWlDQyxFQUFBaUgsaUJBQUFsSCxFQUFBbkYsR0FBQSxHQUEyQixTQUFBOGhDLEdBQUEzOEIsRUFBQUMsR0FBaUJ3c0IsR0FBQW1RLEdBQUE1OEIsRUFBQUMsR0FDOU0sU0FBQTI4QixHQUFBNThCLEVBQUFDLEdBQWlCLEdBQUF5OEIsR0FBQSxDQUFPLElBQUE3aEMsRUFBQWd6QixHQUFBNXRCLEdBQTJFLEdBQXZELFFBQVJwRixFQUFBc3JCLEVBQUF0ckIsS0FBUSxpQkFBQUEsRUFBQXdyQixLQUFBLElBQUFzUSxHQUFBOTdCLE9BQUEsTUFBdUR1aEMsR0FBQXgvQixPQUFBLENBQWMsSUFBQTlCLEVBQUFzaEMsR0FBQTc5QixNQUFlekQsRUFBQTJoQyxhQUFBejhCLEVBQWlCbEYsRUFBQTh0QixZQUFBM29CLEVBQWdCbkYsRUFBQXdoQyxXQUFBemhDLEVBQWVtRixFQUFBbEYsT0FBSWtGLEVBQUEsQ0FBUXk4QixhQUFBejhCLEVBQUE0b0IsWUFBQTNvQixFQUFBcThCLFdBQUF6aEMsRUFBQTBoQyxVQUFBLElBQXdELElBQUkzUCxHQUFBeVAsR0FBQXI4QixHQUFTLFFBQVFBLEVBQUF5OEIsYUFBQSxLQUFBejhCLEVBQUE0b0IsWUFBQSxLQUFBNW9CLEVBQUFzOEIsV0FBQSxLQUFBdDhCLEVBQUF1OEIsVUFBQTMvQixPQUFBLEtBQUF3L0IsR0FBQXgvQixRQUFBdy9CLEdBQUFuNUIsS0FBQWpELEtBQXlHLElBQUE4OEIsR0FBQSxHQUFTQyxHQUFBLEVBQUFDLEdBQUEsd0JBQUF2M0IsS0FBQUMsVUFBQXRFLE1BQUEsR0FDM1gsU0FBQTY3QixHQUFBajlCLEdBQXFGLE9BQXRFOUUsT0FBQWtCLFVBQUFDLGVBQUExQixLQUFBcUYsRUFBQWc5QixNQUFBaDlCLEVBQUFnOUIsSUFBQUQsS0FBQUQsR0FBQTk4QixFQUFBZzlCLEtBQUEsSUFBc0VGLEdBQUE5OEIsRUFBQWc5QixLQUFpQixTQUFBRSxHQUFBbDlCLEdBQW9FLGFBQXJEQSxNQUFBLG9CQUFBNkQsdUJBQUEsSUFBcUQsWUFBc0MsSUFBSSxPQUFBN0QsRUFBQW15QixlQUFBbnlCLEVBQUFtOUIsS0FBK0IsTUFBQWw5QixHQUFTLE9BQUFELEVBQUFtOUIsTUFBZSxTQUFBQyxHQUFBcDlCLEdBQWUsS0FBS0EsS0FBQXE5QixZQUFnQnI5QixJQUFBcTlCLFdBQWdCLE9BQUFyOUIsRUFDL1QsU0FBQXM5QixHQUFBdDlCLEVBQUFDLEdBQWlCLElBQWdCbkYsRUFBaEJELEVBQUF1aUMsR0FBQXA5QixHQUFnQixJQUFKQSxFQUFBLEVBQWNuRixHQUFFLENBQUUsT0FBQUEsRUFBQW16QixTQUFBLENBQTRDLEdBQXpCbHpCLEVBQUFrRixFQUFBbkYsRUFBQTR0QixZQUFBN3JCLE9BQXlCb0QsR0FBQUMsR0FBQW5GLEdBQUFtRixFQUFBLE9BQXFCczlCLEtBQUExaUMsRUFBQTZlLE9BQUF6WixFQUFBRCxHQUFtQkEsRUFBQWxGLEVBQUlrRixFQUFBLENBQUcsS0FBS25GLEdBQUUsQ0FBRSxHQUFBQSxFQUFBMmlDLFlBQUEsQ0FBa0IzaUMsSUFBQTJpQyxZQUFnQixNQUFBeDlCLEVBQVFuRixJQUFBdXJCLFdBQWV2ckIsT0FBQSxFQUFTQSxFQUFBdWlDLEdBQUF2aUMsSUFDck4sU0FBQTRpQyxLQUFjLFFBQUF6OUIsRUFBQTRELE9BQUEzRCxFQUFBaTlCLEtBQXdCajlCLGFBQUFELEVBQUEwOUIsbUJBQWlDLENBQUUsSUFBSSxJQUFBN2lDLEVBQUEsaUJBQUFvRixFQUFBMDlCLGNBQUFyOEIsU0FBQStGLEtBQXNELE1BQUF2TSxHQUFTRCxHQUFBLEVBQUssSUFBQUEsRUFBdUIsTUFBV29GLEVBQUFpOUIsSUFBbENsOUIsRUFBQUMsRUFBQTA5QixlQUFrQzk1QixVQUFpQixPQUFBNUQsRUFBUyxTQUFBMjlCLEdBQUE1OUIsR0FBZSxJQUFBQyxFQUFBRCxLQUFBNHRCLFVBQUE1dEIsRUFBQTR0QixTQUFBeEcsY0FBOEMsT0FBQW5uQixJQUFBLFVBQUFBLElBQUEsU0FBQUQsRUFBQXVTLE1BQUEsV0FBQXZTLEVBQUF1UyxNQUFBLFFBQUF2UyxFQUFBdVMsTUFBQSxRQUFBdlMsRUFBQXVTLE1BQUEsYUFBQXZTLEVBQUF1UyxPQUFBLGFBQUF0UyxHQUFBLFNBQUFELEVBQUE2OUIsaUJBRzFRLFNBQUFDLEdBQUE5OUIsR0FBZSxJQUFBQyxFQUFBdzlCLEtBQUE1aUMsRUFBQW1GLEVBQUErOUIsWUFBQWpqQyxFQUFBa0YsRUFBQWcrQixlQUE4QyxHQUFBLzlCLElBQUFwRixRQUFBcTNCLGVBSmlLLFNBQUErTCxFQUFBaitCLEVBQUFDLEdBQWlCLFNBQUFELElBQUFDLEtBQUFELElBQUFDLEtBQUFELEdBQUEsSUFBQUEsRUFBQWd1QixZQUFBL3RCLEdBQUEsSUFBQUEsRUFBQSt0QixTQUFBaVEsRUFBQWorQixFQUFBQyxFQUFBbW1CLFlBQUEsYUFBQXBtQixJQUFBaytCLFNBQUFqK0IsS0FBQUQsRUFBQW0rQiw0QkFBQSxHQUFBbitCLEVBQUFtK0Isd0JBQUFsK0IsTUFJbExnK0IsQ0FBQXBqQyxFQUFBcTNCLGNBQUFrTSxnQkFBQXZqQyxHQUFBLENBQXFFLFVBQUFDLEdBQUE4aUMsR0FBQS9pQyxHQUFBLEdBQUFvRixFQUFBbkYsRUFBQXVqQyxXQUFBLEtBQUFyK0IsRUFBQWxGLEVBQUF1VSxPQUFBclAsRUFBQUMsR0FBQSxtQkFBQXBGLElBQUF5akMsZUFBQXIrQixFQUFBcEYsRUFBQTBqQyxhQUFBOTRCLEtBQUErRCxJQUFBeEosRUFBQW5GLEVBQUFZLE1BQUFtQixhQUE0SSxJQUFBb0QsR0FBQUMsRUFBQXBGLEVBQUFxM0IsZUFBQXJ1QixXQUFBNUQsRUFBQW8yQixhQUFBenlCLFFBQUE0NkIsYUFBQSxDQUErRXgrQixJQUFBdytCLGVBQW1CLElBQUF2OEIsRUFBQXBILEVBQUE0dEIsWUFBQTdyQixPQUFBcVgsRUFBQXhPLEtBQUErRCxJQUFBMU8sRUFBQXVqQyxNQUFBcDhCLEdBQWlEbkgsT0FBQSxJQUFBQSxFQUFBdVUsSUFBQTRFLEVBQUF4TyxLQUFBK0QsSUFBQTFPLEVBQUF1VSxJQUFBcE4sSUFBcUNqQyxFQUFBa3FCLFFBQUFqVyxFQUFBblosSUFBQW1ILEVBQUFuSCxJQUFBbVosSUFBQWhTLEdBQThCQSxFQUFBcTdCLEdBQUF6aUMsRUFBQW9aLEdBQVUsSUFBQTJFLEVBQUEwa0IsR0FBQXppQyxFQUM5ZUMsR0FBR21ILEdBQUEyVyxJQUFBLElBQUE1WSxFQUFBeStCLFlBQUF6K0IsRUFBQTArQixhQUFBejhCLEVBQUFzN0IsTUFBQXY5QixFQUFBMitCLGVBQUExOEIsRUFBQXlYLFFBQUExWixFQUFBNCtCLFlBQUFobUIsRUFBQTJrQixNQUFBdjlCLEVBQUE2K0IsY0FBQWptQixFQUFBYyxXQUFBelosSUFBQTYrQixlQUFBQyxTQUFBOThCLEVBQUFzN0IsS0FBQXQ3QixFQUFBeVgsUUFBQTFaLEVBQUFnL0Isa0JBQUEvcUIsRUFBQW5aLEdBQUFrRixFQUFBaS9CLFNBQUFoL0IsR0FBQUQsRUFBQWtxQixPQUFBdFIsRUFBQTJrQixLQUFBM2tCLEVBQUFjLFVBQUF6WixFQUFBaS9CLE9BQUF0bUIsRUFBQTJrQixLQUFBM2tCLEVBQUFjLFFBQUExWixFQUFBaS9CLFNBQUFoL0IsS0FBNlIsSUFBTEEsRUFBQSxHQUFLRCxFQUFBbkYsRUFBUW1GLElBQUFvbUIsWUFBZSxJQUFBcG1CLEVBQUFndUIsVUFBQS90QixFQUFBZ0QsS0FBQSxDQUF5QmlPLFFBQUFsUixFQUFBbS9CLEtBQUFuL0IsRUFBQW8vQixXQUFBQyxJQUFBci9CLEVBQUFzL0IsWUFBcUYsSUFBdkMsbUJBQUF6a0MsRUFBQTBrQyxPQUFBMWtDLEVBQUEwa0MsUUFBdUMxa0MsRUFBQSxFQUFRQSxFQUFBb0YsRUFBQXJELE9BQVcvQixLQUFBbUYsRUFBQUMsRUFBQXBGLElBQUFxVyxRQUFBa3VCLFdBQUFwL0IsRUFBQW0vQixLQUFBbi9CLEVBQUFrUixRQUFBb3VCLFVBQUF0L0IsRUFBQXEvQixLQUN4YixJQUFBRyxHQUFBdFksR0FBQSxpQkFBQXJqQixVQUFBLElBQUFBLFNBQUEybUIsYUFBQWlWLEdBQUEsQ0FBb0VDLE9BQUEsQ0FBUXBiLHdCQUFBLENBQXlCd0csUUFBQSxXQUFBQyxTQUFBLG1CQUE4Q3BHLGFBQUEsaUZBQUE5bEIsTUFBQSxPQUEyRzhnQyxHQUFBLEtBQUFDLEdBQUEsS0FBQUMsR0FBQSxLQUFBQyxJQUFBLEVBQzlQLFNBQUFDLEdBQUEvL0IsRUFBQUMsR0FBaUIsSUFBQXBGLEVBQUFvRixFQUFBMkQsU0FBQTNELElBQUE0RCxTQUFBLElBQUE1RCxFQUFBK3RCLFNBQUEvdEIsSUFBQWl5QixjQUErRCxPQUFBNE4sSUFBQSxNQUFBSCxTQUFBekMsR0FBQXJpQyxHQUFBLE1BQTZDLG1CQUFMQSxFQUFBOGtDLEtBQUsvQixHQUFBL2lDLEtBQUEsQ0FBK0J3akMsTUFBQXhqQyxFQUFBeWpDLGVBQUFqdkIsSUFBQXhVLEVBQUEwakMsY0FBMEMxakMsRUFBQSxDQUE2RTZqQyxZQUE3RTdqQyxLQUFBcTNCLGVBQUFyM0IsRUFBQXEzQixjQUFBbUUsYUFBQXp5QixRQUFBNDZCLGdCQUE2RUUsV0FBQUMsYUFBQTlqQyxFQUFBOGpDLGFBQUFDLFVBQUEvakMsRUFBQStqQyxVQUFBQyxZQUFBaGtDLEVBQUFna0MsYUFBc0dnQixJQUFBbkosR0FBQW1KLEdBQUFobEMsR0FBQSxNQUFBZ2xDLEdBQUFobEMsR0FBQW1GLEVBQUFvZSxHQUFBa0wsVUFBQW1XLEdBQUFDLE9BQUFFLEdBQUE1L0IsRUFBQUMsSUFBQXNTLEtBQUEsU0FBQXZTLEVBQUF0RCxPQUFBaWpDLEdBQUExWSxFQUFBam5CLE9BQ3pYLElBQUFnZ0MsR0FBQSxDQUFRNWIsV0FBQXFiLEdBQUF0YixjQUFBLFNBQUFua0IsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQThDLElBQUFtWixFQUFBaFMsRUFBQW5ILEVBQUE4SSxTQUFBOUksSUFBQStJLFNBQUEsSUFBQS9JLEVBQUFrekIsU0FBQWx6QixJQUFBbzNCLGNBQWlFLEtBQUFqZSxHQUFBaFMsR0FBQSxDQUFZakMsRUFBQSxDQUFHaUMsRUFBQWc3QixHQUFBaDdCLEdBQVFnUyxFQUFBeVEsRUFBQXViLFNBQWMsUUFBQXJuQixFQUFBLEVBQVlBLEVBQUEzRSxFQUFBclgsT0FBV2djLElBQUEsQ0FBSyxJQUFBOEYsRUFBQXpLLEVBQUEyRSxHQUFXLElBQUEzVyxFQUFBNUYsZUFBQXFpQixLQUFBemMsRUFBQXljLEdBQUEsQ0FBZ0N6YyxHQUFBLEVBQUssTUFBQWpDLEdBQVNpQyxHQUFBLEVBQUtnUyxHQUFBaFMsRUFBSyxHQUFBZ1MsRUFBQSxZQUFrQyxPQUFqQmhTLEVBQUFoQyxFQUFBc21CLEVBQUF0bUIsR0FBQTJELE9BQWlCNUQsR0FBVSxhQUFBMnRCLEdBQUExckIsSUFBQSxTQUFBQSxFQUFBNDdCLG1CQUFBOEIsR0FBQTE5QixFQUFBMjlCLEdBQUEzL0IsRUFBQTQvQixHQUFBLE1BQW9FLE1BQU0sV0FBQUEsR0FBQUQsR0FBQUQsR0FBQSxLQUEwQixNQUFNLGdCQUFBRyxJQUFBLEVBQXVCLE1BQU0scURBQUFBLElBQUEsRUFBQUMsR0FBQWxsQyxFQUFBQyxHQUFzRSx5QkFBQTBrQyxHQUFBLE1BQ3BmLGlDQUFBTyxHQUFBbGxDLEVBQUFDLEdBQTJDLGNBQzNDLFNBQUFvbEMsR0FBQWxnQyxFQUFBQyxHQUEyRSxPQUExREQsRUFBQS9ELEVBQUEsQ0FBSzZRLGNBQUEsR0FBZ0I3TSxJQUFJQSxFQURrVixTQUFBRCxHQUFlLElBQUFDLEVBQUEsR0FBNkQsT0FBcERxZSxFQUFBeE8sU0FBQXZNLFFBQUF2RCxFQUFBLFNBQUFBLEdBQWtDLE1BQUFBLElBQUFDLEdBQUFELEtBQWtCQyxFQUM5WmtnQyxDQUFBbGdDLEVBQUE2TSxhQUFBOU0sRUFBQThNLFNBQUE3TSxHQUFpQ0QsRUFBUyxTQUFBb2dDLEdBQUFwZ0MsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQWlDLEdBQVprRixJQUFBeU8sUUFBWXhPLEVBQUEsQ0FBTUEsRUFBQSxHQUFLLFFBQUFnQyxFQUFBLEVBQVlBLEVBQUFwSCxFQUFBK0IsT0FBV3FGLElBQUFoQyxFQUFBLElBQUFwRixFQUFBb0gsS0FBQSxFQUFtQixJQUFBcEgsRUFBQSxFQUFRQSxFQUFBbUYsRUFBQXBELE9BQVcvQixJQUFBb0gsRUFBQWhDLEVBQUE1RCxlQUFBLElBQUEyRCxFQUFBbkYsR0FBQVksT0FBQXVFLEVBQUFuRixHQUFBd2xDLFdBQUFwK0IsSUFBQWpDLEVBQUFuRixHQUFBd2xDLFNBQUFwK0IsTUFBQW5ILElBQUFrRixFQUFBbkYsR0FBQXlsQyxpQkFBQSxPQUE0RyxDQUF1QixJQUFsQnpsQyxFQUFBLEdBQUF3MkIsR0FBQXgyQixHQUFXb0YsRUFBQSxLQUFPZ0MsRUFBQSxFQUFRQSxFQUFBakMsRUFBQXBELE9BQVdxRixJQUFBLENBQUssR0FBQWpDLEVBQUFpQyxHQUFBeEcsUUFBQVosRUFBaUUsT0FBOUNtRixFQUFBaUMsR0FBQW8rQixVQUFBLE9BQWlCdmxDLElBQUFrRixFQUFBaUMsR0FBQXErQixpQkFBQSxJQUFvQyxPQUFBcmdDLEdBQUFELEVBQUFpQyxHQUFBNmpCLFdBQUE3bEIsRUFBQUQsRUFBQWlDLElBQWtDLE9BQUFoQyxNQUFBb2dDLFVBQUEsSUFDbGMsU0FBQUUsR0FBQXZnQyxFQUFBQyxHQUFnRSxPQUEvQyxNQUFBQSxFQUFBdWdDLHlCQUFBcmlCLEVBQUEsTUFBK0NsaUIsRUFBQSxHQUFXZ0UsRUFBQSxDQUFJeEUsV0FBQSxFQUFBKzFCLGtCQUFBLEVBQUExa0IsU0FBQSxHQUFBOU0sRUFBQXl4QixjQUFBRyxlQUE0RSxTQUFBNk8sR0FBQXpnQyxFQUFBQyxHQUFpQixJQUFBcEYsRUFBQW9GLEVBQUF4RSxNQUFjLE1BQUFaLE1BQUFvRixFQUFBdXhCLGFBQUEsT0FBQXZ4QixJQUFBNk0sWUFBQSxNQUFBalMsR0FBQXNqQixFQUFBLE1BQUFqZSxNQUFBQyxRQUFBRixLQUFBLEdBQUFBLEVBQUFyRCxRQUFBdWhCLEVBQUEsTUFBQWxlLElBQUEsSUFBQXBGLEVBQUFvRixHQUFBLE1BQUFwRixNQUFBLEtBQXFKbUYsRUFBQXl4QixjQUFBLENBQWlCRyxhQUFBUCxHQUFBeDJCLElBQ2hXLFNBQUE2bEMsR0FBQTFnQyxFQUFBQyxHQUFpQixJQUFBcEYsRUFBQXcyQixHQUFBcHhCLEVBQUF4RSxPQUFBWCxFQUFBdTJCLEdBQUFweEIsRUFBQXV4QixjQUF1QyxNQUFBMzJCLE9BQUEsR0FBQUEsS0FBQW1GLEVBQUF2RSxRQUFBdUUsRUFBQXZFLE1BQUFaLEdBQUEsTUFBQW9GLEVBQUF1eEIsY0FBQXh4QixFQUFBd3hCLGVBQUEzMkIsSUFBQW1GLEVBQUF3eEIsYUFBQTMyQixJQUF3RyxNQUFBQyxJQUFBa0YsRUFBQXd4QixhQUFBLEdBQUExMkIsR0FBK0IsU0FBQTZsQyxHQUFBM2dDLEdBQWUsSUFBQUMsRUFBQUQsRUFBQXlvQixZQUFvQnhvQixJQUFBRCxFQUFBeXhCLGNBQUFHLGVBQUE1eEIsRUFBQXZFLE1BQUF3RSxHQUh6S3dsQixFQUFBQyx1QkFBQSwwSEFBQTdtQixNQUFBLE1BQWdLK2xCLEVBQUE0QixFQUFNamlCLEVBQUEraEIsRUFBTXpCLEVBQUEwQixFQUFNZCxFQUFBRSx5QkFBQSxDQUE2QmliLGtCQUFBM0UsR0FBQTRFLHNCQUFBekssR0FBQTBLLGtCQUFBek4sR0FBQTBOLGtCQUFBZixHQUFBZ0IsdUJBQUF2VixLQUdRLElBQUF3VixHQUFBLENBQVFDLEtBQUEsK0JBQUFDLE9BQUEscUNBQUFDLElBQUEsOEJBQ3hSLFNBQUFDLEdBQUFyaEMsR0FBZSxPQUFBQSxHQUFVLDZDQUE4QyxzREFBdUQsOENBQThDLFNBQUFzaEMsR0FBQXRoQyxFQUFBQyxHQUFpQixhQUFBRCxHQUFBLGlDQUFBQSxFQUFBcWhDLEdBQUFwaEMsR0FBQSwrQkFBQUQsR0FBQSxrQkFBQUMsRUFBQSwrQkFBQUQsRUFDN0wsSUFBQUEsR0FBQXVoQyxRQUFBLEVBQUFDLElBQUF4aEMsR0FBK0ssU0FBQUEsRUFBQUMsR0FBZSxHQUFBRCxFQUFBeWhDLGVBQUFSLEdBQUFHLEtBQUEsY0FBQXBoQyxJQUFBMGhDLFVBQUF6aEMsTUFBMEQsQ0FBMEUsS0FBckVzaEMsT0FBQTE5QixTQUFBQyxjQUFBLFFBQXFDNDlCLFVBQUEsUUFBQXpoQyxFQUFBLFNBQWdDQSxFQUFBc2hDLEdBQUFsRSxXQUFvQnI5QixFQUFBcTlCLFlBQWFyOUIsRUFBQTJoQyxZQUFBM2hDLEVBQUFxOUIsWUFBNkIsS0FBS3A5QixFQUFBbzlCLFlBQWFyOUIsRUFBQTRoQyxZQUFBM2hDLEVBQUFvOUIsY0FBclgsb0JBQUF3RSxhQUFBQyx3QkFBQSxTQUFBN2hDLEVBQUFwRixFQUFBQyxFQUFBbUgsR0FBa0Y0L0IsTUFBQUMsd0JBQUEsV0FBeUMsT0FBQTloQyxHQUFBQyxFQUFBcEYsTUFBb0JtRixJQUM1SyxTQUFBK2hDLEdBQUEvaEMsRUFBQUMsR0FBaUIsR0FBQUEsRUFBQSxDQUFNLElBQUFwRixFQUFBbUYsRUFBQXE5QixXQUFtQixHQUFBeGlDLE9BQUFtRixFQUFBZ2lDLFdBQUEsSUFBQW5uQyxFQUFBbXpCLFNBQXFELFlBQWRuekIsRUFBQW9uQyxVQUFBaGlDLEdBQXNCRCxFQUFBeW9CLFlBQUF4b0IsRUFDdkcsSUFBQWlpQyxHQUFBLENBQVFDLHlCQUFBLEVBQUFDLG1CQUFBLEVBQUFDLGtCQUFBLEVBQUFDLGtCQUFBLEVBQUFDLFNBQUEsRUFBQUMsY0FBQSxFQUFBQyxpQkFBQSxFQUFBQyxhQUFBLEVBQUFDLFNBQUEsRUFBQUMsTUFBQSxFQUFBQyxVQUFBLEVBQUFDLGNBQUEsRUFBQUMsWUFBQSxFQUFBQyxjQUFBLEVBQUFDLFdBQUEsRUFBQUMsVUFBQSxFQUFBQyxTQUFBLEVBQUFDLFlBQUEsRUFBQUMsYUFBQSxFQUFBQyxjQUFBLEVBQUFDLFlBQUEsRUFBQUMsZUFBQSxFQUFBQyxnQkFBQSxFQUFBQyxpQkFBQSxFQUFBQyxZQUFBLEVBQUFDLFdBQUEsRUFBQUMsWUFBQSxFQUFBQyxTQUFBLEVBQUFDLE9BQUEsRUFBQUMsU0FBQSxFQUFBQyxTQUFBLEVBQUFDLFFBQUEsRUFBQUMsUUFBQSxFQUFBQyxNQUFBLEVBQUFDLGFBQUEsRUFDUkMsY0FBQSxFQUFBQyxhQUFBLEVBQUFDLGlCQUFBLEVBQUFDLGtCQUFBLEVBQUFDLGtCQUFBLEVBQUFDLGVBQUEsRUFBQUMsYUFBQSxHQUEwSEMsR0FBQSwwQkFBc0osU0FBQUMsR0FBQTlrQyxFQUFBQyxFQUFBcEYsR0FBbUIsYUFBQW9GLEdBQUEsa0JBQUFBLEdBQUEsS0FBQUEsRUFBQSxHQUFBcEYsR0FBQSxpQkFBQW9GLEdBQUEsSUFBQUEsR0FBQWlpQyxHQUFBN2xDLGVBQUEyRCxJQUFBa2lDLEdBQUFsaUMsSUFBQSxHQUFBQyxHQUFBOGtDLE9BQUE5a0MsRUFBQSxLQUNuUyxTQUFBK2tDLEdBQUFobEMsRUFBQUMsR0FBMkIsUUFBQXBGLEtBQVZtRixJQUFBNm5CLE1BQVU1bkIsRUFBQSxHQUFBQSxFQUFBNUQsZUFBQXhCLEdBQUEsQ0FBdUMsSUFBQUMsRUFBQSxJQUFBRCxFQUFBd0MsUUFBQSxNQUFBNEUsRUFBQTZpQyxHQUFBanFDLEVBQUFvRixFQUFBcEYsR0FBQUMsR0FBeUMsVUFBQUQsTUFBQSxZQUE0QkMsRUFBQWtGLEVBQUFpbEMsWUFBQXBxQyxFQUFBb0gsR0FBQWpDLEVBQUFuRixHQUFBb0gsR0FEaUIvRyxPQUFBa0MsS0FBQThrQyxJQUFBMytCLFFBQUEsU0FBQXZELEdBQW9DNmtDLEdBQUF0aEMsUUFBQSxTQUFBdEQsR0FBdUJBLElBQUFELEVBQUE5QixPQUFBLEdBQUFzYyxjQUFBeGEsRUFBQXlJLFVBQUEsR0FBNkN5NUIsR0FBQWppQyxHQUFBaWlDLEdBQUFsaUMsT0FDNUYsSUFBQWtsQyxHQUFBanBDLEVBQUEsQ0FBVWtwQyxVQUFBLEdBQVksQ0FBRUMsTUFBQSxFQUFBbjFCLE1BQUEsRUFBQW8xQixJQUFBLEVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxJQUFBLEVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLE1BQUEsRUFBQUMsTUFBQSxFQUFBQyxPQUFBLEVBQUFqcEMsUUFBQSxFQUFBa3BDLE9BQUEsRUFBQUMsS0FBQSxJQUM1TCxTQUFBQyxHQUFBam1DLEVBQUFDLEdBQWlCQSxJQUFBaWxDLEdBQUFsbEMsS0FBQSxNQUFBQyxFQUFBNk0sVUFBQSxNQUFBN00sRUFBQXVnQywwQkFBQXJpQixFQUFBLE1BQUFuZSxFQUFBLFVBQUFDLEVBQUF1Z0MsMEJBQUEsTUFBQXZnQyxFQUFBNk0sVUFBQXFSLEVBQUEsdUJBQUFsZSxFQUFBdWdDLHlCQUFBLFdBQUF2Z0MsRUFBQXVnQyx5QkFBQXJpQixFQUFBLGFBQUFsZSxFQUFBNG5CLE9BQUEsaUJBQUE1bkIsRUFBQTRuQixPQUFBMUosRUFBQSxVQUNqQixTQUFBL0MsR0FBQXBiLEVBQUFDLEdBQWlCLFFBQUFELEVBQUEzQyxRQUFBLDRCQUFBNEMsRUFBQWltQyxHQUFvRCxPQUFBbG1DLEdBQVUsMEtBQWtMLGtCQUNqUSxTQUFBbW1DLEdBQUFubUMsRUFBQUMsR0FBcUUsSUFBQXBGLEVBQUFvaUMsR0FBcERqOUIsRUFBQSxJQUFBQSxFQUFBZ3VCLFVBQUEsS0FBQWh1QixFQUFBZ3VCLFNBQUFodUIsSUFBQWt5QixlQUFnRWp5QixFQUFBeWtCLEVBQUF6a0IsR0FBUSxRQUFBbkYsRUFBQSxFQUFZQSxFQUFBbUYsRUFBQXJELE9BQVc5QixJQUFBLENBQUssSUFBQW1ILEVBQUFoQyxFQUFBbkYsR0FBVyxJQUFBRCxFQUFBd0IsZUFBQTRGLEtBQUFwSCxFQUFBb0gsR0FBQSxDQUFnQyxPQUFBQSxHQUFVLGFBQUE0NkIsR0FBQSxTQUFBNzhCLEdBQTZCLE1BQU0sdUJBQUE2OEIsR0FBQSxRQUFBNzhCLEdBQXVDNjhCLEdBQUEsT0FBQTc4QixHQUFhbkYsRUFBQXVyQyxNQUFBLEVBQVV2ckMsRUFBQTBrQyxPQUFBLEVBQVcsTUFBTSx5QkFBQXRSLEdBQUFoc0IsSUFBQTQ2QixHQUFBNTZCLEVBQUFqQyxHQUEwQyxNQUFNLDZDQUFnRCxhQUFBb29CLEdBQUEvcUIsUUFBQTRFLElBQUFnZCxHQUFBaGQsRUFBQWpDLEdBQW1DbkYsRUFBQW9ILElBQUEsSUFBVSxTQUFBb2tDLE1BQWUsSUFBQUMsR0FBQSxLQUFBQyxHQUFBLEtBQ3hiLFNBQUFDLEdBQUF4bUMsRUFBQUMsR0FBaUIsT0FBQUQsR0FBVSw2REFBQUMsRUFBQXdtQyxVQUE2RSxTQUFTLFNBQUFDLEdBQUExbUMsRUFBQUMsR0FBaUIsbUJBQUFELEdBQUEsV0FBQUEsR0FBQSxhQUFBQSxHQUFBLGlCQUFBQyxFQUFBNk0sVUFBQSxpQkFBQTdNLEVBQUE2TSxVQUFBLGlCQUFBN00sRUFBQXVnQyx5QkFBQSxPQUFBdmdDLEVBQUF1Z0MseUJBQUEsTUFBQXZnQyxFQUFBdWdDLHdCQUFBbUcsT0FDbEksSUFBQUMsR0FBQSxtQkFBQUMsMkJBQUEsRUFBQUMsR0FBQSxtQkFBQUMsK0JBQUEsRUFBQUMsR0FBQTFyQyxFQUFBMnJDLDBCQUFBQyxHQUFBNXJDLEVBQUE2ckMsd0JBRTZDLFNBQUFDLEdBQUFwbkMsR0FBZSxJQUFBQSxJQUFBdzlCLFlBQW9CeDlCLEdBQUEsSUFBQUEsRUFBQWd1QixVQUFBLElBQUFodUIsRUFBQWd1QixVQUFrQ2h1QixJQUFBdzlCLFlBQWlCLE9BQUF4OUIsRUFBUyxTQUFBcW5DLEdBQUFybkMsR0FBZSxJQUFBQSxJQUFBcTlCLFdBQW1CcjlCLEdBQUEsSUFBQUEsRUFBQWd1QixVQUFBLElBQUFodUIsRUFBQWd1QixVQUFrQ2h1QixJQUFBdzlCLFlBQWlCLE9BQUF4OUIsRUFBUyxJQUFBc25DLElBQVEsSUFBQUMsR0FBQSxHQUFBQyxJQUFBLEVBQWdCLFNBQUFwb0IsR0FBQXBmLEdBQWMsRUFBQXduQyxLQUFBeG5DLEVBQUEyZixRQUFBNG5CLEdBQUFDLElBQUFELEdBQUFDLElBQUEsS0FBQUEsTUFBMEMsU0FBQW5vQixHQUFBcmYsRUFBQUMsR0FBcUJzbkMsS0FBTEMsSUFBS3huQyxFQUFBMmYsUUFBaUIzZixFQUFBMmYsUUFBQTFmLEVBQVksSUFBQXduQyxHQUFBLEdBQVNqb0IsR0FBQSxDQUFJRyxRQUFBOG5CLElBQVcvbkIsR0FBQSxDQUFJQyxTQUFBLEdBQVcrbkIsR0FBQUQsR0FDblosU0FBQUUsR0FBQTNuQyxFQUFBQyxHQUFpQixJQUFBcEYsRUFBQW1GLEVBQUF1UyxLQUFBUCxhQUEwQixJQUFBblgsRUFBQSxPQUFBNHNDLEdBQWdCLElBQUEzc0MsRUFBQWtGLEVBQUE2bEIsVUFBa0IsR0FBQS9xQixLQUFBOHNDLDhDQUFBM25DLEVBQUEsT0FBQW5GLEVBQUErc0MsMENBQTJHLElBQVE1ekIsRUFBUmhTLEVBQUEsR0FBVyxJQUFBZ1MsS0FBQXBaLEVBQUFvSCxFQUFBZ1MsR0FBQWhVLEVBQUFnVSxHQUFzSSxPQUFqSG5aLEtBQUFrRixJQUFBNmxCLFdBQUEraEIsNENBQUEzbkMsRUFBQUQsRUFBQTZuQywwQ0FBQTVsQyxHQUFpSEEsRUFBUyxTQUFBMmQsR0FBQTVmLEdBQW9DLGNBQXRCQSxJQUFBOFIsbUJBQWtELFNBQUFnMkIsR0FBQTluQyxHQUFlb2YsR0FBQU0sSUFBT04sR0FBQUksSUFBTyxTQUFBdW9CLEdBQUEvbkMsR0FBZW9mLEdBQUFNLElBQU9OLEdBQUFJLElBQ3JjLFNBQUF3b0IsR0FBQWhvQyxFQUFBQyxFQUFBcEYsR0FBbUIya0IsR0FBQUcsVUFBQThuQixJQUFBdHBCLEVBQUEsT0FBK0JrQixHQUFBRyxHQUFBdmYsR0FBU29mLEdBQUFLLEdBQUE3a0IsR0FBUyxTQUFBb3RDLEdBQUFqb0MsRUFBQUMsRUFBQXBGLEdBQW1CLElBQUFDLEVBQUFrRixFQUFBNmxCLFVBQXdDLEdBQXRCN2xCLEVBQUFDLEVBQUE2UixrQkFBc0IsbUJBQUFoWCxFQUFBb3RDLGdCQUFBLE9BQUFydEMsRUFBd0UsUUFBQW9ILEtBQXRCbkgsSUFBQW90QyxrQkFBc0JqbUMsS0FBQWpDLEdBQUFtZSxFQUFBLE1BQUEwUixHQUFBNXZCLElBQUEsVUFBQWdDLEdBQXlELE9BQUFoRyxFQUFBLEdBQVdwQixFQUFBQyxHQUFNLFNBQUFxdEMsR0FBQW5vQyxHQUFlLElBQUFDLEVBQUFELEVBQUE2bEIsVUFBOEcsT0FBNUY1bEIsT0FBQW1vQywyQ0FBQVgsR0FBcURDLEdBQUFsb0IsR0FBQUcsUUFBYU4sR0FBQUcsR0FBQXZmLEdBQVNvZixHQUFBSyxNQUFBQyxVQUFpQixFQUM5WSxTQUFBMG9CLEdBQUFyb0MsRUFBQUMsRUFBQXBGLEdBQW1CLElBQUFDLEVBQUFrRixFQUFBNmxCLFVBQWtCL3FCLEdBQUFxakIsRUFBQSxPQUFrQnRqQixHQUFBb0YsRUFBQWdvQyxHQUFBam9DLEVBQUFDLEVBQUF5bkMsSUFBQTVzQyxFQUFBc3RDLDBDQUFBbm9DLEVBQUFtZixHQUFBTSxJQUFBTixHQUFBSSxJQUFBSCxHQUFBRyxHQUFBdmYsSUFBQW1mLEdBQUFNLElBQTZGTCxHQUFBSyxHQUFBN2tCLEdBQVMsSUFBQXl0QyxHQUFBLEtBQUFDLEdBQUEsS0FBb0IsU0FBQUMsR0FBQXhvQyxHQUFlLGdCQUFBQyxHQUFtQixJQUFJLE9BQUFELEVBQUFDLEdBQVksTUFBQXBGLE1BRW5PLFNBQUE0dEMsR0FBQXpvQyxFQUFBQyxFQUFBcEYsRUFBQUMsR0FBcUJpQyxLQUFBc3BCLElBQUFybUIsRUFBV2pELEtBQUFoQixJQUFBbEIsRUFBV2tDLEtBQUFnNkIsUUFBQWg2QixLQUFBb1UsTUFBQXBVLEtBQUEycEIsT0FBQTNwQixLQUFBOG9CLFVBQUE5b0IsS0FBQXdWLEtBQUF4VixLQUFBMnJDLFlBQUEsS0FBbUYzckMsS0FBQXNCLE1BQUEsRUFBYXRCLEtBQUEyVSxJQUFBLEtBQWMzVSxLQUFBNHJDLGFBQUExb0MsRUFBb0JsRCxLQUFBNnJDLG9CQUFBN3JDLEtBQUE4ckMsY0FBQTlyQyxLQUFBK3JDLFlBQUEvckMsS0FBQWdzQyxjQUFBLEtBQXFGaHNDLEtBQUFwQixLQUFBYixFQUFZaUMsS0FBQTY1QixVQUFBLEVBQWlCNzVCLEtBQUFpc0MsV0FBQWpzQyxLQUFBa3NDLFlBQUFsc0MsS0FBQW1zQyxXQUFBLEtBQXNEbnNDLEtBQUFvc0Msb0JBQUFwc0MsS0FBQXFzQyxlQUFBLEVBQStDcnNDLEtBQUF3NUIsVUFBQSxLQUFvQixTQUFBMVcsR0FBQTdmLEVBQUFDLEVBQUFwRixFQUFBQyxHQUFvQixXQUFBMnRDLEdBQUF6b0MsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQzVhLFNBQUF1dUMsR0FBQXJwQyxHQUE2QixVQUFkQSxJQUFBNUQsYUFBYzRELEVBQUFzZixrQkFDN0IsU0FBQWdxQixHQUFBdHBDLEVBQUFDLEdBQWlCLElBQUFwRixFQUFBbUYsRUFBQXUyQixVQUNXLE9BRE8sT0FBQTE3QixNQUFBZ2xCLEdBQUE3ZixFQUFBcW1CLElBQUFwbUIsRUFBQUQsRUFBQWpFLElBQUFpRSxFQUFBckUsT0FBQStzQyxZQUFBMW9DLEVBQUEwb0MsWUFBQTd0QyxFQUFBMFgsS0FBQXZTLEVBQUF1UyxLQUFBMVgsRUFBQWdyQixVQUFBN2xCLEVBQUE2bEIsVUFBQWhyQixFQUFBMDdCLFVBQUF2MkIsSUFBQXUyQixVQUFBMTdCLE1BQUE4dEMsYUFBQTFvQyxFQUFBcEYsRUFBQSs3QixVQUFBLEVBQUEvN0IsRUFBQXF1QyxXQUFBLEtBQUFydUMsRUFBQW91QyxZQUFBLEtBQUFwdUMsRUFBQW11QyxXQUFBLE1BQTJObnVDLEVBQUFzdUMsb0JBQUFucEMsRUFBQW1wQyxvQkFBNEN0dUMsRUFBQXV1QyxlQUFBcHBDLEVBQUFvcEMsZUFBa0N2dUMsRUFBQXNXLE1BQUFuUixFQUFBbVIsTUFBZ0J0VyxFQUFBa3VDLGNBQUEvb0MsRUFBQStvQyxjQUFnQ2x1QyxFQUFBZ3VDLGNBQUE3b0MsRUFBQTZvQyxjQUFnQ2h1QyxFQUFBaXVDLFlBQUE5b0MsRUFBQThvQyxZQUE0Qmp1QyxFQUFBK3RDLG9CQUFBNW9DLEVBQUE0b0Msb0JBQTRDL3RDLEVBQUFrOEIsUUFBQS8yQixFQUFBKzJCLFFBQ3BlbDhCLEVBQUF3RCxNQUFBMkIsRUFBQTNCLE1BQWdCeEQsRUFBQTZXLElBQUExUixFQUFBMFIsSUFBWTdXLEVBQzVCLFNBQUEwdUMsR0FBQXZwQyxFQUFBQyxFQUFBcEYsRUFBQUMsRUFBQW1ILEVBQUFnUyxHQUF5QixJQUFBMkUsRUFBQSxFQUFZLEdBQUo5ZCxFQUFBa0YsRUFBSSxtQkFBQUEsRUFBQXFwQyxHQUFBcnBDLEtBQUE0WSxFQUFBLFFBQXNDLG9CQUFBNVksRUFBQTRZLEVBQUEsT0FBZ0M1WSxFQUFBLE9BQUFBLEdBQWlCLEtBQUFpdkIsR0FBQSxPQUFBdWEsR0FBQTN1QyxFQUFBaVMsU0FBQTdLLEVBQUFnUyxFQUFBaFUsR0FBb0MsS0FBQXF2QixHQUFBLE9BQUFtYSxHQUFBNXVDLEVBQUEsRUFBQW9ILEVBQUFnUyxFQUFBaFUsR0FBNkIsS0FBQWl2QixHQUFBLE9BQUF1YSxHQUFBNXVDLEVBQUEsRUFBQW9ILEVBQUFnUyxFQUFBaFUsR0FBNkIsS0FBQWt2QixHQUFBLE9BQUFudkIsRUFBQTZmLEdBQUEsR0FBQWhsQixFQUFBb0YsRUFBQSxFQUFBZ0MsSUFBQXltQyxZQUFBdlosR0FBQW52QixFQUFBdVMsS0FBQTRjLEdBQUFudkIsRUFBQW9wQyxlQUFBbjFCLEVBQUFqVSxFQUErRSxLQUFBd3ZCLEdBQUEsT0FBQXh2QixFQUFBNmYsR0FBQSxHQUFBaGxCLEVBQUFvRixFQUFBZ0MsSUFBQXltQyxZQUFBbFosR0FBQXh2QixFQUFBdVMsS0FBQWlkLEdBQUF4dkIsRUFBQW9wQyxlQUFBbjFCLEVBQUFqVSxFQUE2RSw0QkFBQUEsR0FBQSxPQUFBQSxFQUFBLE9BQUFBLEVBQUE2UyxVQUE0RCxLQUFBdWMsR0FBQXhXLEVBQUEsR0FBYSxNQUFBNVksRUFBUSxLQUFBcXZCLEdBQUF6VyxFQUFBLEVBQVksTUFBQTVZLEVBQVEsS0FBQXV2QixHQUFBM1csRUFBQSxHQUFhLE1BQUE1WSxFQUFRLEtBQUF5dkIsR0FBQTdXLEVBQ2hmLEdBQUcsTUFBQTVZLEVBQVEsS0FBQTB2QixHQUFBOVcsRUFBQSxHQUFhOWQsRUFBQSxLQUFPLE1BQUFrRixFQUFRbWUsRUFBQSxZQUFBbmUsYUFBQSxJQUF3RixPQUF6REMsRUFBQTRmLEdBQUFqSCxFQUFBL2QsRUFBQW9GLEVBQUFnQyxJQUFheW1DLFlBQUExb0MsRUFBZ0JDLEVBQUFzUyxLQUFBelgsRUFBU21GLEVBQUFtcEMsZUFBQW4xQixFQUFtQmhVLEVBQVMsU0FBQXVwQyxHQUFBeHBDLEVBQUFDLEVBQUFwRixFQUFBQyxHQUFxRCxPQUFoQ2tGLEVBQUE2ZixHQUFBLEVBQUE3ZixFQUFBbEYsRUFBQW1GLElBQWFtcEMsZUFBQXZ1QyxFQUFtQm1GLEVBQVMsU0FBQXlwQyxHQUFBenBDLEVBQUFDLEVBQUFwRixFQUFBQyxHQUFnRyxPQUEzRWtGLEVBQUE2ZixHQUFBLEVBQUE3ZixFQUFBbEYsRUFBQW1GLEdBQWFBLEVBQUEsTUFBQUEsR0FBQWl2QixHQUFBSSxHQUFrQnR2QixFQUFBMG9DLFlBQUF6b0MsRUFBZ0JELEVBQUF1UyxLQUFBdFMsRUFBU0QsRUFBQW9wQyxlQUFBdnVDLEVBQW1CbUYsRUFBUyxTQUFBMHBDLEdBQUExcEMsRUFBQUMsRUFBQXBGLEdBQXNELE9BQW5DbUYsRUFBQTZmLEdBQUEsRUFBQTdmLEVBQUEsS0FBQUMsSUFBZ0JtcEMsZUFBQXZ1QyxFQUFtQm1GLEVBQ3JXLFNBQUEycEMsR0FBQTNwQyxFQUFBQyxFQUFBcEYsR0FBc0wsT0FBbktvRixFQUFBNGYsR0FBQSxTQUFBN2YsRUFBQThNLFNBQUE5TSxFQUFBOE0sU0FBQSxHQUFBOU0sRUFBQWpFLElBQUFrRSxJQUErQ21wQyxlQUFBdnVDLEVBQW1Cb0YsRUFBQTRsQixVQUFBLENBQWEyVyxjQUFBeDhCLEVBQUF3OEIsY0FBQW9OLGdCQUFBLEtBQUFDLGVBQUE3cEMsRUFBQTZwQyxnQkFBb0Y1cEMsRUFBUyxTQUFBNnBDLEdBQUE5cEMsRUFBQUMsR0FBaUJELEVBQUErcEMsVUFBQSxFQUFjLElBQUFsdkMsRUFBQW1GLEVBQUFncUMsb0JBQTRCLElBQUFudkMsRUFBQW1GLEVBQUFncUMsb0JBQUFocUMsRUFBQWlxQyxrQkFBQWhxQyxFQUFBcEYsRUFBQW9GLEVBQUFELEVBQUFncUMsb0JBQUEvcEMsRUFBQUQsRUFBQWlxQyxrQkFBQWhxQyxJQUFBRCxFQUFBaXFDLGtCQUFBaHFDLEdBQTZIaXFDLEdBQUFqcUMsRUFBQUQsR0FFbFcsU0FBQW1xQyxHQUFBbnFDLEVBQUFDLEdBQWlCRCxFQUFBK3BDLFVBQUEsRUFBYy9wQyxFQUFBb3FDLGtCQUFBbnFDLElBQUFELEVBQUFvcUMsaUJBQUEsR0FBOEMsSUFBQXZ2QyxFQUFBbUYsRUFBQWdxQyxvQkFBQWx2QyxFQUFBa0YsRUFBQWlxQyxrQkFBa0RwdkMsSUFBQW9GLEVBQUFELEVBQUFncUMsb0JBQUFsdkMsSUFBQW1GLEVBQUFELEVBQUFpcUMsa0JBQUEsRUFBQW52QyxNQUFBbUYsSUFBQUQsRUFBQWlxQyxrQkFBQXB2QyxHQUF5RkEsRUFBQW1GLEVBQUFxcUMsc0JBQTBCdnZDLEVBQUFrRixFQUFBc3FDLG9CQUF3QixJQUFBenZDLEVBQUFtRixFQUFBcXFDLHNCQUFBcnFDLEVBQUFzcUMsb0JBQUFycUMsRUFBQXBGLEVBQUFvRixFQUFBRCxFQUFBcXFDLHNCQUFBcHFDLEVBQUFuRixFQUFBbUYsSUFBQUQsRUFBQXNxQyxvQkFBQXJxQyxHQUFtSGlxQyxHQUFBanFDLEVBQUFELEdBQ2xaLFNBQUF1cUMsR0FBQXZxQyxFQUFBQyxHQUFpQixJQUFBcEYsRUFBQW1GLEVBQUFncUMsb0JBQTRFLE9BQXRCbnZDLEVBQUFvRixNQUFBcEYsSUFBMUJtRixJQUFBcXFDLHVCQUFxQ3BxQyxNQUFBRCxHQUFXQyxFQUFTLFNBQUFpcUMsR0FBQWxxQyxFQUFBQyxHQUFpQixJQUFBcEYsRUFBQW9GLEVBQUFvcUMsc0JBQUF2dkMsRUFBQW1GLEVBQUFxcUMsb0JBQUFyb0MsRUFBQWhDLEVBQUErcEMsb0JBQUEvMUIsRUFBQWhVLEVBQUFtcUMsaUJBQStHLEtBQVpub0MsRUFBQSxJQUFBQSxJQUFBZ1MsS0FBWSxJQUFBalUsR0FBQWxGLEVBQUFrRixLQUFBaUMsRUFBQW5ILEdBQStCLEtBQUprRixFQUFBaUMsSUFBSXBILEVBQUFtRixNQUFBbkYsR0FBa0JvRixFQUFBdXFDLDJCQUFBdm9DLEVBQStCaEMsRUFBQW1wQyxlQUFBcHBDLEVBQW1CLFNBQUE4ZixHQUFBOWYsRUFBQUMsR0FBZ0IsR0FBQUQsS0FBQWlTLGFBQWlELFFBQUFwWCxLQUEzQm9GLEVBQUFoRSxFQUFBLEdBQU1nRSxHQUFJRCxJQUFBaVMsa0JBQWlCLElBQUFoUyxFQUFBcEYsS0FBQW9GLEVBQUFwRixHQUFBbUYsRUFBQW5GLElBQTBDLE9BQUFvRixFQUN6RixJQUFBd3FDLElBQUEsSUFBQW5zQixFQUFBdFIsV0FBQWtTLEtBQzNWLFNBQUF3ckIsR0FBQTFxQyxFQUFBQyxFQUFBcEYsRUFBQUMsR0FBZ0RELEVBQUEsT0FBVEEsSUFBQUMsRUFBbEJtRixFQUFBRCxFQUFBNm9DLGdCQUEyQjVvQyxFQUFBaEUsRUFBQSxHQUE2QmdFLEVBQUFwRixHQUFNbUYsRUFBQTZvQyxjQUFBaHVDLEVBQWtDLFFBQWhCQyxFQUFBa0YsRUFBQThvQyxjQUFnQixJQUFBOW9DLEVBQUFvcEMsaUJBQUF0dUMsRUFBQTZ2QyxVQUFBOXZDLEdBQ3JILElBQUErdkMsR0FBQSxDQUFRaHNCLFVBQUEsU0FBQTVlLEdBQXNCLFNBQUFBLElBQUE2cUMsc0JBQUEsSUFBQWxVLEdBQUEzMkIsSUFBNkMrZSxnQkFBQSxTQUFBL2UsRUFBQUMsRUFBQXBGLEdBQWlDbUYsSUFBQTZxQyxvQkFBd0IsSUFBQS92QyxFQUFBZ3dDLEtBQXFCN29DLEVBQUE4b0MsR0FBVmp3QyxFQUFBa3dDLEdBQUFsd0MsRUFBQWtGLElBQXNCaUMsRUFBQWdwQyxRQUFBaHJDLEVBQVksTUFBQXBGLElBQUFvSCxFQUFBVyxTQUFBL0gsR0FBcUNxd0MsS0FBS0MsR0FBQW5yQyxFQUFBaUMsR0FBUW1wQyxHQUFBcHJDLEVBQUFsRixJQUFRZ2tCLG9CQUFBLFNBQUE5ZSxFQUFBQyxFQUFBcEYsR0FBcUNtRixJQUFBNnFDLG9CQUF3QixJQUFBL3ZDLEVBQUFnd0MsS0FBcUI3b0MsRUFBQThvQyxHQUFWandDLEVBQUFrd0MsR0FBQWx3QyxFQUFBa0YsSUFBc0JpQyxFQUFBb2tCLElBQUFnbEIsR0FBU3BwQyxFQUFBZ3BDLFFBQUFockMsRUFBWSxNQUFBcEYsSUFBQW9ILEVBQUFXLFNBQUEvSCxHQUFxQ3F3QyxLQUFLQyxHQUFBbnJDLEVBQUFpQyxHQUFRbXBDLEdBQUFwckMsRUFBQWxGLElBQVErakIsbUJBQUEsU0FBQTdlLEVBQUFDLEdBQWtDRCxJQUFBNnFDLG9CQUF3QixJQUFBaHdDLEVBQUFpd0MsS0FBcUJod0MsRUFBQWl3QyxHQUFWbHdDLEVBQUFtd0MsR0FBQW53QyxFQUFBbUYsSUFBc0JsRixFQUFBdXJCLElBQ25maWxCLEdBQUcsTUFBQXJyQyxJQUFBbkYsRUFBQThILFNBQUEzQyxHQUFxQ2lyQyxLQUFLQyxHQUFBbnJDLEVBQUFsRixHQUFRc3dDLEdBQUFwckMsRUFBQW5GLEtBQVUsU0FBQTB3QyxHQUFBdnJDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsRUFBQWdTLEVBQUEyRSxHQUF5Qyx5QkFBZDVZLElBQUE2bEIsV0FBYzJsQixzQkFBQXhyQyxFQUFBd3JDLHNCQUFBMXdDLEVBQUFtWixFQUFBMkUsSUFBQTNZLEVBQUE3RCxZQUFBNkQsRUFBQTdELFVBQUFxakIsd0JBQUFpWCxHQUFBNzdCLEVBQUFDLEtBQUE0N0IsR0FBQXowQixFQUFBZ1MsSUFDeEcsU0FBQXczQixHQUFBenJDLEVBQUFDLEVBQUFwRixHQUFtQixJQUFBQyxHQUFBLEVBQUFtSCxFQUFBd2xDLEdBQWN4ekIsRUFBQWhVLEVBQUE4UixZQUFxWCxNQUFqVyxpQkFBQWtDLEdBQUEsT0FBQUEsSUFBQWdNLEdBQUFoTSxJQUFBaFMsRUFBQTJkLEdBQUEzZixHQUFBeW5DLEdBQUFsb0IsR0FBQUcsUUFBQTFMLEdBQUFuWixFQUFBLE9BQUFBLEVBQUFtRixFQUFBK1IsZUFBQTIxQixHQUFBM25DLEVBQUFpQyxHQUFBd2xDLElBQWtIeG5DLEVBQUEsSUFBQUEsRUFBQXBGLEVBQUFvWixHQUFhalUsRUFBQTZvQyxjQUFBLE9BQUE1b0MsRUFBQXlCLFlBQUEsSUFBQXpCLEVBQUF5QixNQUFBekIsRUFBQXlCLE1BQUEsS0FBOER6QixFQUFBa2YsUUFBQXlyQixHQUFhNXFDLEVBQUE2bEIsVUFBQTVsQixFQUFjQSxFQUFBNHFDLG9CQUFBN3FDLEVBQXdCbEYsS0FBQWtGLElBQUE2bEIsV0FBQStoQiw0Q0FBQTNsQyxFQUFBakMsRUFBQTZuQywwQ0FBQTV6QixHQUFpSGhVLEVBQ3RaLFNBQUF5ckMsR0FBQTFyQyxFQUFBQyxFQUFBcEYsRUFBQUMsR0FBcUJrRixFQUFBQyxFQUFBeUIsTUFBVSxtQkFBQXpCLEVBQUEwckMsMkJBQUExckMsRUFBQTByQywwQkFBQTl3QyxFQUFBQyxHQUFrRixtQkFBQW1GLEVBQUEyckMsa0NBQUEzckMsRUFBQTJyQyxpQ0FBQS93QyxFQUFBQyxHQUFnR21GLEVBQUF5QixRQUFBMUIsR0FBQTRxQyxHQUFBOXJCLG9CQUFBN2UsSUFBQXlCLE1BQUEsTUFDak4sU0FBQW1xQyxHQUFBN3JDLEVBQUFDLEVBQUFwRixFQUFBQyxHQUFxQixJQUFBbUgsRUFBQWpDLEVBQUE2bEIsVUFBa0I1akIsRUFBQW9DLE1BQUF4SixFQUFVb0gsRUFBQVAsTUFBQTFCLEVBQUE2b0MsY0FBd0I1bUMsRUFBQWlkLEtBQUF1ckIsR0FBVSxJQUFBeDJCLEVBQUFoVSxFQUFBOFIsWUFBb0IsaUJBQUFrQyxHQUFBLE9BQUFBLEVBQUFoUyxFQUFBOEksUUFBQWtWLEdBQUFoTSxNQUFBMkwsR0FBQTNmLEdBQUF5bkMsR0FBQWxvQixHQUFBRyxRQUFBMWQsRUFBQThJLFFBQUE0OEIsR0FBQTNuQyxFQUFBaVUsSUFBcUcsUUFBaEJBLEVBQUFqVSxFQUFBOG9DLGVBQWdCZ0QsR0FBQTlyQyxFQUFBaVUsRUFBQXBaLEVBQUFvSCxFQUFBbkgsR0FBQW1ILEVBQUFQLE1BQUExQixFQUFBNm9DLGVBQStFLG1CQUE3QjUwQixFQUFBaFUsRUFBQW1TLDRCQUE2QnM0QixHQUFBMXFDLEVBQUFDLEVBQUFnVSxFQUFBcFosR0FBQW9ILEVBQUFQLE1BQUExQixFQUFBNm9DLGVBQTZELG1CQUFBNW9DLEVBQUFtUywwQkFBQSxtQkFBQW5RLEVBQUE4cEMseUJBQUEsbUJBQUE5cEMsRUFBQStwQywyQkFBQSxtQkFDeFYvcEMsRUFBQWdxQyxxQkFBQWhzQyxFQUFBZ0MsRUFBQVAsTUFBQSxtQkFBQU8sRUFBQWdxQyxvQkFBQWhxQyxFQUFBZ3FDLHFCQUFBLG1CQUFBaHFDLEVBQUErcEMsMkJBQUEvcEMsRUFBQStwQyw0QkFBQS9yQyxJQUFBZ0MsRUFBQVAsT0FBQWtwQyxHQUFBOXJCLG9CQUFBN2MsSUFBQVAsTUFBQSxjQUFBdVMsRUFBQWpVLEVBQUE4b0MsZUFBQWdELEdBQUE5ckMsRUFBQWlVLEVBQUFwWixFQUFBb0gsRUFBQW5ILEdBQUFtSCxFQUFBUCxNQUFBMUIsRUFBQTZvQyxnQkFBK1MsbUJBQUE1bUMsRUFBQTBLLG9CQUFBM00sRUFBQTQyQixXQUFBLEdBQTBELElBQUFzVixHQUFBaHNDLE1BQUFDLFFBQ3pXLFNBQUFnc0MsR0FBQW5zQyxFQUFBQyxFQUFBcEYsR0FBMkIsV0FBUm1GLEVBQUFuRixFQUFBNlcsTUFBUSxtQkFBQTFSLEdBQUEsaUJBQUFBLEVBQUEsQ0FBeUQsR0FBQW5GLEVBQUFxbEIsT0FBQSxDQUFhcmxCLElBQUFxbEIsT0FBVyxJQUFBcGxCLE9BQUEsRUFBYUQsSUFBQSxJQUFBQSxFQUFBd3JCLEtBQUFsSSxFQUFBLE9BQUFyakIsRUFBQUQsRUFBQWdyQixXQUE2Qy9xQixHQUFBcWpCLEVBQUEsTUFBQW5lLEdBQW9CLElBQUFpQyxFQUFBLEdBQUFqQyxFQUFXLGNBQUFDLEdBQUEsT0FBQUEsRUFBQXlSLEtBQUEsbUJBQUF6UixFQUFBeVIsS0FBQXpSLEVBQUF5UixJQUFBMDZCLGFBQUFucUMsRUFBQWhDLEVBQUF5UixNQUF3RnpSLEVBQUEsU0FBQUQsR0FBYyxJQUFBQyxFQUFBbkYsRUFBQW9rQixLQUFhamYsSUFBQXdxQyxLQUFBeHFDLEVBQUFuRixFQUFBb2tCLEtBQUEsSUFBc0IsT0FBQWxmLFNBQUFDLEVBQUFnQyxHQUFBaEMsRUFBQWdDLEdBQUFqQyxJQUE2Qm9zQyxXQUFBbnFDLEVBQWVoQyxHQUFTLGlCQUFBRCxHQUFBbWUsRUFBQSxPQUFvQ3RqQixFQUFBcWxCLFFBQUEvQixFQUFBLE1BQUFuZSxHQUEyQixPQUFBQSxFQUNsYyxTQUFBcXNDLEdBQUFyc0MsRUFBQUMsR0FBaUIsYUFBQUQsRUFBQXVTLE1BQUE0TCxFQUFBLHlCQUFBampCLE9BQUFrQixVQUFBdUosU0FBQWhMLEtBQUFzRixHQUFBLHFCQUFxRy9FLE9BQUFrQyxLQUFBNkMsR0FBQVIsS0FBQSxVQUE4QlEsRUFBQSxJQUNwSixTQUFBcXNDLEdBQUF0c0MsR0FBZSxTQUFBQyxJQUFBcEYsR0FBZ0IsR0FBQW1GLEVBQUEsQ0FBTSxJQUFBbEYsRUFBQW1GLEVBQUErb0MsV0FBbUIsT0FBQWx1QyxLQUFBb3VDLFdBQUFydUMsRUFBQW9GLEVBQUErb0MsV0FBQW51QyxHQUFBb0YsRUFBQWdwQyxZQUFBaHBDLEVBQUErb0MsV0FBQW51QyxFQUFzRUEsRUFBQXF1QyxXQUFBLEtBQWtCcnVDLEVBQUErN0IsVUFBQSxHQUFlLFNBQUEvN0IsSUFBQUMsR0FBZ0IsSUFBQWtGLEVBQUEsWUFBa0IsS0FBSyxPQUFBbEYsR0FBU21GLEVBQUFwRixFQUFBQyxPQUFBaThCLFFBQW9CLFlBQVksU0FBQWo4QixFQUFBa0YsRUFBQUMsR0FBZ0IsSUFBQUQsRUFBQSxJQUFBdXNDLElBQWMsT0FBQXRzQyxHQUFTLE9BQUFBLEVBQUFsRSxJQUFBaUUsRUFBQXN1QixJQUFBcnVCLEVBQUFsRSxJQUFBa0UsR0FBQUQsRUFBQXN1QixJQUFBcnVCLEVBQUE1QixNQUFBNEIsT0FBQTgyQixRQUEwRCxPQUFBLzJCLEVBQVMsU0FBQWlDLEVBQUFqQyxFQUFBQyxFQUFBcEYsR0FBdUQsT0FBckNtRixFQUFBc3BDLEdBQUF0cEMsRUFBQUMsSUFBWTVCLE1BQUEsRUFBVTJCLEVBQUErMkIsUUFBQSxLQUFlLzJCLEVBQVMsU0FBQWlVLEVBQUFoVSxFQUFBcEYsRUFBQUMsR0FBNEIsT0FBVm1GLEVBQUE1QixNQUFBdkQsRUFBVWtGLEVBQTZCLFFBQWRsRixFQUFBbUYsRUFBQXMyQixZQUFjejdCLElBQUF1RCxPQUFBeEQsR0FBQW9GLEVBQUEyMkIsVUFDbGQsRUFBQS83QixHQUFBQyxHQUFPbUYsRUFBQTIyQixVQUFBLEVBQWMvN0IsR0FEZ2FBLEVBQ3ZaLFNBQUErZCxFQUFBM1ksR0FBcUQsT0FBdkNELEdBQUEsT0FBQUMsRUFBQXMyQixZQUFBdDJCLEVBQUEyMkIsVUFBQSxHQUF1QzMyQixFQUFTLFNBQUF5ZSxFQUFBMWUsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQW9CLGNBQUFtRixHQUFBLElBQUFBLEVBQUFvbUIsTUFBQXBtQixFQUFBeXBDLEdBQUE3dUMsRUFBQW1GLEVBQUFyRSxLQUFBYixJQUFBNHJCLE9BQUExbUIsRUFBQUMsS0FBNERBLEVBQUFnQyxFQUFBaEMsRUFBQXBGLElBQVc2ckIsT0FBQTFtQixFQUFXQyxHQUFTLFNBQUF4RixFQUFBdUYsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQW9CLGNBQUFtRixLQUFBeW9DLGNBQUE3dEMsRUFBQTBYLE9BQUF6WCxFQUFBbUgsRUFBQWhDLEVBQUFwRixFQUFBd0osUUFBQXFOLElBQUF5NkIsR0FBQW5zQyxFQUFBQyxFQUFBcEYsR0FBQUMsRUFBQTRyQixPQUFBMW1CLEVBQUFsRixLQUF5RkEsRUFBQXl1QyxHQUFBMXVDLEVBQUEwWCxLQUFBMVgsRUFBQWtCLElBQUFsQixFQUFBd0osTUFBQSxLQUFBckUsRUFBQXJFLEtBQUFiLElBQXlDNFcsSUFBQXk2QixHQUFBbnNDLEVBQUFDLEVBQUFwRixHQUFnQkMsRUFBQTRyQixPQUFBMW1CLEVBQVdsRixHQUFTLFNBQUF3RCxFQUFBMEIsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQW9CLGNBQUFtRixHQUFBLElBQUFBLEVBQUFvbUIsS0FBQXBtQixFQUFBNGxCLFVBQUEyVyxnQkFBQTNoQyxFQUFBMmhDLGVBQUF2OEIsRUFBQTRsQixVQUFBZ2tCLGlCQUN6Wmh2QyxFQUFBZ3ZDLGlCQUFBNXBDLEVBQUEwcEMsR0FBQTl1QyxFQUFBbUYsRUFBQXJFLEtBQUFiLElBQUE0ckIsT0FBQTFtQixFQUFBQyxLQUFzREEsRUFBQWdDLEVBQUFoQyxFQUFBcEYsRUFBQWlTLFVBQUEsS0FBd0I0WixPQUFBMW1CLEVBQVdDLEdBQVMsU0FBQXJGLEVBQUFvRixFQUFBQyxFQUFBcEYsRUFBQUMsRUFBQW1aLEdBQXNCLGNBQUFoVSxHQUFBLElBQUFBLEVBQUFvbUIsTUFBQXBtQixFQUFBdXBDLEdBQUEzdUMsRUFBQW1GLEVBQUFyRSxLQUFBYixFQUFBbVosSUFBQXlTLE9BQUExbUIsRUFBQUMsS0FBOERBLEVBQUFnQyxFQUFBaEMsRUFBQXBGLElBQVc2ckIsT0FBQTFtQixFQUFXQyxHQUFTLFNBQUEzRCxFQUFBMEQsRUFBQUMsRUFBQXBGLEdBQWtCLG9CQUFBb0YsR0FBQSxpQkFBQUEsRUFBQSxPQUFBQSxFQUFBeXBDLEdBQUEsR0FBQXpwQyxFQUFBRCxFQUFBckUsS0FBQWQsSUFBQTZyQixPQUFBMW1CLEVBQUFDLEVBQW9GLG9CQUFBQSxHQUFBLE9BQUFBLEVBQUEsQ0FBa0MsT0FBQUEsRUFBQTRTLFVBQW1CLEtBQUFrYyxHQUFBLE9BQUFsMEIsRUFBQTB1QyxHQUFBdHBDLEVBQUFzUyxLQUFBdFMsRUFBQWxFLElBQUFrRSxFQUFBb0UsTUFBQSxLQUFBckUsRUFBQXJFLEtBQUFkLElBQUE2VyxJQUFBeTZCLEdBQUFuc0MsRUFBQSxLQUFBQyxHQUFBcEYsRUFBQTZyQixPQUFBMW1CLEVBQUFuRixFQUF3RixLQUFBbTBCLEdBQUEsT0FBQS91QixFQUFBMHBDLEdBQUExcEMsRUFBQUQsRUFBQXJFLEtBQUFkLElBQUE2ckIsT0FBQTFtQixFQUFBQyxFQUE2QyxHQUFBaXNDLEdBQUFqc0MsSUFDcmYydkIsR0FBQTN2QixHQUFBLE9BQUFBLEVBQUF1cEMsR0FBQXZwQyxFQUFBRCxFQUFBckUsS0FBQWQsRUFBQSxPQUFBNnJCLE9BQUExbUIsRUFBQUMsRUFBZ0Rvc0MsR0FBQXJzQyxFQUFBQyxHQUFRLFlBQVksU0FBQXZFLEVBQUFzRSxFQUFBQyxFQUFBcEYsRUFBQUMsR0FBb0IsSUFBQW1ILEVBQUEsT0FBQWhDLElBQUFsRSxJQUFBLEtBQTBCLG9CQUFBbEIsR0FBQSxpQkFBQUEsRUFBQSxjQUFBb0gsRUFBQSxLQUFBeWMsRUFBQTFlLEVBQUFDLEVBQUEsR0FBQXBGLEVBQUFDLEdBQStFLG9CQUFBRCxHQUFBLE9BQUFBLEVBQUEsQ0FBa0MsT0FBQUEsRUFBQWdZLFVBQW1CLEtBQUFrYyxHQUFBLE9BQUFsMEIsRUFBQWtCLE1BQUFrRyxFQUFBcEgsRUFBQTBYLE9BQUEwYyxHQUFBcjBCLEVBQUFvRixFQUFBQyxFQUFBcEYsRUFBQXdKLE1BQUF5SSxTQUFBaFMsRUFBQW1ILEdBQUF4SCxFQUFBdUYsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQUEsS0FBaUYsS0FBQWswQixHQUFBLE9BQUFuMEIsRUFBQWtCLE1BQUFrRyxFQUFBM0QsRUFBQTBCLEVBQUFDLEVBQUFwRixFQUFBQyxHQUFBLEtBQXlDLEdBQUFveEMsR0FBQXJ4QyxJQUFBKzBCLEdBQUEvMEIsR0FBQSxjQUFBb0gsRUFBQSxLQUFBckgsRUFBQW9GLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBLE1BQXFEdXhDLEdBQUFyc0MsRUFBQW5GLEdBQVEsWUFBWSxTQUFBMmpCLEVBQUF4ZSxFQUFBQyxFQUFBcEYsRUFBQUMsRUFBQW1ILEdBQXNCLG9CQUFBbkgsR0FBQSxpQkFBQUEsRUFBQSxPQUMvYzRqQixFQUFBemUsRUFEK2NELEVBQy9jQSxFQUFBM0UsSUFBQVIsSUFBQSxRQUFBQyxFQUFBbUgsR0FBNkIsb0JBQUFuSCxHQUFBLE9BQUFBLEVBQUEsQ0FBa0MsT0FBQUEsRUFBQStYLFVBQW1CLEtBQUFrYyxHQUFBLE9BQUEvdUIsSUFBQTNFLElBQUEsT0FBQVAsRUFBQWlCLElBQUFsQixFQUFBQyxFQUFBaUIsTUFBQSxLQUFBakIsRUFBQXlYLE9BQUEwYyxHQUFBcjBCLEVBQUFxRixFQUFBRCxFQUFBbEYsRUFBQXVKLE1BQUF5SSxTQUFBN0ssRUFBQW5ILEVBQUFpQixLQUFBdEIsRUFBQXdGLEVBQUFELEVBQUFsRixFQUFBbUgsR0FBMEcsS0FBQStzQixHQUFBLE9BQUExd0IsRUFBQTJCLEVBQUFELElBQUEzRSxJQUFBLE9BQUFQLEVBQUFpQixJQUFBbEIsRUFBQUMsRUFBQWlCLE1BQUEsS0FBQWpCLEVBQUFtSCxHQUE4RCxHQUFBaXFDLEdBQUFweEMsSUFBQTgwQixHQUFBOTBCLEdBQUEsT0FBQUYsRUFBQXFGLEVBQUFELElBQUEzRSxJQUFBUixJQUFBLEtBQUFDLEVBQUFtSCxFQUFBLE1BQXdEb3FDLEdBQUFwc0MsRUFBQW5GLEdBQVEsWUFBWSxTQUFBbWpCLEVBQUFoYyxFQUFBMlcsRUFBQThGLEVBQUFwZ0IsR0FBb0IsUUFBQTdELEVBQUEsS0FBQUcsRUFBQSxLQUFBbWpCLEVBQUFuRixFQUFBb0YsRUFBQXBGLEVBQUEsRUFBQTZGLEVBQUEsS0FBdUMsT0FBQVYsR0FBQUMsRUFBQVUsRUFBQTloQixPQUFxQm9oQixJQUFBLENBQUtELEVBQUExZixNQUFBMmYsR0FBQVMsRUFBQVYsSUFBQSxNQUFBVSxFQUFBVixFQUFBZ1osUUFBbUMsSUFBQTdZLEVBQUF4aUIsRUFBQXVHLEVBQUE4YixFQUFBVyxFQUFBVixHQUFBMWYsR0FBb0IsVUFBQTRmLEVBQUEsQ0FBYSxPQUFBSCxNQUFBVSxHQUFnQixNQUFNemUsR0FDcmYrZCxHQUFBLE9BQUFHLEVBQUFxWSxXQUFBdDJCLEVBQUFnQyxFQUFBOGIsR0FBOEJuRixFQUFBM0UsRUFBQWlLLEVBQUF0RixFQUFBb0YsR0FBVyxPQUFBcGpCLEVBQUFILEVBQUF5akIsRUFBQXRqQixFQUFBbThCLFFBQUE3WSxFQUF5QnRqQixFQUFBc2pCLEVBQUlILEVBQUFVLEVBQUksR0FBQVQsSUFBQVUsRUFBQTloQixPQUFBLE9BQUEvQixFQUFBb0gsRUFBQThiLEdBQUF0akIsRUFBZ0MsVUFBQXNqQixFQUFBLENBQWEsS0FBS0MsRUFBQVUsRUFBQTloQixPQUFXb2hCLEtBQUFELEVBQUF6aEIsRUFBQTJGLEVBQUF5YyxFQUFBVixHQUFBMWYsTUFBQXNhLEVBQUEzRSxFQUFBOEosRUFBQW5GLEVBQUFvRixHQUFBLE9BQUFwakIsRUFBQUgsRUFBQXNqQixFQUFBbmpCLEVBQUFtOEIsUUFBQWhaLEVBQUFuakIsRUFBQW1qQixHQUE2RCxPQUFBdGpCLEVBQVMsSUFBQXNqQixFQUFBampCLEVBQUFtSCxFQUFBOGIsR0FBYUMsRUFBQVUsRUFBQTloQixPQUFXb2hCLEtBQUFTLEVBQUFELEVBQUFULEVBQUE5YixFQUFBK2IsRUFBQVUsRUFBQVYsR0FBQTFmLE1BQUEwQixHQUFBLE9BQUF5ZSxFQUFBOFgsV0FBQXhZLEVBQUF5dUIsT0FBQSxPQUFBL3RCLEVBQUExaUIsSUFBQWlpQixFQUFBUyxFQUFBMWlCLEtBQUE2YyxFQUFBM0UsRUFBQXdLLEVBQUE3RixFQUFBb0YsR0FBQSxPQUFBcGpCLEVBQUFILEVBQUFna0IsRUFBQTdqQixFQUFBbThCLFFBQUF0WSxFQUFBN2pCLEVBQUE2akIsR0FBZ0ssT0FBekN6ZSxHQUFBK2QsRUFBQXhhLFFBQUEsU0FBQXZELEdBQXlCLE9BQUFDLEVBQUFnQyxFQUFBakMsS0FBZ0J2RixFQUFTLFNBQUFnbUIsRUFBQXhlLEVBQUEyVyxFQUFBOEYsRUFBQXBnQixHQUFvQixJQUFBN0QsRUFBQW0xQixHQUFBbFIsR0FBWSxtQkFBQWprQixHQUFBMGpCLEVBQUEsT0FBa0QsT0FBWk8sRUFBQWprQixFQUFBRSxLQUFBK2pCLEtBQVlQLEVBQUEsT0FDaGUsUUFBQXZqQixFQUFBSCxFQUFBLEtBQUFzakIsRUFBQW5GLEVBQUFvRixFQUFBcEYsRUFBQSxFQUFBNkYsRUFBQSxLQUFBUCxFQUFBUSxFQUFBcEksT0FBNkMsT0FBQXlILElBQUFHLEVBQUEyQyxLQUFrQjdDLElBQUFFLEVBQUFRLEVBQUFwSSxPQUFBLENBQWdCeUgsRUFBQTFmLE1BQUEyZixHQUFBUyxFQUFBVixJQUFBLE1BQUFVLEVBQUFWLEVBQUFnWixRQUFtQyxJQUFBOVksRUFBQXZpQixFQUFBdUcsRUFBQThiLEVBQUFHLEVBQUF6aUIsTUFBQTZDLEdBQXVCLFVBQUEyZixFQUFBLENBQWFGLE1BQUFVLEdBQVMsTUFBTXplLEdBQUErZCxHQUFBLE9BQUFFLEVBQUFzWSxXQUFBdDJCLEVBQUFnQyxFQUFBOGIsR0FBaUNuRixFQUFBM0UsRUFBQWdLLEVBQUFyRixFQUFBb0YsR0FBVyxPQUFBcGpCLEVBQUFILEVBQUF3akIsRUFBQXJqQixFQUFBbThCLFFBQUE5WSxFQUF5QnJqQixFQUFBcWpCLEVBQUlGLEVBQUFVLEVBQUksR0FBQVAsRUFBQTJDLEtBQUEsT0FBQWhtQixFQUFBb0gsRUFBQThiLEdBQUF0akIsRUFBMEIsVUFBQXNqQixFQUFBLENBQWEsTUFBS0csRUFBQTJDLEtBQVE3QyxJQUFBRSxFQUFBUSxFQUFBcEksT0FBQSxRQUFBNEgsRUFBQTVoQixFQUFBMkYsRUFBQWljLEVBQUF6aUIsTUFBQTZDLE1BQUFzYSxFQUFBM0UsRUFBQWlLLEVBQUF0RixFQUFBb0YsR0FBQSxPQUFBcGpCLEVBQUFILEVBQUF5akIsRUFBQXRqQixFQUFBbThCLFFBQUE3WSxFQUFBdGpCLEVBQUFzakIsR0FBb0YsT0FBQXpqQixFQUFTLElBQUFzakIsRUFBQWpqQixFQUFBbUgsRUFBQThiLElBQWFHLEVBQUEyQyxLQUFRN0MsSUFBQUUsRUFBQVEsRUFBQXBJLE9BQUEsUUFBQTRILEVBQUFNLEVBQUFULEVBQUE5YixFQUFBK2IsRUFBQUUsRUFBQXppQixNQUFBNkMsTUFBQTBCLEdBQUEsT0FBQWtlLEVBQUFxWSxXQUFBeFksRUFBQXl1QixPQUFBLE9BQUF0dUIsRUFBQW5pQixJQUFBaWlCLEVBQ3haRSxFQUFBbmlCLEtBQUE2YyxFQUFBM0UsRUFBQWlLLEVBQUF0RixFQUFBb0YsR0FBQSxPQUFBcGpCLEVBQUFILEVBQUF5akIsRUFBQXRqQixFQUFBbThCLFFBQUE3WSxFQUFBdGpCLEVBQUFzakIsR0FBeUYsT0FBekNsZSxHQUFBK2QsRUFBQXhhLFFBQUEsU0FBQXZELEdBQXlCLE9BQUFDLEVBQUFnQyxFQUFBakMsS0FBZ0J2RixFQUFTLGdCQUFBdUYsRUFBQWxGLEVBQUFtWixFQUFBeUssR0FBeUIsSUFBQXBnQixFQUFBLGlCQUFBMlYsR0FBQSxPQUFBQSxLQUFBMUIsT0FBQTBjLElBQUEsT0FBQWhiLEVBQUFsWSxJQUErRHVDLElBQUEyVixJQUFBNVAsTUFBQXlJLFVBQXdCLElBQUFyUyxFQUFBLGlCQUFBd1osR0FBQSxPQUFBQSxFQUFvQyxHQUFBeFosRUFBQSxPQUFBd1osRUFBQXBCLFVBQXdCLEtBQUFrYyxHQUFBL3VCLEVBQUEsQ0FBbUIsSUFBUnZGLEVBQUF3WixFQUFBbFksSUFBUXVDLEVBQUF4RCxFQUFRLE9BQUF3RCxHQUFTLENBQUUsR0FBQUEsRUFBQXZDLE1BQUF0QixFQUFBLFFBQUE2RCxFQUFBK25CLElBQUFwUyxFQUFBMUIsT0FBQTBjLEdBQUEzd0IsRUFBQW9xQyxjQUFBejBCLEVBQUExQixLQUFBLENBQThEMVgsRUFBQW1GLEVBQUExQixFQUFBeTRCLFVBQWVqOEIsRUFBQW1ILEVBQUEzRCxFQUFBMlYsRUFBQTFCLE9BQUEwYyxHQUFBaGIsRUFBQTVQLE1BQUF5SSxTQUFBbUgsRUFBQTVQLFFBQThDcU4sSUFBQXk2QixHQUFBbnNDLEVBQUExQixFQUFBMlYsR0FBZ0JuWixFQUFBNHJCLE9BQUExbUIsRUFBV0EsRUFBQWxGLEVBQUksTUFBQWtGLEVBQWFuRixFQUFBbUYsRUFBQTFCLEdBQU8sTUFBTTJCLEVBQUFELEVBQUExQixHQUFZQSxFQUNwZkEsRUFBQXk0QixRQUFVOWlCLEVBQUExQixPQUFBMGMsS0FBQW4wQixFQUFBMHVDLEdBQUF2MUIsRUFBQTVQLE1BQUF5SSxTQUFBOU0sRUFBQXJFLEtBQUEraUIsRUFBQXpLLEVBQUFsWSxNQUFBMnFCLE9BQUExbUIsSUFBQWxGLEtBQUE0akIsRUFBQTZxQixHQUFBdDFCLEVBQUExQixLQUFBMEIsRUFBQWxZLElBQUFrWSxFQUFBNVAsTUFBQSxLQUFBckUsRUFBQXJFLEtBQUEraUIsSUFBQWhOLElBQUF5NkIsR0FBQW5zQyxFQUFBbEYsRUFBQW1aLEdBQUF5SyxFQUFBZ0ksT0FBQTFtQixJQUFBMGUsR0FBNkksT0FBQTlGLEVBQUE1WSxHQUFZLEtBQUFndkIsR0FBQWh2QixFQUFBLENBQVcsSUFBQTFCLEVBQUEyVixFQUFBbFksSUFBWSxPQUFBakIsR0FBUyxDQUFFLEdBQUFBLEVBQUFpQixNQUFBdUMsRUFBQSxRQUFBeEQsRUFBQXVyQixLQUFBdnJCLEVBQUErcUIsVUFBQTJXLGdCQUFBdm9CLEVBQUF1b0IsZUFBQTFoQyxFQUFBK3FCLFVBQUFna0IsaUJBQUE1MUIsRUFBQTQxQixlQUFBLENBQXVIaHZDLEVBQUFtRixFQUFBbEYsRUFBQWk4QixVQUFlajhCLEVBQUFtSCxFQUFBbkgsRUFBQW1aLEVBQUFuSCxVQUFBLEtBQXdCNFosT0FBQTFtQixFQUFXQSxFQUFBbEYsRUFBSSxNQUFBa0YsRUFBYW5GLEVBQUFtRixFQUFBbEYsR0FBTyxNQUFNbUYsRUFBQUQsRUFBQWxGLEdBQVlBLElBQUFpOEIsU0FBWWo4QixFQUFBNnVDLEdBQUExMUIsRUFBQWpVLEVBQUFyRSxLQUFBK2lCLElBQWlCZ0ksT0FBQTFtQixFQUFXQSxFQUFBbEYsRUFBSSxPQUFBOGQsRUFBQTVZLEdBQVksb0JBQUFpVSxHQUFBLGlCQUFBQSxFQUFBLE9BQUFBLEVBQ2hkLEdBQUFBLEVBQUEsT0FBQW5aLEdBQUEsSUFBQUEsRUFBQXVyQixLQUFBeHJCLEVBQUFtRixFQUFBbEYsRUFBQWk4QixVQUFBajhCLEVBQUFtSCxFQUFBbkgsRUFBQW1aLElBQUF5UyxPQUFBMW1CLElBQUFsRixJQUFBRCxFQUFBbUYsRUFBQWxGLE1BQUE0dUMsR0FBQXoxQixFQUFBalUsRUFBQXJFLEtBQUEraUIsSUFBQWdJLE9BQUExbUIsSUFBQWxGLEdBQUE4ZCxFQUFBNVksR0FBa0gsR0FBQWtzQyxHQUFBajRCLEdBQUEsT0FBQWdLLEVBQUFqZSxFQUFBbEYsRUFBQW1aLEVBQUF5SyxHQUEyQixHQUFBa1IsR0FBQTNiLEdBQUEsT0FBQXdNLEVBQUF6Z0IsRUFBQWxGLEVBQUFtWixFQUFBeUssR0FBc0MsR0FBWGprQixHQUFBNHhDLEdBQUFyc0MsRUFBQWlVLFFBQVcsSUFBQUEsSUFBQTNWLEVBQUEsT0FBQTBCLEVBQUFxbUIsS0FBNEMsY0FBQWxJLEVBQUEsT0FBQU8sRUFBQTFlLEVBQUF1UyxNQUFBekcsYUFBQTRTLEVBQUEzakIsTUFBQSxhQUFtRSxPQUFBRixFQUFBbUYsRUFBQWxGLElBQWUsSUFBQTJ4QyxHQUFBSCxJQUFBLEdBQUFJLEdBQUFKLElBQUEsR0FBQUssR0FBQSxHQUE2QnhzQixHQUFBLENBQUlSLFFBQUFndEIsSUFBV0MsR0FBQSxDQUFLanRCLFFBQUFndEIsSUFBV0UsR0FBQSxDQUFLbHRCLFFBQUFndEIsSUFBWSxTQUFBRyxHQUFBOXNDLEdBQXNDLE9BQXZCQSxJQUFBMnNDLElBQUF4dUIsRUFBQSxPQUF1Qm5lLEVBQ3BhLFNBQUErc0MsR0FBQS9zQyxFQUFBQyxHQUFpQm9mLEdBQUF3dEIsR0FBQTVzQyxHQUFVb2YsR0FBQXV0QixHQUFBNXNDLEdBQVVxZixHQUFBYyxHQUFBd3NCLElBQVUsSUFBQTl4QyxFQUFBb0YsRUFBQSt0QixTQUFpQixPQUFBbnpCLEdBQVUsZUFBQW9GLE9BQUFtK0IsaUJBQUFuK0IsRUFBQXdoQyxhQUFBSCxHQUFBLFNBQWtFLE1BQU0sUUFBQXJoQyxFQUFBcWhDLEdBQUFyaEMsR0FBQXBGLEVBQUEsSUFBQUEsRUFBQW9GLEVBQUFtbUIsV0FBQW5tQixHQUFBd2hDLGNBQUEsS0FBQTVtQyxJQUFBbXlDLFNBQTRFNXRCLEdBQUFlLElBQU9kLEdBQUFjLEdBQUFsZ0IsR0FBUyxTQUFBZ3RDLEdBQUFqdEMsR0FBZW9mLEdBQUFlLElBQU9mLEdBQUF3dEIsSUFBUXh0QixHQUFBeXRCLElBQVEsU0FBQUssR0FBQWx0QyxHQUFlOHNDLEdBQUFELEdBQUFsdEIsU0FBZSxJQUFBMWYsRUFBQTZzQyxHQUFBM3NCLEdBQUFSLFNBQW9COWtCLEVBQUF5bUMsR0FBQXJoQyxFQUFBRCxFQUFBdVMsTUFBbUJ0UyxJQUFBcEYsSUFBQXdrQixHQUFBdXRCLEdBQUE1c0MsR0FBQXFmLEdBQUFjLEdBQUF0bEIsSUFBNEIsU0FBQXN5QyxHQUFBbnRDLEdBQWU0c0MsR0FBQWp0QixVQUFBM2YsSUFBQW9mLEdBQUFlLElBQUFmLEdBQUF3dEIsS0FDcFksSUFBQVEsR0FBQSxFQUFBQyxHQUFBLEVBQUFDLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxHQUFBLEdBQUFDLEdBQUEsR0FBQUMsR0FBQSxHQUFBQyxHQUFBLElBQUFDLEdBQUEvZSxHQUFBdEwsdUJBQUFzcUIsR0FBQSxFQUFBQyxHQUFBLEtBQUExdEIsR0FBQSxLQUFBQyxHQUFBLEtBQUEwdEIsR0FBQSxLQUFBenRCLEdBQUEsS0FBQTB0QixHQUFBLEtBQUFDLEdBQUEsRUFBQUMsR0FBQSxLQUFBQyxHQUFBLEVBQUFDLElBQUEsRUFBQUMsR0FBQSxLQUFBQyxHQUFBLEVBQXFLLFNBQUFDLEtBQWNwd0IsRUFBQSxPQUFTLFNBQUFxd0IsR0FBQXh1QyxFQUFBQyxHQUFpQixVQUFBQSxFQUFBLFNBQXFCLFFBQUFwRixFQUFBLEVBQVlBLEVBQUFvRixFQUFBckQsUUFBQS9CLEVBQUFtRixFQUFBcEQsT0FBdUIvQixJQUFBLElBQUEyN0IsR0FBQXgyQixFQUFBbkYsR0FBQW9GLEVBQUFwRixJQUFBLFNBQStCLFNBQ3BTLFNBQUE0ekMsR0FBQXp1QyxFQUFBQyxFQUFBcEYsRUFBQUMsRUFBQW1ILEVBQUFnUyxHQUFzRyxHQUE3RTQ1QixHQUFBNTVCLEVBQUs2NUIsR0FBQTd0QyxFQUFLb2dCLEdBQUEsT0FBQXJnQixJQUFBNm9DLGNBQUEsS0FBZ0MrRSxHQUFBanVCLFFBQUEsT0FBQVUsR0FBQXF1QixHQUFBQyxHQUEwQjF1QyxFQUFBcEYsRUFBQUMsRUFBQW1ILEdBQVNtc0MsR0FBQSxDQUFPLEdBQUFBLElBQUEsRUFBQUUsSUFBQSxFQUFBanVCLEdBQUEsT0FBQXJnQixJQUFBNm9DLGNBQUEsS0FBQW1GLEdBQUFELEdBQUFHLEdBQUE1dEIsR0FBQUYsR0FBQSxLQUFBd3RCLEdBQUFqdUIsUUFBQWd2QixHQUFBMXVDLEVBQUFwRixFQUFBQyxFQUFBbUgsU0FBd0Ztc0MsSUFBVUMsR0FBQSxLQUFRQyxHQUFBLEVBQXVMLE9BQWxMVixHQUFBanVCLFFBQUFpdkIsSUFBYzV1QyxFQUFBOHRDLElBQUtqRixjQUFBa0YsR0FBbUIvdEMsRUFBQW9wQyxlQUFBNkUsR0FBb0JqdUMsRUFBQThvQyxZQUFBb0YsR0FBaUJsdUMsRUFBQTQyQixXQUFBdVgsR0FBZ0JudUMsRUFBQSxPQUFBb2dCLElBQUEsT0FBQUEsR0FBQTlKLEtBQTBCdTNCLEdBQUEsRUFBS0csR0FBQTF0QixHQUFBeXRCLEdBQUExdEIsR0FBQUQsR0FBQTB0QixHQUFBLEtBQW9CRyxHQUFBLEVBQUtDLEdBQUEsS0FBUUMsR0FBQSxFQUFLbnVDLEdBQUFtZSxFQUFBLE9BQWtCbGUsRUFBUyxTQUFBNHVDLEtBQWNqQixHQUFBanVCLFFBQUFpdkIsR0FBY2YsR0FBQSxFQUFLRyxHQUFBMXRCLEdBQUF5dEIsR0FBQTF0QixHQUFBRCxHQUFBMHRCLEdBQUEsS0FBb0JHLEdBQUEsRUFBS0MsR0FBQSxLQUFRQyxHQUFBLEVBQUtDLElBQUEsRUFBTUMsR0FBQSxLQUFRQyxHQUFBLEVBQzVlLFNBQUFRLEtBQWMsSUFBQTl1QyxFQUFBLENBQU82b0MsY0FBQSxLQUFBOEIsVUFBQSxLQUFBb0UsTUFBQSxLQUFBQyxXQUFBLEtBQUExNEIsS0FBQSxNQUFtRyxPQUEzQixPQUFBZ0ssR0FBQXl0QixHQUFBenRCLEdBQUF0Z0IsRUFBQXNnQixNQUFBaEssS0FBQXRXLEVBQTJCc2dCLEdBQVMsU0FBQTJ1QixLQUFjLFVBQUFqQixPQUFBMXRCLEdBQUEwdEIsSUFBQTEzQixLQUFBK0osR0FBQSxRQUFBRCxHQUFBQyxJQUFBRCxHQUFBOUosS0FBQSxTQUF1RCxDQUFLLE9BQUErSixJQUFBbEMsRUFBQSxPQUE2QixJQUFBbmUsRUFBQSxDQUFPNm9DLGVBQVh6b0IsR0FBQUMsSUFBV3dvQixjQUFBOEIsVUFBQXZxQixHQUFBdXFCLFVBQUFvRSxNQUFBM3VCLEdBQUEydUIsTUFBQUMsV0FBQTV1QixHQUFBNHVCLFdBQUExNEIsS0FBQSxNQUFxR2dLLEdBQUEsT0FBQUEsR0FBQXl0QixHQUFBL3RDLEVBQUFzZ0IsR0FBQWhLLEtBQUF0VyxFQUF5QnFnQixHQUFBRCxHQUFBOUosS0FBUyxPQUFBZ0ssR0FBUyxTQUFBNHVCLEdBQUFsdkMsRUFBQUMsR0FBaUIseUJBQUFBLElBQUFELEdBQUFDLEVBQ2haLFNBQUFrdkMsR0FBQW52QyxHQUFlLElBQUFDLEVBQUFndkMsS0FBQXAwQyxFQUFBb0YsRUFBQTh1QyxNQUFzRSxHQUFqRCxPQUFBbDBDLEdBQUFzakIsRUFBQSxPQUF5QnRqQixFQUFBdTBDLG9CQUFBcHZDLEVBQXdCLEVBQUFzdUMsR0FBQSxDQUFTLElBQUF4ekMsRUFBQUQsRUFBQWtiLFNBQWlCLFVBQUFzNEIsR0FBQSxDQUFjLElBQUFwc0MsRUFBQW9zQyxHQUFBaHpDLElBQUFSLEdBQWdCLFlBQUFvSCxFQUFBLENBQWVvc0MsR0FBQTdCLE9BQUEzeEMsR0FBYSxJQUFBb1osRUFBQWhVLEVBQUE0b0MsY0FBc0IsR0FBQTUwQixFQUFBalUsRUFBQWlVLEVBQUFoUyxFQUFBUyxRQUFBVCxJQUFBcVUsV0FBNEIsT0FBQXJVLEdBQThILE9BQTlHdTBCLEdBQUF2aUIsRUFBQWhVLEVBQUE0b0MsaUJBQUF3RyxJQUFBLEdBQStCcHZDLEVBQUE0b0MsY0FBQTUwQixFQUFrQmhVLEVBQUErdUMsYUFBQW4wQyxFQUFBdUUsT0FBQWEsRUFBQTBxQyxVQUFBMTJCLEdBQXVDcFosRUFBQXkwQyxrQkFBQXI3QixFQUFzQixDQUFBQSxFQUFBblosSUFBYSxPQUFBbUYsRUFBQTRvQyxjQUFBL3RDLEdBQTBCQSxFQUFBRCxFQUFBdUUsS0FBUyxJQUFBd1osRUFBQTNZLEVBQUErdUMsV0FBb0csR0FBakYvNkIsRUFBQWhVLEVBQUEwcUMsVUFBYyxPQUFBL3hCLEdBQUEsT0FBQTlkLE1BQUF3YixLQUFBLE1BQUF4YixFQUFBOGQsRUFBQXRDLE1BQUF4YixFQUFBLE9BQUFBLElBQUF3YixLQUFBLEtBQW1FLE9BQzdleGIsRUFBQSxDQUFHLElBQUE0akIsRUFBQXpjLEVBQUEsS0FBQXhILEVBQUFLLEVBQUF3RCxHQUFBLEVBQXNCLEdBQUcsSUFBQTFELEVBQUFILEVBQUEydUMsZUFBdUJ4dUMsRUFBQWl6QyxJQUFBdnZDLE9BQUEsRUFBQW9nQixFQUFBOUYsRUFBQTNXLEVBQUFnUyxHQUFBclosRUFBQXF6QyxRQUFBcnpDLElBQUFxWixFQUFBeFosRUFBQTgwQyxlQUFBdnZDLEVBQUF2RixFQUFBKzBDLFdBQUF4dkMsRUFBQWlVLEVBQUF4WixFQUFBaUksUUFBc0ZrVyxFQUFBbmUsRUFBSUEsSUFBQTZiLFdBQVMsT0FBQTdiLE9BQUFLLEdBQXVCd0QsSUFBQW9nQixFQUFBOUYsRUFBQTNXLEVBQUFnUyxHQUFhdWlCLEdBQUF2aUIsRUFBQWhVLEVBQUE0b0MsaUJBQUF3RyxJQUFBLEdBQStCcHZDLEVBQUE0b0MsY0FBQTUwQixFQUFrQmhVLEVBQUErdUMsV0FBQXR3QixFQUFlemUsRUFBQTBxQyxVQUFBMW9DLEVBQWNwSCxFQUFBeTBDLGtCQUFBcjdCLEVBQXNCLE9BQUFoVSxFQUFBNG9DLGNBQUFodUMsRUFBQWtiLFVBQzlSLFNBQUEwNUIsR0FBQXp2QyxFQUFBQyxFQUFBcEYsRUFBQUMsR0FBME4sT0FBck1rRixFQUFBLENBQUdxbUIsSUFBQXJtQixFQUFBbEUsT0FBQW1FLEVBQUF5dkMsUUFBQTcwQyxFQUFBODBDLEtBQUE3MEMsRUFBQXdiLEtBQUEsTUFBMkMsT0FBQTQzQixPQUFBLENBQWVsRixXQUFBLE9BQWdCQSxXQUFBaHBDLEVBQUFzVyxLQUFBdFcsRUFBQSxRQUFBQyxFQUFBaXVDLEdBQUFsRixZQUFBa0YsR0FBQWxGLFdBQUFocEMsRUFBQXNXLEtBQUF0VyxHQUFBbkYsRUFBQW9GLEVBQUFxVyxLQUFBclcsRUFBQXFXLEtBQUF0VyxJQUFBc1csS0FBQXpiLEVBQUFxekMsR0FBQWxGLFdBQUFocEMsR0FBd0hBLEVBQVMsU0FBQTR2QyxHQUFBNXZDLEVBQUFDLEVBQUFwRixFQUFBQyxHQUFxQixJQUFBbUgsRUFBQTZzQyxLQUFXWCxJQUFBbnVDLEVBQU1pQyxFQUFBNG1DLGNBQUE0RyxHQUFBeHZDLEVBQUFwRixPQUFBLFdBQUFDLEVBQUEsS0FBQUEsR0FDelEsU0FBQSswQyxHQUFBN3ZDLEVBQUFDLEVBQUFwRixFQUFBQyxHQUFxQixJQUFBbUgsRUFBQWd0QyxLQUFXbjBDLE9BQUEsSUFBQUEsRUFBQSxLQUFBQSxFQUFvQixJQUFBbVosT0FBQSxFQUFhLFVBQUFtTSxHQUFBLENBQWEsSUFBQXhILEVBQUF3SCxHQUFBeW9CLGNBQWtDLEdBQVo1MEIsRUFBQTJFLEVBQUE4MkIsUUFBWSxPQUFBNTBDLEdBQUEwekMsR0FBQTF6QyxFQUFBOGQsRUFBQSsyQixNQUF3QyxZQUFiRixHQUFBckMsR0FBQXZ5QyxFQUFBb1osRUFBQW5aLEdBQXFCcXpDLElBQUFudUMsRUFBTWlDLEVBQUE0bUMsY0FBQTRHLEdBQUF4dkMsRUFBQXBGLEVBQUFvWixFQUFBblosR0FBNEIsU0FBQWcxQyxHQUFBOXZDLEVBQUFDLEdBQWlCLHlCQUFBQSxHQUFBRCxNQUFBQyxFQUFBRCxHQUFBLFdBQXNEQyxFQUFBLFFBQVMsTUFBQUEsR0FBQUQsTUFBQUMsRUFBQTBmLFFBQUEzZixFQUFBLFdBQTREQyxFQUFBMGYsUUFBQSxZQUE1RCxFQUE0RSxTQUFBb3dCLE1BQzlWLFNBQUFDLEdBQUFod0MsRUFBQUMsRUFBQXBGLEdBQW1CLEdBQUF5ekMsSUFBQW53QixFQUFBLE9BQXNCLElBQUFyakIsRUFBQWtGLEVBQUF1MkIsVUFBa0IsR0FBQXYyQixJQUFBOHRDLElBQUEsT0FBQWh6QyxPQUFBZ3pDLEdBQUEsR0FBQU0sSUFBQSxFQUFBcHVDLEVBQUEsQ0FBd0NvcEMsZUFBQXlFLEdBQUFuckMsT0FBQTdILEVBQUEwMEMsYUFBQSxLQUFBQyxXQUFBLEtBQUFsNUIsS0FBQSxNQUF1RSxPQUFBKzNCLFFBQUEsSUFBQTlCLFVBQUEsS0FBQTF4QyxFQUFBd3pDLEdBQUFoekMsSUFBQTRFLElBQUFvdUMsR0FBQS9mLElBQUFydUIsRUFBQUQsT0FBNEQsQ0FBSyxJQUFBQyxFQUFBcEYsRUFBUSxPQUFBb0YsRUFBQXFXLE1BQWNyVyxJQUFBcVcsS0FBVXJXLEVBQUFxVyxLQUFBdFcsTUFBUyxDQUFLa3JDLEtBQUssSUFBQWpwQyxFQUFBNm9DLEtBQXFCNzJCLEVBQUEsQ0FBT20xQixlQUFqQm5uQyxFQUFBK29DLEdBQUEvb0MsRUFBQWpDLEdBQWlCMEMsT0FBQTdILEVBQUEwMEMsYUFBQSxLQUFBQyxXQUFBLEtBQUFsNUIsS0FBQSxNQUFzRXNDLEVBQUEzWSxFQUFBYixLQUFVLFVBQUF3WixFQUFBM0UsRUFBQXFDLEtBQUFyQyxNQUFxQixDQUFLLElBQUF5SyxFQUFBOUYsRUFBQXRDLEtBQWEsT0FBQW9JLElBQUF6SyxFQUFBcUMsS0FBQW9JLEdBQXFCOUYsRUFBQXRDLEtBQUFyQyxFQUFrQixHQUFUaFUsRUFBQWIsS0FBQTZVLEVBQVMsSUFBQWpVLEVBQUFvcEMsaUJBQUEsT0FDeGR0dUMsR0FBQSxJQUFBQSxFQUFBc3VDLGlCQUFBLFFBQUF0dUMsRUFBQW1GLEVBQUFtdkMscUJBQUEsSUFBaUUsSUFBQTMwQyxFQUFBd0YsRUFBQXF2QyxrQkFBQWh4QyxFQUFBeEQsRUFBQUwsRUFBQUksR0FBbUUsR0FBaENvWixFQUFBczdCLGFBQUF6MEMsRUFBaUJtWixFQUFBdTdCLFdBQUFseEMsRUFBZWs0QixHQUFBbDRCLEVBQUE3RCxHQUFBLE9BQWtCLE1BQUFHLElBQW1Cd3dDLEdBQUFwckMsRUFBQWlDLElBQ3pLLElBQUEyc0MsR0FBQSxDQUFRcUIsWUFBQWh3QixHQUFBb0MsWUFBQWtzQixHQUFBanNCLFdBQUFpc0IsR0FBQWhzQixVQUFBZ3NCLEdBQUEvckIsb0JBQUErckIsR0FBQTdyQixnQkFBQTZyQixHQUFBNXJCLFFBQUE0ckIsR0FBQTNyQixXQUFBMnJCLEdBQUExckIsT0FBQTByQixHQUFBenJCLFNBQUF5ckIsR0FBQTlyQixjQUFBOHJCLElBQWtLRyxHQUFBLENBQUt1QixZQUFBaHdCLEdBQUFvQyxZQUFBLFNBQUFyaUIsRUFBQUMsR0FBaUYsT0FBekM2dUMsS0FBQWpHLGNBQUEsQ0FBQTdvQyxPQUFBLElBQUFDLEVBQUEsS0FBQUEsR0FBeUNELEdBQVNzaUIsV0FBQXJDLEdBQUFzQyxVQUFBLFNBQUF2aUIsRUFBQUMsR0FBc0MsT0FBQTJ2QyxHQUFBLElBQUFqQyxHQUFBRCxHQUFBMXRDLEVBQUFDLElBQXlCdWlCLG9CQUFBLFNBQUF4aUIsRUFBQUMsRUFBQXBGLEdBQStFLE9BQTFDQSxFQUFBLE1BQUFBLElBQUFxRSxPQUFBLENBQUFjLElBQUEsS0FBMEM0dkMsR0FBQSxFQUFBdEMsR0FBQUcsR0FBQXFDLEdBQUE5ekMsS0FBQSxLQUFBaUUsRUFBQUQsR0FBQW5GLElBQXVDNm5CLGdCQUFBLFNBQUExaUIsRUFBQUMsR0FBK0IsT0FBQTJ2QyxHQUFBLEVBQUF0QyxHQUFBRyxHQUFBenRDLEVBQUFDLElBQzdkMGlCLFFBQUEsU0FBQTNpQixFQUFBQyxHQUFzQixJQUFBcEYsRUFBQWkwQyxLQUEyRCxPQUFoRDd1QyxPQUFBLElBQUFBLEVBQUEsS0FBQUEsRUFBb0JELE1BQU1uRixFQUFBZ3VDLGNBQUEsQ0FBQTdvQyxFQUFBQyxHQUFzQkQsR0FBUzRpQixXQUFBLFNBQUE1aUIsRUFBQUMsRUFBQXBGLEdBQTRCLElBQUFDLEVBQUFnMEMsS0FBMkssT0FBaEs3dUMsT0FBQSxJQUFBcEYsSUFBQW9GLEtBQW9CbkYsRUFBQSt0QyxjQUFBL3RDLEVBQUE2dkMsVUFBQTFxQyxFQUE0R0QsR0FBOUVBLEVBQUFsRixFQUFBaTBDLE1BQUEsQ0FBVzN2QyxLQUFBLEtBQUEyVyxTQUFBLEtBQUFxNUIsb0JBQUFwdkMsRUFBQXN2QyxrQkFBQXJ2QyxJQUFtRThWLFNBQUFpNkIsR0FBQWgwQyxLQUFBLEtBQUE4eEMsR0FBQTl0QyxHQUFnQyxDQUFBbEYsRUFBQSt0QyxjQUFBN29DLElBQTBCNmlCLE9BQUEsU0FBQTdpQixHQUE2QyxPQUFkQSxFQUFBLENBQUcyZixRQUFBM2YsR0FBZDh1QyxLQUF5QmpHLGNBQUE3b0MsR0FBeUI4aUIsU0FBQSxTQUFBOWlCLEdBQXNCLElBQUFDLEVBQUE2dUMsS0FDM1UsTUFEc1YsbUJBQUE5dUMsV0FBK0JDLEVBQUE0b0MsY0FBQTVvQyxFQUFBMHFDLFVBQUEzcUMsRUFDclpBLEdBRG1iQSxFQUFBQyxFQUFBOHVDLE1BQUEsQ0FBVzN2QyxLQUFBLEtBQUEyVyxTQUFBLEtBQzFlcTVCLG9CQUFBRixHQUFBSSxrQkFBQXR2QyxJQUE0QytWLFNBQUFpNkIsR0FBQWgwQyxLQUFBLEtBQUE4eEMsR0FBQTl0QyxHQUFnQyxDQUFBQyxFQUFBNG9DLGNBQUE3b0MsSUFBMEJ5aUIsY0FBQXN0QixJQUFrQnBCLEdBQUEsQ0FBS3NCLFlBQUFod0IsR0FBQW9DLFlBQUEsU0FBQXJpQixFQUFBQyxHQUF3QyxJQUFBcEYsRUFBQW8wQyxLQUFXaHZDLE9BQUEsSUFBQUEsRUFBQSxLQUFBQSxFQUFvQixJQUFBbkYsRUFBQUQsRUFBQWd1QyxjQUFzQixjQUFBL3RDLEdBQUEsT0FBQW1GLEdBQUF1dUMsR0FBQXZ1QyxFQUFBbkYsRUFBQSxJQUFBQSxFQUFBLElBQThDRCxFQUFBZ3VDLGNBQUEsQ0FBQTdvQyxFQUFBQyxHQUFzQkQsSUFBU3NpQixXQUFBckMsR0FBQXNDLFVBQUEsU0FBQXZpQixFQUFBQyxHQUFzQyxPQUFBNHZDLEdBQUEsSUFBQWxDLEdBQUFELEdBQUExdEMsRUFBQUMsSUFBeUJ1aUIsb0JBQUEsU0FBQXhpQixFQUFBQyxFQUFBcEYsR0FBK0UsT0FBMUNBLEVBQUEsTUFBQUEsSUFBQXFFLE9BQUEsQ0FBQWMsSUFBQSxLQUEwQzZ2QyxHQUFBLEVBQUF2QyxHQUFBRyxHQUFBcUMsR0FBQTl6QyxLQUFBLEtBQUFpRSxFQUFBRCxHQUFBbkYsSUFBdUM2bkIsZ0JBQUEsU0FBQTFpQixFQUM1ZEMsR0FBRyxPQUFBNHZDLEdBQUEsRUFBQXZDLEdBQUFHLEdBQUF6dEMsRUFBQUMsSUFBdUIwaUIsUUFBQSxTQUFBM2lCLEVBQUFDLEdBQXVCLElBQUFwRixFQUFBbzBDLEtBQVdodkMsT0FBQSxJQUFBQSxFQUFBLEtBQUFBLEVBQW9CLElBQUFuRixFQUFBRCxFQUFBZ3VDLGNBQXNCLGNBQUEvdEMsR0FBQSxPQUFBbUYsR0FBQXV1QyxHQUFBdnVDLEVBQUFuRixFQUFBLElBQUFBLEVBQUEsSUFBOENrRixNQUFNbkYsRUFBQWd1QyxjQUFBLENBQUE3b0MsRUFBQUMsR0FBc0JELElBQVM0aUIsV0FBQXVzQixHQUFBdHNCLE9BQUEsV0FBaUMsT0FBQW9zQixLQUFBcEcsZUFBMEIvbEIsU0FBQSxTQUFBOWlCLEdBQXNCLE9BQUFtdkMsR0FBQUQsS0FBZ0J6c0IsY0FBQXN0QixJQUFrQkcsR0FBQSxLQUFBQyxHQUFBLEtBQUFDLElBQUEsRUFDNVMsU0FBQUMsR0FBQXJ3QyxFQUFBQyxHQUFpQixJQUFBcEYsRUFBQWdsQixHQUFBLGVBQXVCaGxCLEVBQUE2dEMsWUFBQSxVQUF3Qjd0QyxFQUFBMFgsS0FBQSxVQUFpQjFYLEVBQUFnckIsVUFBQTVsQixFQUFjcEYsRUFBQTZyQixPQUFBMW1CLEVBQVduRixFQUFBKzdCLFVBQUEsRUFBYyxPQUFBNTJCLEVBQUFncEMsWUFBQWhwQyxFQUFBZ3BDLFdBQUFFLFdBQUFydUMsRUFBQW1GLEVBQUFncEMsV0FBQW51QyxHQUFBbUYsRUFBQWlwQyxZQUFBanBDLEVBQUFncEMsV0FBQW51QyxFQUE0RixTQUFBeTFDLEdBQUF0d0MsRUFBQUMsR0FBaUIsT0FBQUQsRUFBQXFtQixLQUFjLFdBQUF4ckIsRUFBQW1GLEVBQUF1UyxLQUF3RixlQUFwRXRTLEVBQUEsSUFBQUEsRUFBQSt0QixVQUFBbnpCLEVBQUF1c0IsZ0JBQUFubkIsRUFBQTJ0QixTQUFBeEcsY0FBQSxLQUFBbm5CLEtBQW9FRCxFQUFBNmxCLFVBQUE1bEIsR0FBQSxHQUFzQyxzQkFBQUEsRUFBQSxLQUFBRCxFQUFBMm9DLGNBQUEsSUFBQTFvQyxFQUFBK3RCLFNBQUEsS0FBQS90QixLQUFBRCxFQUFBNmxCLFVBQUE1bEIsR0FBQSxHQUEwRixRQUFpQixrQkFDNWQsU0FBQXN3QyxHQUFBdndDLEdBQWUsR0FBQW93QyxHQUFBLENBQU8sSUFBQW53QyxFQUFBa3dDLEdBQVMsR0FBQWx3QyxFQUFBLENBQU0sSUFBQXBGLEVBQUFvRixFQUFRLElBQUFxd0MsR0FBQXR3QyxFQUFBQyxHQUFBLENBQXFCLEtBQVJBLEVBQUFtbkMsR0FBQXZzQyxNQUFReTFDLEdBQUF0d0MsRUFBQUMsR0FBMkMsT0FBMUJELEVBQUE0MkIsV0FBQSxFQUFld1osSUFBQSxPQUFNRixHQUFBbHdDLEdBQVlxd0MsR0FBQUgsR0FBQXIxQyxHQUFTcTFDLEdBQUFsd0MsRUFBS213QyxHQUFBOUksR0FBQXBuQyxRQUFTRCxFQUFBNDJCLFdBQUEsRUFBQXdaLElBQUEsRUFBQUYsR0FBQWx3QyxHQUFnQyxTQUFBd3dDLEdBQUF4d0MsR0FBZSxJQUFBQSxJQUFBMG1CLE9BQWUsT0FBQTFtQixHQUFBLElBQUFBLEVBQUFxbUIsS0FBQSxJQUFBcm1CLEVBQUFxbUIsS0FBQSxLQUFBcm1CLEVBQUFxbUIsS0FBMkNybUIsSUFBQTBtQixPQUFZd3BCLEdBQUFsd0MsRUFBSyxTQUFBeXdDLEdBQUF6d0MsR0FBZSxHQUFBQSxJQUFBa3dDLEdBQUEsU0FBbUIsSUFBQUUsR0FBQSxPQUFBSSxHQUFBeHdDLEdBQUFvd0MsSUFBQSxLQUE2QixJQUFBbndDLEVBQUFELEVBQUF1UyxLQUFhLE9BQUF2UyxFQUFBcW1CLEtBQUEsU0FBQXBtQixHQUFBLFNBQUFBLElBQUF5bUMsR0FBQXptQyxFQUFBRCxFQUFBK29DLGVBQUEsSUFBQTlvQyxFQUFBa3dDLEdBQXNFbHdDLEdBQUVvd0MsR0FBQXJ3QyxFQUFBQyxLQUFBbW5DLEdBQUFubkMsR0FBa0QsT0FBakN1d0MsR0FBQXh3QyxHQUFNbXdDLEdBQUFELEdBQUE5SSxHQUFBcG5DLEVBQUE2bEIsV0FBQSxNQUEyQixFQUFTLFNBQUE2cUIsS0FBY1AsR0FBQUQsR0FBQSxLQUFXRSxJQUFBLEVBQzdlLElBQUFPLEdBQUE5aEIsR0FBQXJMLGtCQUFBNnJCLElBQUEsRUFBa0MsU0FBQTF1QixHQUFBM2dCLEVBQUFDLEVBQUFwRixFQUFBQyxHQUFvQm1GLEVBQUFrUixNQUFBLE9BQUFuUixFQUFBMHNDLEdBQUF6c0MsRUFBQSxLQUFBcEYsRUFBQUMsR0FBQTJ4QyxHQUFBeHNDLEVBQUFELEVBQUFtUixNQUFBdFcsRUFBQUMsR0FBa0QsU0FBQTgxQyxHQUFBNXdDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsR0FBdUJwSCxJQUFBZ1MsT0FBVyxJQUFBb0gsRUFBQWhVLEVBQUF5UixJQUFzQyxPQUExQm0vQixHQUFBNXdDLEVBQUFnQyxHQUFRbkgsRUFBQTJ6QyxHQUFBenVDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbVosRUFBQWhTLEdBQWtCLE9BQUFqQyxHQUFBcXZDLElBQTBIcHZDLEVBQUEyMkIsV0FBQSxFQUFlalcsR0FBQTNnQixFQUFBQyxFQUFBbkYsRUFBQW1ILEdBQVdoQyxFQUFBa1IsUUFBcEpsUixFQUFBNm9DLFlBQUE5b0MsRUFBQThvQyxZQUFBN29DLEVBQUEyMkIsWUFBQSxJQUFBNTJCLEVBQUFvcEMsZ0JBQUFubkMsSUFBQWpDLEVBQUFvcEMsZUFBQSxHQUFBMEgsR0FBQTl3QyxFQUFBQyxFQUFBZ0MsSUFDaEwsU0FBQTh1QyxHQUFBL3dDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsRUFBQWdTLEdBQXlCLFVBQUFqVSxFQUFBLENBQWEsSUFBQTRZLEVBQUEvZCxFQUFBMFgsS0FBYSx5QkFBQXFHLEdBQUF5d0IsR0FBQXp3QixTQUFBLElBQUFBLEVBQUEzRyxjQUFBLE9BQUFwWCxFQUFBaVksY0FBQSxJQUFBalksRUFBQW9YLGVBQThJalMsRUFBQXVwQyxHQUFBMXVDLEVBQUEwWCxLQUFBLEtBQUF6WCxFQUFBLEtBQUFtRixFQUFBdEUsS0FBQXNZLElBQWtDdkMsSUFBQXpSLEVBQUF5UixJQUFZMVIsRUFBQTBtQixPQUFBem1CLEVBQVdBLEVBQUFrUixNQUFBblIsSUFBdk1DLEVBQUFvbUIsSUFBQSxHQUFBcG1CLEVBQUFzUyxLQUFBcUcsRUFBQW80QixHQUFBaHhDLEVBQUFDLEVBQUEyWSxFQUFBOWQsRUFBQW1ILEVBQUFnUyxJQUFrTyxPQUFWMkUsRUFBQTVZLEVBQUFtUixNQUFVbFAsRUFBQWdTLElBQUFoUyxFQUFBMlcsRUFBQW13QixlQUFBbHVDLEVBQUEsUUFBQUEsSUFBQWlZLFNBQUFqWSxFQUFBNjdCLElBQUF6MEIsRUFBQW5ILElBQUFrRixFQUFBMFIsTUFBQXpSLEVBQUF5UixLQUFBby9CLEdBQUE5d0MsRUFBQUMsRUFBQWdVLElBQStGaFUsRUFBQTIyQixXQUFBLEdBQWU1MkIsRUFBQXNwQyxHQUFBMXdCLEVBQUE5ZCxJQUFZNFcsSUFBQXpSLEVBQUF5UixJQUFZMVIsRUFBQTBtQixPQUFBem1CLEVBQVdBLEVBQUFrUixNQUFBblIsR0FDdGEsU0FBQWd4QyxHQUFBaHhDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsRUFBQWdTLEdBQXlCLGNBQUFqVSxHQUFBMDJCLEdBQUExMkIsRUFBQStvQyxjQUFBanVDLElBQUFrRixFQUFBMFIsTUFBQXpSLEVBQUF5UixNQUFBMjlCLElBQUEsRUFBQXB0QyxFQUFBZ1MsR0FBQTY4QixHQUFBOXdDLEVBQUFDLEVBQUFnVSxHQUFBZzlCLEdBQUFqeEMsRUFBQUMsRUFBQXBGLEVBQUFDLEVBQUFtWixHQUEyRixTQUFBaTlCLEdBQUFseEMsRUFBQUMsR0FBaUIsSUFBQXBGLEVBQUFvRixFQUFBeVIsS0FBWSxPQUFBMVIsR0FBQSxPQUFBbkYsR0FBQSxPQUFBbUYsS0FBQTBSLE1BQUE3VyxLQUFBb0YsRUFBQTIyQixXQUFBLEtBQTRELFNBQUFxYSxHQUFBanhDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsR0FBdUIsSUFBQWdTLEVBQUEyTCxHQUFBL2tCLEdBQUE2c0MsR0FBQWxvQixHQUFBRyxRQUE0RCxPQUFwQzFMLEVBQUEwekIsR0FBQTFuQyxFQUFBZ1UsR0FBVTQ4QixHQUFBNXdDLEVBQUFnQyxHQUFRcEgsRUFBQTR6QyxHQUFBenVDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbVosRUFBQWhTLEdBQWtCLE9BQUFqQyxHQUFBcXZDLElBQTBIcHZDLEVBQUEyMkIsV0FBQSxFQUFlalcsR0FBQTNnQixFQUFBQyxFQUFBcEYsRUFBQW9ILEdBQVdoQyxFQUFBa1IsUUFBcEpsUixFQUFBNm9DLFlBQUE5b0MsRUFBQThvQyxZQUFBN29DLEVBQUEyMkIsWUFBQSxJQUFBNTJCLEVBQUFvcEMsZ0JBQUFubkMsSUFBQWpDLEVBQUFvcEMsZUFBQSxHQUFBMEgsR0FBQTl3QyxFQUFBQyxFQUFBZ0MsSUFDaFMsU0FBQWt2QyxHQUFBbnhDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsR0FBdUIsR0FBQTJkLEdBQUEva0IsR0FBQSxDQUFTLElBQUFvWixHQUFBLEVBQVNrMEIsR0FBQWxvQyxRQUFNZ1UsR0FBQSxFQUFrQixHQUFSNDhCLEdBQUE1d0MsRUFBQWdDLEdBQVEsT0FBQWhDLEVBQUE0bEIsVUFBQSxPQUFBN2xCLE1BQUF1MkIsVUFBQSxLQUFBdDJCLEVBQUFzMkIsVUFBQSxLQUFBdDJCLEVBQUEyMkIsV0FBQSxHQUFBNlUsR0FBQXhyQyxFQUFBcEYsRUFBQUMsR0FBQSt3QyxHQUFBNXJDLEVBQUFwRixFQUFBQyxFQUFBbUgsR0FBQW5ILEdBQUEsT0FBZ0gsVUFBQWtGLEVBQUEsQ0FBa0IsSUFBQTRZLEVBQUEzWSxFQUFBNGxCLFVBQUFuSCxFQUFBemUsRUFBQThvQyxjQUFvQ253QixFQUFBdlUsTUFBQXFhLEVBQVUsSUFBQWprQixFQUFBbWUsRUFBQTdOLFFBQUF6TSxFQUFBekQsRUFBQWtYLFlBQWdDLGlCQUFBelQsR0FBQSxPQUFBQSxJQUFBMmhCLEdBQUEzaEIsS0FBQXFwQyxHQUFBMW5DLEVBQUEzQixFQUFBc2hCLEdBQUEva0IsR0FBQTZzQyxHQUFBbG9CLEdBQUFHLFNBQXFFLElBQUEva0IsRUFBQUMsRUFBQXVYLHlCQUFBOVYsRUFBQSxtQkFBQTFCLEdBQUEsbUJBQUFnZSxFQUFBbXpCLHdCQUF3R3p2QyxHQUFBLG1CQUFBc2MsRUFBQWd6QixrQ0FDOWIsbUJBQUFoekIsRUFBQSt5Qiw0QkFBQWp0QixJQUFBNWpCLEdBQUFMLElBQUE2RCxJQUFBb3RDLEdBQUF6ckMsRUFBQTJZLEVBQUE5ZCxFQUFBd0QsR0FBNkU4eUMsSUFBQSxFQUFNLElBQUExMUMsRUFBQXVFLEVBQUE0b0MsY0FBc0JwdUMsRUFBQW1lLEVBQUFsWCxNQUFBaEcsRUFBWSxJQUFBOGlCLEVBQUF2ZSxFQUFBNm9DLFlBQW9CLE9BQUF0cUIsSUFBQXN0QixHQUFBN3JDLEVBQUF1ZSxFQUFBMWpCLEVBQUE4ZCxFQUFBM1csR0FBQXhILEVBQUF3RixFQUFBNG9DLGVBQTRDbnFCLElBQUE1akIsR0FBQVksSUFBQWpCLEdBQUFpbEIsR0FBQUMsU0FBQXl4QixJQUFBLG1CQUFBeDJDLElBQUE4dkMsR0FBQXpxQyxFQUFBcEYsRUFBQUQsRUFBQUUsR0FBQUwsRUFBQXdGLEVBQUE0b0MsZ0JBQUFucUIsRUFBQTB5QixJQUFBN0YsR0FBQXRyQyxFQUFBcEYsRUFBQTZqQixFQUFBNWpCLEVBQUFZLEVBQUFqQixFQUFBNkQsS0FBQWhDLEdBQUEsbUJBQUFzYyxFQUFBb3pCLDJCQUFBLG1CQUFBcHpCLEVBQUFxekIscUJBQUEsbUJBQUFyekIsRUFBQXF6QixvQkFBQXJ6QixFQUFBcXpCLHFCQUFBLG1CQUFBcnpCLEVBQUFvekIsMkJBQ3JMcHpCLEVBQUFvekIsNkJBQUEsbUJBQUFwekIsRUFBQWpNLG9CQUFBMU0sRUFBQTIyQixXQUFBLHdCQUFBaGUsRUFBQWpNLG9CQUFBMU0sRUFBQTIyQixXQUFBLEdBQUEzMkIsRUFBQThvQyxjQUFBanVDLEVBQUFtRixFQUFBNG9DLGNBQUFwdUMsR0FBQW1lLEVBQUF2VSxNQUFBdkosRUFBQThkLEVBQUFsWCxNQUFBakgsRUFBQW1lLEVBQUE3TixRQUFBek0sRUFBQXhELEVBQUE0akIsSUFBQSxtQkFBQTlGLEVBQUFqTSxvQkFBQTFNLEVBQUEyMkIsV0FBQSxHQUFBOTdCLEdBQUEsUUFBZ1M4ZCxFQUFBM1ksRUFBQTRsQixVQUFBbkgsRUFBQXplLEVBQUE4b0MsY0FBQW53QixFQUFBdlUsTUFBQXBFLEVBQUFzUyxPQUFBdFMsRUFBQXlvQyxZQUFBaHFCLEVBQUFvQixHQUFBN2YsRUFBQXNTLEtBQUFtTSxHQUFBamtCLEVBQUFtZSxFQUFBN04sUUFBQSxpQkFBQXpNLEVBQUF6RCxFQUFBa1gsY0FBQSxPQUFBelQsSUFBQTJoQixHQUFBM2hCLEtBQUFxcEMsR0FBQTFuQyxFQUFBM0IsRUFBQXNoQixHQUFBL2tCLEdBQUE2c0MsR0FBQWxvQixHQUFBRyxVQUFBcmpCLEVBQUEsbUJBQUExQixFQUFBQyxFQUFBdVgsMkJBQ2hTLG1CQUFBd0csRUFBQW16QiwwQkFBQSxtQkFBQW56QixFQUFBZ3pCLGtDQUFBLG1CQUFBaHpCLEVBQUEreUIsNEJBQUFqdEIsSUFBQTVqQixHQUFBTCxJQUFBNkQsSUFBQW90QyxHQUFBenJDLEVBQUEyWSxFQUFBOWQsRUFBQXdELEdBQUE4eUMsSUFBQSxFQUFBMzJDLEVBQUF3RixFQUFBNG9DLGNBQUFudEMsRUFBQWtkLEVBQUFsWCxNQUFBakgsRUFBQSxRQUFBK2pCLEVBQUF2ZSxFQUFBNm9DLGVBQUFnRCxHQUFBN3JDLEVBQUF1ZSxFQUFBMWpCLEVBQUE4ZCxFQUFBM1csR0FBQXZHLEVBQUF1RSxFQUFBNG9DLGVBQUFucUIsSUFBQTVqQixHQUFBTCxJQUFBaUIsR0FBQWdrQixHQUFBQyxTQUFBeXhCLElBQUEsbUJBQUF4MkMsSUFBQTh2QyxHQUFBenFDLEVBQUFwRixFQUFBRCxFQUFBRSxHQUFBWSxFQUFBdUUsRUFBQTRvQyxnQkFBQWp1QyxFQUFBdzJDLElBQUE3RixHQUFBdHJDLEVBQUFwRixFQUFBNmpCLEVBQUE1akIsRUFBQUwsRUFBQWlCLEVBQUE0QyxLQUFBaEMsR0FBQSxtQkFBQXNjLEVBQUF5NEIsNEJBQUEsbUJBQUF6NEIsRUFBQTA0QixzQkFBQSxtQkFDQTE0QixFQUFBMDRCLHFCQUFBMTRCLEVBQUEwNEIsb0JBQUF4MkMsRUFBQVksRUFBQTRDLEdBQUEsbUJBQUFzYSxFQUFBeTRCLDRCQUFBejRCLEVBQUF5NEIsMkJBQUF2MkMsRUFBQVksRUFBQTRDLElBQUEsbUJBQUFzYSxFQUFBekwscUJBQUFsTixFQUFBMjJCLFdBQUEsc0JBQUFoZSxFQUFBbXpCLDBCQUFBOXJDLEVBQUEyMkIsV0FBQSwwQkFBQWhlLEVBQUF6TCxvQkFBQXVSLElBQUExZSxFQUFBK29DLGVBQUF0dUMsSUFBQXVGLEVBQUE2b0MsZ0JBQUE1b0MsRUFBQTIyQixXQUFBLHNCQUFBaGUsRUFBQW16Qix5QkFBQXJ0QixJQUFBMWUsRUFBQStvQyxlQUFBdHVDLElBQUF1RixFQUFBNm9DLGdCQUFBNW9DLEVBQUEyMkIsV0FBQSxLQUFBMzJCLEVBQUE4b0MsY0FBQWp1QyxFQUFBbUYsRUFBQTRvQyxjQUNBbnRDLEdBQUFrZCxFQUFBdlUsTUFBQXZKLEVBQUE4ZCxFQUFBbFgsTUFBQWhHLEVBQUFrZCxFQUFBN04sUUFBQXpNLEVBQUF4RCxFQUFBRixJQUFBLG1CQUFBZ2UsRUFBQXpMLG9CQUFBdVIsSUFBQTFlLEVBQUErb0MsZUFBQXR1QyxJQUFBdUYsRUFBQTZvQyxnQkFBQTVvQyxFQUFBMjJCLFdBQUEsc0JBQUFoZSxFQUFBbXpCLHlCQUFBcnRCLElBQUExZSxFQUFBK29DLGVBQUF0dUMsSUFBQXVGLEVBQUE2b0MsZ0JBQUE1b0MsRUFBQTIyQixXQUFBLEtBQUE5N0IsR0FBQSxHQUFnUSxPQUFBeTJDLEdBQUF2eEMsRUFBQUMsRUFBQXBGLEVBQUFDLEVBQUFtWixFQUFBaFMsR0FDaFEsU0FBQXN2QyxHQUFBdnhDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsRUFBQWdTLEdBQXlCaTlCLEdBQUFseEMsRUFBQUMsR0FBUSxJQUFBMlksRUFBQSxPQUFBM1ksRUFBQTIyQixXQUEyQixJQUFBOTdCLElBQUE4ZCxFQUFBLE9BQUEzVyxHQUFBb21DLEdBQUFwb0MsRUFBQXBGLEdBQUEsR0FBQWkyQyxHQUFBOXdDLEVBQUFDLEVBQUFnVSxHQUF5Q25aLEVBQUFtRixFQUFBNGxCLFVBQWM4cUIsR0FBQWh4QixRQUFBMWYsRUFBYSxJQUFBeWUsRUFBQTlGLEdBQUEsbUJBQUEvZCxFQUFBc1gseUJBQUEsS0FBQXJYLEVBQUErUixTQUEwTSxPQUFsSTVNLEVBQUEyMkIsV0FBQSxFQUFlLE9BQUE1MkIsR0FBQTRZLEdBQUEzWSxFQUFBa1IsTUFBQXM3QixHQUFBeHNDLEVBQUFELEVBQUFtUixNQUFBLEtBQUE4QyxHQUFBaFUsRUFBQWtSLE1BQUFzN0IsR0FBQXhzQyxFQUFBLEtBQUF5ZSxFQUFBekssSUFBQTBNLEdBQUEzZ0IsRUFBQUMsRUFBQXllLEVBQUF6SyxHQUE2RWhVLEVBQUE0b0MsY0FBQS90QyxFQUFBNEcsTUFBd0JPLEdBQUFvbUMsR0FBQXBvQyxFQUFBcEYsR0FBQSxHQUFjb0YsRUFBQWtSLE1BQWUsU0FBQXFnQyxHQUFBeHhDLEdBQWUsSUFBQUMsRUFBQUQsRUFBQTZsQixVQUFrQjVsQixFQUFBd3hDLGVBQUF6SixHQUFBaG9DLEVBQUFDLEVBQUF3eEMsZUFBQXh4QyxFQUFBd3hDLGlCQUFBeHhDLEVBQUE4SyxTQUFBOUssRUFBQThLLFNBQUFpOUIsR0FBQWhvQyxFQUFBQyxFQUFBOEssU0FBQSxHQUFtR2dpQyxHQUFBL3NDLEVBQUFDLEVBQUF1OEIsZUFDN2QsU0FBQWtWLEdBQUExeEMsRUFBQUMsRUFBQXBGLEdBQW1CLElBQUFDLEVBQUFtRixFQUFBdEUsS0FBQXNHLEVBQUFoQyxFQUFBMG9DLGFBQUExMEIsRUFBQWhVLEVBQUE0b0MsY0FBZ0QsVUFBQTVvQyxFQUFBMjJCLFdBQUEsQ0FBeUIzaUIsRUFBQSxLQUFPLElBQUEyRSxHQUFBLE9BQVMzRSxFQUFBLENBQVEwOUIsV0FBQSxPQUFBMTlCLElBQUEwOUIsV0FBQSxHQUFtQy80QixHQUFBLEVBQUEzWSxFQUFBMjJCLFlBQUEsR0FBdUIsVUFBQTUyQixFQUFBLEdBQUE0WSxFQUFBLENBQWtCLElBQUE4RixFQUFBemMsRUFBQTJ2QyxTQUFpQjV4QyxFQUFBd3BDLEdBQUEsS0FBQTF1QyxFQUFBLFFBQW9CLE1BQUFtRixFQUFBdEUsUUFBQXFFLEVBQUFtUixNQUFBLE9BQUFsUixFQUFBNG9DLGNBQUE1b0MsRUFBQWtSLFlBQUFsUixFQUFBa1IsT0FBdUVyVyxFQUFBMHVDLEdBQUE5cUIsRUFBQTVqQixFQUFBRCxFQUFBLE1BQWlCbUYsRUFBQSsyQixRQUFBajhCLEdBQVlELEVBQUFtRixHQUFJMG1CLE9BQUE1ckIsRUFBQTRyQixPQUFBem1CLE9BQW9CcEYsRUFBQUMsRUFBQTR4QyxHQUFBenNDLEVBQUEsS0FBQWdDLEVBQUE2SyxTQUFBalMsUUFBaUMsT0FBQW1GLEVBQUE2b0MsZUFBQW5xQixHQUFBNWpCLEVBQUFrRixFQUFBbVIsT0FBQTRsQixRQUFBbmUsR0FBQS9kLEVBQUFvSCxFQUFBMnZDLFNBQUEzdkMsRUFBQXFuQyxHQUFBeHVDLElBQUE2dEMsY0FBQSxNQUFBMW9DLEVBQUF0RSxTQUFBaWQsRUFBQSxPQUNsWTNZLEVBQUE0b0MsY0FBQTVvQyxFQUFBa1IsWUFBQWxSLEVBQUFrUixTQUFBclcsRUFBQXFXLFFBQUFsUCxFQUFBa1AsTUFBQXlILElBQUE5ZCxFQUFBbUgsRUFBQTgwQixRQUFBdVMsR0FBQTVxQixFQUFBN2pCLEVBQUE2akIsRUFBQTBxQixnQkFBQXZ1QyxFQUFBb0gsSUFBQWtuQyxvQkFBQSxFQUFBdHVDLEVBQUE2ckIsT0FBQTVyQixFQUFBNHJCLE9BQUF6bUIsR0FBQXBGLEVBQUFDLEVBQUEyeEMsR0FBQXhzQyxFQUFBbkYsRUFBQXFXLE1BQUFsUCxFQUFBNkssU0FBQWpTLEtBQUE2akIsRUFBQTFlLEVBQUFtUixNQUFBeUgsS0FBQTNXLEVBQUEydkMsVUFBQTN2QyxFQUFBdW5DLEdBQUEsS0FBQTF1QyxFQUFBLFNBQUFxVyxNQUFBdU4sRUFBQSxNQUFBemUsRUFBQXRFLFFBQUFzRyxFQUFBa1AsTUFBQSxPQUFBbFIsRUFBQTRvQyxjQUFBNW9DLEVBQUFrUixZQUFBbFIsRUFBQWtSLFFBQUFyVyxFQUFBbUgsRUFBQTgwQixRQUFBeVMsR0FBQTV3QixFQUFBOWQsRUFBQUQsRUFBQSxPQUFBKzdCLFdBQUEsRUFBQS83QixFQUFBb0gsSUFBQWtuQyxvQkFBQSxFQUFBdHVDLEVBQUE2ckIsT0FBQTVyQixFQUFBNHJCLE9BQUF6bUIsR0FBQW5GLEVBQUFELEVBQUE0eEMsR0FBQXhzQyxFQUFBeWUsRUFBQXpjLEVBQUE2SyxTQUFBalMsSUFBQW9GLEVBQUE0bEIsVUFBQTdsQixFQUFBNmxCLFVBQStkLE9BQTVCNWxCLEVBQUE0b0MsY0FBQTUwQixFQUFrQmhVLEVBQUFrUixNQUFBdFcsRUFBVUMsRUFDL2QsU0FBQWcyQyxHQUFBOXdDLEVBQUFDLEVBQUFwRixHQUEyRSxHQUF4RCxPQUFBbUYsSUFBQUMsRUFBQTJvQyxvQkFBQTVvQyxFQUFBNG9DLHFCQUF3RDNvQyxFQUFBa3BDLG9CQUFBdHVDLEVBQUEsWUFBbUYsR0FBNUMsT0FBQW1GLEdBQUFDLEVBQUFrUixRQUFBblIsRUFBQW1SLE9BQUFnTixFQUFBLE9BQTRDLE9BQUFsZSxFQUFBa1IsTUFBQSxDQUErRSxJQUFsRHRXLEVBQUF5dUMsR0FBVnRwQyxFQUFBQyxFQUFBa1IsTUFBVW5SLEVBQUEyb0MsYUFBQTNvQyxFQUFBb3BDLGdCQUF3Q25wQyxFQUFBa1IsTUFBQXRXLEVBQVVBLEVBQUE2ckIsT0FBQXptQixFQUFlLE9BQUFELEVBQUErMkIsU0FBaUIvMkIsSUFBQSsyQixTQUFBbDhCLElBQUFrOEIsUUFBQXVTLEdBQUF0cEMsSUFBQTJvQyxhQUFBM29DLEVBQUFvcEMsaUJBQUExaUIsT0FBQXptQixFQUEwRXBGLEVBQUFrOEIsUUFBQSxLQUFlLE9BQUE5MkIsRUFBQWtSLE1BQ3RXLFNBQUEwZ0MsR0FBQTd4QyxFQUFBQyxFQUFBcEYsR0FBbUIsSUFBQUMsRUFBQW1GLEVBQUFtcEMsZUFBdUIsVUFBQXBwQyxHQUFBLEdBQUFBLEVBQUErb0MsZ0JBQUE5b0MsRUFBQTBvQyxjQUFBanBCLEdBQUFDLFFBQUEwdkIsSUFBQSxPQUFzRSxHQUFBdjBDLEVBQUFELEVBQUEsQ0FBYyxPQUFOdzBDLElBQUEsRUFBTXB2QyxFQUFBb21CLEtBQWMsT0FBQW1yQixHQUFBdnhDLEdBQWF5d0MsS0FBSyxNQUFNLE9BQUF4RCxHQUFBanRDLEdBQWEsTUFBTSxPQUFBMmYsR0FBQTNmLEVBQUFzUyxPQUFBNDFCLEdBQUFsb0MsR0FBd0IsTUFBTSxPQUFBOHNDLEdBQUE5c0MsSUFBQTRsQixVQUFBMlcsZUFBdUMsTUFBTSxRQUFBc1YsR0FBQTd4QyxJQUFBOG9DLGNBQUF0dEMsT0FBb0MsTUFBTSxrQkFBQXdFLEVBQUE0b0MsY0FBaUUsWUFBOUIvdEMsRUFBQW1GLEVBQUFrUixNQUFBZzRCLHNCQUE4QnJ1QyxHQUFBRCxFQUFBNjJDLEdBQUExeEMsRUFBQUMsRUFBQXBGLEdBQTRDLFFBQVpvRixFQUFBNndDLEdBQUE5d0MsRUFBQUMsRUFBQXBGLElBQVlvRixFQUFBODJCLFFBQUEsS0FBZ0MsT0FBQStaLEdBQUE5d0MsRUFBQUMsRUFBQXBGLFNBQWtCdzBDLElBQUEsRUFBOEIsT0FBbkJwdkMsRUFBQW1wQyxlQUFBLEVBQW1CbnBDLEVBQUFvbUIsS0FBYyxPQUFBdnJCLEVBQ3ZmbUYsRUFBQXlvQyxZQUFjLE9BQUExb0MsTUFBQXUyQixVQUFBLEtBQUF0MkIsRUFBQXMyQixVQUFBLEtBQUF0MkIsRUFBQTIyQixXQUFBLEdBQTZENTJCLEVBQUFDLEVBQUEwb0MsYUFBaUIsSUFBQTFtQyxFQUFBMGxDLEdBQUExbkMsRUFBQXVmLEdBQUFHLFNBQWtFLEdBQTVDa3hCLEdBQUE1d0MsRUFBQXBGLEdBQVFvSCxFQUFBd3NDLEdBQUEsS0FBQXh1QyxFQUFBbkYsRUFBQWtGLEVBQUFpQyxFQUFBcEgsR0FBcUJvRixFQUFBMjJCLFdBQUEsRUFBZSxpQkFBQTMwQixHQUFBLE9BQUFBLEdBQUEsbUJBQUFBLEVBQUE0SyxhQUFBLElBQUE1SyxFQUFBNFEsU0FBQSxDQUFrRyxHQUFiNVMsRUFBQW9tQixJQUFBLEVBQVF3b0IsS0FBS2p2QixHQUFBOWtCLEdBQUEsQ0FBUyxJQUFBbVosR0FBQSxFQUFTazBCLEdBQUFsb0MsUUFBTWdVLEdBQUEsRUFBVWhVLEVBQUE0b0MsY0FBQSxPQUFBNW1DLEVBQUFQLFlBQUEsSUFBQU8sRUFBQVAsTUFBQU8sRUFBQVAsTUFBQSxLQUE4RCxJQUFBa1gsRUFBQTlkLEVBQUFzWCx5QkFBaUMsbUJBQUF3RyxHQUFBOHhCLEdBQUF6cUMsRUFBQW5GLEVBQUE4ZCxFQUFBNVksR0FBbUNpQyxFQUFBa2QsUUFBQXlyQixHQUFhM3FDLEVBQUE0bEIsVUFBQTVqQixFQUFjQSxFQUFBNG9DLG9CQUFBNXFDLEVBQXdCNHJDLEdBQUE1ckMsRUFBQW5GLEVBQUFrRixFQUFBbkYsR0FBWW9GLEVBQUFzeEMsR0FBQSxLQUFBdHhDLEVBQUFuRixHQUFBLEVBQUFtWixFQUNuZXBaLFFBQUdvRixFQUFBb21CLElBQUEsRUFBQTFGLEdBQUEsS0FBQTFnQixFQUFBZ0MsRUFBQXBILEdBQUFvRixJQUFBa1IsTUFBcUMsT0FBQWxSLEVBQVMsUUFBdUosT0FBdkpnQyxFQUFBaEMsRUFBQXlvQyxZQUF3QixPQUFBMW9DLE1BQUF1MkIsVUFBQSxLQUFBdDJCLEVBQUFzMkIsVUFBQSxLQUFBdDJCLEVBQUEyMkIsV0FBQSxHQUE2RDNpQixFQUFBaFUsRUFBQTBvQyxhQUFpQjNvQyxFQW5EdkosU0FBQUEsR0FBZSxJQUFBQyxFQUFBRCxFQUFBb2lCLFFBQWdCLE9BQUFwaUIsRUFBQW1pQixTQUFrQixjQUFBbGlCLEVBQWdCLE9BQWUsYUFBQUEsRUFBZSxRQUFvSyxPQUFwS0QsRUFBQW1pQixRQUFBLEdBQThCbGlCLEdBQVZBLEVBQUFELEVBQUFraUIsVUFBZ0I2dkIsS0FBQSxTQUFBOXhDLEdBQW1CLElBQUFELEVBQUFtaUIsVUFBQWxpQixJQUFBNmMsUUFBQTljLEVBQUFtaUIsUUFBQSxFQUFBbmlCLEVBQUFvaUIsUUFBQW5pQixJQUFxRCxTQUFBQSxHQUFhLElBQUFELEVBQUFtaUIsVUFBQW5pQixFQUFBbWlCLFFBQUEsRUFBQW5pQixFQUFBb2lCLFFBQUFuaUIsS0FBMkNELEVBQUFtaUIsU0FBa0IsY0FBQW5pQixFQUFBb2lCLFFBQXdCLGFBQUFwaUIsRUFBQW9pQixRQUFvQyxNQUFacGlCLEVBQUFvaUIsUUFBQW5pQixFQUFZQSxHQW1EMUwreEMsQ0FBQS92QyxHQUFRaEMsRUFBQXNTLEtBQUF2UyxFQUFTaUMsRUFBQWhDLEVBQUFvbUIsSUE1RDFHLFNBQUFybUIsR0FBZSxzQkFBQUEsRUFBQSxPQUFBcXBDLEdBQUFycEMsR0FBQSxJQUEwQyxTQUFBQSxFQUFBLENBQXNDLElBQWJBLElBQUE2UyxZQUFhMGMsR0FBQSxVQUFvQixHQUFBdnZCLElBQUF5dkIsR0FBQSxVQUFvQixTQTREN0J3aUIsQ0FBQWp5QyxHQUFjaVUsRUFBQTZMLEdBQUE5ZixFQUFBaVUsR0FBUzJFLE9BQUEsRUFBUzNXLEdBQVUsT0FBQTJXLEVBQUFxNEIsR0FBQSxLQUFBaHhDLEVBQUFELEVBQUFpVSxFQUFBcFosR0FBMEIsTUFBTSxPQUFBK2QsRUFBQXU0QixHQUFBLEtBQUFseEMsRUFBQUQsRUFBQWlVLEVBQUFwWixHQUEwQixNQUFNLFFBQUErZCxFQUFBZzRCLEdBQUEsS0FBQTN3QyxFQUFBRCxFQUFBaVUsRUFBQXBaLEdBQTJCLE1BQU0sUUFBQStkLEVBQUFtNEIsR0FBQSxLQUFBOXdDLEVBQUFELEVBQUE4ZixHQUFBOWYsRUFBQXVTLEtBQUEwQixHQUFBblosRUFBQUQsR0FBdUMsTUFBTSxRQUFBc2pCLEVBQUEsTUFBQW5lLEVBQUEsSUFBc0IsT0FBQTRZLEVBQVMsY0FBQTlkLEVBQUFtRixFQUFBc1MsS0FBQXRRLEVBQUFoQyxFQUFBMG9DLGFBQUFzSSxHQUFBanhDLEVBQUFDLEVBQUFuRixFQUFBbUgsRUFBQWhDLEVBQUF5b0MsY0FBQTV0QyxFQUFBbUgsRUFBQTZkLEdBQUFobEIsRUFBQW1ILEdBQUFwSCxHQUFtRixjQUFBQyxFQUFBbUYsRUFBQXNTLEtBQUF0USxFQUFBaEMsRUFBQTBvQyxhQUNsZHdJLEdBQUFueEMsRUFBQUMsRUFBQW5GLEVBQUFtSCxFQUFBaEMsRUFBQXlvQyxjQUFBNXRDLEVBQUFtSCxFQUFBNmQsR0FBQWhsQixFQUFBbUgsR0FBQXBILEdBQTJDLE9BQXNXLE9BQXRXMjJDLEdBQUF2eEMsR0FBNkIsUUFBaEJuRixFQUFBbUYsRUFBQTZvQyxjQUFnQjNxQixFQUFBLE9BQTJDbGMsRUFBQSxRQUFsQkEsRUFBQWhDLEVBQUE0b0MsZUFBa0I1bUMsRUFBQWlQLFFBQUEsS0FBMEI0NkIsR0FBQTdyQyxFQUFBbkYsRUFBQW1GLEVBQUEwb0MsYUFBQSxLQUFBOXRDLElBQThCQyxFQUFBbUYsRUFBQTRvQyxjQUFBMzNCLFdBQTBCalAsR0FBQXl1QyxLQUFBendDLEVBQUE2d0MsR0FBQTl3QyxFQUFBQyxFQUFBcEYsS0FBK0JvSCxFQUFBaEMsRUFBQTRsQixXQUFjNWpCLEdBQUEsT0FBQWpDLEdBQUEsT0FBQUEsRUFBQW1SLFFBQUFsUCxFQUFBMGIsV0FBQXd5QixHQUFBOUksR0FBQXBuQyxFQUFBNGxCLFVBQUEyVyxlQUFBMFQsR0FBQWp3QyxFQUFBZ0MsRUFBQW11QyxJQUFBLEdBQXlGbnVDLEdBQUFoQyxFQUFBMjJCLFdBQUEsRUFBQTMyQixFQUFBa1IsTUFBQXU3QixHQUFBenNDLEVBQUEsS0FBQW5GLEVBQUFELEtBQUE4bEIsR0FBQTNnQixFQUFBQyxFQUFBbkYsRUFBQUQsR0FBQTYxQyxNQUE0RHp3QyxJQUFBa1IsT0FBVWxSLEVBQVMsY0FBQWl0QyxHQUFBanRDLEdBQUEsT0FBQUQsR0FBQXV3QyxHQUFBdHdDLEdBQUFuRixFQUFBbUYsRUFBQXNTLEtBQUF0USxFQUFBaEMsRUFBQTBvQyxhQUFBMTBCLEVBQUEsT0FBQWpVLElBQUErb0MsY0FBQSxLQUMxWm53QixFQUFBM1csRUFBQTZLLFNBQUE0NUIsR0FBQTVyQyxFQUFBbUgsR0FBQTJXLEVBQUEsWUFBQTNFLEdBQUF5eUIsR0FBQTVyQyxFQUFBbVosS0FBQWhVLEVBQUEyMkIsV0FBQSxJQUFBc2EsR0FBQWx4QyxFQUFBQyxHQUFBLElBQUFwRixHQUFBLEVBQUFvRixFQUFBdEUsTUFBQXNHLEVBQUFpd0MsUUFBQWp5QyxFQUFBbXBDLGVBQUFucEMsRUFBQWtwQyxvQkFBQSxFQUFBbHBDLEVBQUEsT0FBQTBnQixHQUFBM2dCLEVBQUFDLEVBQUEyWSxFQUFBL2QsR0FBQW9GLElBQUFrUixPQUFBbFIsRUFBOEsscUJBQUFELEdBQUF1d0MsR0FBQXR3QyxHQUFBLEtBQW1DLGVBQUF5eEMsR0FBQTF4QyxFQUFBQyxFQUFBcEYsR0FBeUIsY0FBQWt5QyxHQUFBOXNDLElBQUE0bEIsVUFBQTJXLGVBQUExaEMsRUFBQW1GLEVBQUEwb0MsYUFBQSxPQUFBM29DLEVBQUFDLEVBQUFrUixNQUFBczdCLEdBQUF4c0MsRUFBQSxLQUFBbkYsRUFBQUQsR0FBQThsQixHQUFBM2dCLEVBQUFDLEVBQUFuRixFQUFBRCxHQUFBb0YsRUFBQWtSLE1BQWtILGVBQUFyVyxFQUFBbUYsRUFBQXNTLEtBQUF0USxFQUFBaEMsRUFBQTBvQyxhQUFBaUksR0FBQTV3QyxFQUFBQyxFQUFBbkYsRUFBQW1ILEVBQUFoQyxFQUFBeW9DLGNBQUE1dEMsRUFBQW1ILEVBQUE2ZCxHQUFBaGxCLEVBQUFtSCxHQUFBcEgsR0FBb0YsY0FBQThsQixHQUFBM2dCLEVBQUFDLElBQUEwb0MsYUFBQTl0QyxHQUFBb0YsRUFBQWtSLE1BQThDLE9BQ25kLGVBQUF3UCxHQUFBM2dCLEVBQUFDLElBQUEwb0MsYUFBQTc3QixTQUFBalMsR0FBQW9GLEVBQUFrUixNQUF3RCxRQUFBblIsRUFBQSxDQUFrRixHQUF2RWxGLEVBQUFtRixFQUFBc1MsS0FBQXdQLFNBQWtCOWYsRUFBQWhDLEVBQUEwb0MsYUFBaUIvdkIsRUFBQTNZLEVBQUE4b0MsY0FBNEIrSSxHQUFBN3hDLEVBQVZnVSxFQUFBaFMsRUFBQXhHLE9BQWtCLE9BQUFtZCxFQUFBLENBQWEsSUFBQThGLEVBQUE5RixFQUFBbmQsTUFBa0gsUUFBcEd3WSxFQUFBdWlCLEdBQUE5WCxFQUFBekssR0FBQSx3QkFBQW5aLEVBQUE2bUIsc0JBQUE3bUIsRUFBQTZtQixzQkFBQWpELEVBQUF6SyxHQUFBLGNBQThHLEdBQUEyRSxFQUFBOUwsV0FBQTdLLEVBQUE2SyxXQUFBNFMsR0FBQUMsUUFBQSxDQUF3QzFmLEVBQUE2d0MsR0FBQTl3QyxFQUFBQyxFQUFBcEYsR0FBWSxNQUFBbUYsUUFBUyxZQUFBMGUsRUFBQXplLEVBQUFrUixTQUFBdU4sRUFBQWdJLE9BQUF6bUIsR0FBMEMsT0FBQXllLEdBQVMsQ0FBRSxJQUFBamtCLEVBQUFpa0IsRUFBQWtxQixvQkFBNEIsVUFBQW51QyxFQUFBLENBQWFtZSxFQUFBOEYsRUFBQXZOLE1BQVUsUUFBQTdTLEVBQUE3RCxFQUFBMDNDLE1BQWtCLE9BQUE3ekMsR0FBUyxDQUFFLEdBQUFBLEVBQUF5TSxVQUFBalEsR0FBQSxJQUNoZXdELEVBQUE4ekMsYUFBQW4rQixHQUFBLENBQW9CLElBQUF5SyxFQUFBMkgsT0FBQS9uQixFQUFBeXNDLEdBQUFsd0MsSUFBQXdyQixJQUFBaWxCLEdBQUFILEdBQUF6c0IsRUFBQXBnQixJQUFzQ29nQixFQUFBMHFCLGVBQUF2dUMsSUFBQTZqQixFQUFBMHFCLGVBQUF2dUMsR0FBdUQsUUFBZHlELEVBQUFvZ0IsRUFBQTZYLFlBQWNqNEIsRUFBQThxQyxlQUFBdnVDLElBQUF5RCxFQUFBOHFDLGVBQUF2dUMsR0FBbUR5RCxFQUFBekQsRUFBSSxRQUFBRCxFQUFBOGpCLEVBQUFnSSxPQUFtQixPQUFBOXJCLEdBQVMsQ0FBRSxJQUFBMEIsRUFBQTFCLEVBQUEyN0IsVUFBa0IsR0FBQTM3QixFQUFBdXVDLG9CQUFBN3FDLEVBQUExRCxFQUFBdXVDLG9CQUFBN3FDLEVBQUEsT0FBQWhDLEtBQUE2c0Msb0JBQUE3cUMsSUFBQWhDLEVBQUE2c0Msb0JBQUE3cUMsT0FBZ0gsYUFBQWhDLEtBQUE2c0Msb0JBQUE3cUMsR0FBa0UsTUFBbEVoQyxFQUFBNnNDLG9CQUFBN3FDLEVBQTZFMUQsSUFBQThyQixPQUFXanNCLEVBQUEydUMsZUFBQXZ1QyxJQUFBSixFQUFBMnVDLGVBQUF2dUMsR0FBeUMsTUFBTXlELElBQUFnWSxXQUFVc0MsRUFBQSxLQUFBOEYsRUFBQTJILEtBQUEzSCxFQUFBbk0sT0FBQXRTLEVBQUFzUyxLQUN6ZCxLQUFBbU0sRUFBQXZOLE1BQXFCLFVBQUF5SCxJQUFBOE4sT0FBQWhJLE9BQXVCLElBQUE5RixFQUFBOEYsRUFBYSxPQUFBOUYsR0FBUyxDQUFFLEdBQUFBLElBQUEzWSxFQUFBLENBQVUyWSxFQUFBLEtBQU8sTUFBa0IsV0FBWjhGLEVBQUE5RixFQUFBbWUsU0FBWSxDQUFhclksRUFBQWdJLE9BQUE5TixFQUFBOE4sT0FBa0I5TixFQUFBOEYsRUFBSSxNQUFNOUYsSUFBQThOLE9BQVdoSSxFQUFBOUYsR0FBSytILEdBQUEzZ0IsRUFBQUMsRUFBQWdDLEVBQUE2SyxTQUFBalMsR0FBb0JvRixJQUFBa1IsTUFBVSxPQUFBbFIsRUFBUyxjQUFBZ0MsRUFBQWhDLEVBQUFzUyxLQUFBelgsR0FBQW1aLEVBQUFoVSxFQUFBMG9DLGNBQUE3N0IsU0FBQStqQyxHQUFBNXdDLEVBQUFwRixHQUFBQyxJQUFBbUgsRUFBQWdlLEdBQUFoZSxFQUFBZ1MsRUFBQW8rQix3QkFBQXB5QyxFQUFBMjJCLFdBQUEsRUFBQWpXLEdBQUEzZ0IsRUFBQUMsRUFBQW5GLEVBQUFELEdBQUFvRixFQUFBa1IsTUFBcUksZUFBQThDLEVBQUE2TCxHQUFBN2QsRUFBQWhDLEVBQUFzUyxLQUFBdFMsRUFBQTBvQyxjQUFBb0ksR0FBQS93QyxFQUFBQyxFQUFBZ0MsRUFBQWdTLEVBQUE2TCxHQUFBN2QsRUFBQXNRLEtBQUEwQixHQUFBblosRUFBQUQsR0FBNEUsZUFBQW0yQyxHQUFBaHhDLEVBQUFDLElBQUFzUyxLQUFBdFMsRUFBQTBvQyxhQUFBN3RDLEVBQUFELEdBQWlELGVBQUFDLEVBQUFtRixFQUFBc1MsS0FBQXRRLEVBQUFoQyxFQUFBMG9DLGFBQUExbUMsRUFBQWhDLEVBQUF5b0MsY0FDemM1dEMsRUFBQW1ILEVBQUE2ZCxHQUFBaGxCLEVBQUFtSCxHQUFBLE9BQUFqQyxNQUFBdTJCLFVBQUEsS0FBQXQyQixFQUFBczJCLFVBQUEsS0FBQXQyQixFQUFBMjJCLFdBQUEsR0FBQTMyQixFQUFBb21CLElBQUEsRUFBQXpHLEdBQUE5a0IsSUFBQWtGLEdBQUEsRUFBQW1vQyxHQUFBbG9DLElBQUFELEdBQUEsRUFBQTZ3QyxHQUFBNXdDLEVBQUFwRixHQUFBNHdDLEdBQUF4ckMsRUFBQW5GLEVBQUFtSCxHQUFBNHBDLEdBQUE1ckMsRUFBQW5GLEVBQUFtSCxFQUFBcEgsR0FBQTAyQyxHQUFBLEtBQUF0eEMsRUFBQW5GLEdBQUEsRUFBQWtGLEVBQUFuRixHQUEySnNqQixFQUFBLE9BQVMsSUFBQW0wQixHQUFBLENBQVEzeUIsUUFBQSxNQUFhNHlCLEdBQUEsS0FBQUMsR0FBQSxLQUFBQyxHQUFBLEtBQXlCLFNBQUFYLEdBQUE5eEMsRUFBQUMsR0FBaUIsSUFBQXBGLEVBQUFtRixFQUFBdVMsS0FBQXdQLFNBQXNCMUMsR0FBQWl6QixHQUFBejNDLEVBQUErbUIsZUFBd0IvbUIsRUFBQSttQixjQUFBM2hCLEVBQWtCLFNBQUF5eUMsR0FBQTF5QyxHQUFlLElBQUFDLEVBQUFxeUMsR0FBQTN5QixRQUFpQlAsR0FBQWt6QixJQUFRdHlDLEVBQUF1UyxLQUFBd1AsU0FBQUgsY0FBQTNoQixFQUFnQyxTQUFBNHdDLEdBQUE3d0MsRUFBQUMsR0FBaUJzeUMsR0FBQXZ5QyxFQUFLeXlDLEdBQUFELEdBQUEsS0FBVyxJQUFBMzNDLEVBQUFtRixFQUFBNG9DLG9CQUE0QixPQUFBL3RDLEtBQUF1dUMsZ0JBQUFucEMsSUFBQW92QyxJQUFBLEdBQXVDcnZDLEVBQUE0b0Msb0JBQUEsS0FDL2MsU0FBQTNvQixHQUFBamdCLEVBQUFDLEdBQW9QLE9BQXBPd3lDLEtBQUF6eUMsSUFBQSxJQUFBQyxHQUFBLElBQUFBLElBQTBCLGlCQUFBQSxHQUFBLGFBQUFBLElBQUF3eUMsR0FBQXp5QyxFQUFBQyxFQUFBLFlBQXlEQSxFQUFBLENBQUc4SyxRQUFBL0ssRUFBQW95QyxhQUFBbnlDLEVBQUFxVyxLQUFBLE1BQW9DLE9BQUFrOEIsSUFBQSxPQUFBRCxJQUFBcDBCLEVBQUEsT0FBQXEwQixHQUFBdnlDLEVBQUFzeUMsR0FBQTNKLG9CQUFBLENBQWtFdUosTUFBQWx5QyxFQUFBbXBDLGVBQUEsSUFBeUJvSixNQUFBbDhCLEtBQUFyVyxHQUFlRCxFQUFBNGhCLGNBQXVCLElBQUErd0IsR0FBQSxFQUFBdEgsR0FBQSxFQUFBQyxHQUFBLEVBQUFzSCxHQUFBLEVBQUF4QixJQUFBLEVBQThCLFNBQUF5QixHQUFBN3lDLEdBQWUsT0FBTzJxQyxVQUFBM3FDLEVBQUE4eUMsWUFBQSxLQUFBQyxXQUFBLEtBQUFDLG9CQUFBLEtBQUFDLG1CQUFBLEtBQUFoSyxZQUFBLEtBQUFELFdBQUEsS0FBQWtLLG9CQUFBLEtBQUFDLG1CQUFBLE1BQy9ULFNBQUFDLEdBQUFwekMsR0FBZSxPQUFPMnFDLFVBQUEzcUMsRUFBQTJxQyxVQUFBbUksWUFBQTl5QyxFQUFBOHlDLFlBQUFDLFdBQUEveUMsRUFBQSt5QyxXQUFBQyxvQkFBQSxLQUFBQyxtQkFBQSxLQUFBaEssWUFBQSxLQUFBRCxXQUFBLEtBQUFrSyxvQkFBQSxLQUFBQyxtQkFBQSxNQUE0TSxTQUFBcEksR0FBQS9xQyxHQUFlLE9BQU9vcEMsZUFBQXBwQyxFQUFBcW1CLElBQUFzc0IsR0FBQTFILFFBQUEsS0FBQXJvQyxTQUFBLEtBQUEwVCxLQUFBLEtBQUE0eUIsV0FBQSxNQUE4RSxTQUFBbUssR0FBQXJ6QyxFQUFBQyxHQUFpQixPQUFBRCxFQUFBK3lDLFdBQUEveUMsRUFBQTh5QyxZQUFBOXlDLEVBQUEreUMsV0FBQTl5QyxHQUFBRCxFQUFBK3lDLFdBQUF6OEIsS0FBQXJXLEVBQUFELEVBQUEreUMsV0FBQTl5QyxHQUN2VixTQUFBa3JDLEdBQUFuckMsRUFBQUMsR0FBaUIsSUFBQXBGLEVBQUFtRixFQUFBdTJCLFVBQWtCLFVBQUExN0IsRUFBQSxDQUFhLElBQUFDLEVBQUFrRixFQUFBOG9DLFlBQW9CN21DLEVBQUEsS0FBVyxPQUFBbkgsTUFBQWtGLEVBQUE4b0MsWUFBQStKLEdBQUE3eUMsRUFBQTZvQyxxQkFBZ0QvdEMsRUFBQWtGLEVBQUE4b0MsWUFBQTdtQyxFQUFBcEgsRUFBQWl1QyxZQUFBLE9BQUFodUMsRUFBQSxPQUFBbUgsR0FBQW5ILEVBQUFrRixFQUFBOG9DLFlBQUErSixHQUFBN3lDLEVBQUE2b0MsZUFBQTVtQyxFQUFBcEgsRUFBQWl1QyxZQUFBK0osR0FBQWg0QyxFQUFBZ3VDLGdCQUFBL3RDLEVBQUFrRixFQUFBOG9DLFlBQUFzSyxHQUFBbnhDLEdBQUEsT0FBQUEsTUFBQXBILEVBQUFpdUMsWUFBQXNLLEdBQUF0NEMsSUFBeUwsT0FBQW1ILEdBQUFuSCxJQUFBbUgsRUFBQW94QyxHQUFBdjRDLEVBQUFtRixHQUFBLE9BQUFuRixFQUFBaTRDLFlBQUEsT0FBQTl3QyxFQUFBOHdDLFlBQUFNLEdBQUF2NEMsRUFBQW1GLEdBQUFvekMsR0FBQXB4QyxFQUFBaEMsS0FBQW96QyxHQUFBdjRDLEVBQUFtRixHQUFBZ0MsRUFBQTh3QyxXQUFBOXlDLEdBQ3hULFNBQUFxekMsR0FBQXR6QyxFQUFBQyxHQUFpQixJQUFBcEYsRUFBQW1GLEVBQUE4b0MsWUFBeUUsUUFBckRqdUMsRUFBQSxPQUFBQSxFQUFBbUYsRUFBQThvQyxZQUFBK0osR0FBQTd5QyxFQUFBNm9DLGVBQUEwSyxHQUFBdnpDLEVBQUFuRixJQUFxRG80QyxtQkFBQXA0QyxFQUFBbTRDLG9CQUFBbjRDLEVBQUFvNEMsbUJBQUFoekMsR0FBQXBGLEVBQUFvNEMsbUJBQUEzOEIsS0FBQXJXLEVBQUFwRixFQUFBbzRDLG1CQUFBaHpDLEdBQThILFNBQUFzekMsR0FBQXZ6QyxFQUFBQyxHQUFpQixJQUFBcEYsRUFBQW1GLEVBQUF1MkIsVUFBdUUsT0FBckQsT0FBQTE3QixHQUFBb0YsSUFBQXBGLEVBQUFpdUMsY0FBQTdvQyxFQUFBRCxFQUFBOG9DLFlBQUFzSyxHQUFBbnpDLElBQXFEQSxFQUNoVCxTQUFBdXpDLEdBQUF4ekMsRUFBQUMsRUFBQXBGLEVBQUFDLEVBQUFtSCxFQUFBZ1MsR0FBeUIsT0FBQXBaLEVBQUF3ckIsS0FBYyxLQUFBZ2xCLEdBQUEseUJBQUFyckMsRUFBQW5GLEVBQUFvd0MsU0FBQWpyQyxFQUFBckYsS0FBQXNaLEVBQUFuWixFQUFBbUgsR0FBQWpDLEVBQWlFLEtBQUE0eUMsR0FBQTV5QyxFQUFBNDJCLFdBQUEsS0FBQTUyQixFQUFBNDJCLFVBQUEsR0FBeUMsS0FBQStiLEdBQTRELFVBQXhDMXdDLEVBQUEsbUJBQXBCakMsRUFBQW5GLEVBQUFvd0MsU0FBb0JqckMsRUFBQXJGLEtBQUFzWixFQUFBblosRUFBQW1ILEdBQUFqQyxHQUF3QyxNQUE4QixPQUFBL0QsRUFBQSxHQUFXbkIsRUFBQW1ILEdBQU0sS0FBQXFwQyxHQUFBOEYsSUFBQSxFQUFjLE9BQUF0MkMsRUFDMVEsU0FBQWd4QyxHQUFBOXJDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsR0FBdUJtdkMsSUFBQSxFQUFnQixRQUFBbjlCLEdBQVZoVSxFQUFBc3pDLEdBQUF2ekMsRUFBQUMsSUFBVTBxQyxVQUFBL3hCLEVBQUEsS0FBQThGLEVBQUEsRUFBQWprQixFQUFBd0YsRUFBQTZ5QyxZQUFBeDBDLEVBQUEyVixFQUFxRCxPQUFBeFosR0FBUyxDQUFFLElBQUFHLEVBQUFILEVBQUEydUMsZUFBdUJ4dUMsRUFBQXFILEdBQUEsT0FBQTJXLE1BQUFuZSxFQUFBd1osRUFBQTNWLEdBQUFvZ0IsRUFBQTlqQixJQUFBOGpCLEVBQUE5akIsS0FBQTBELEVBQUFrMUMsR0FBQXh6QyxFQUFBQyxFQUFBeEYsRUFBQTZELEVBQUF6RCxFQUFBQyxHQUFBLE9BQUFMLEVBQUFtSSxXQUFBNUMsRUFBQTQyQixXQUFBLEdBQUFuOEIsRUFBQXl1QyxXQUFBLFlBQUFqcEMsRUFBQStvQyxXQUFBL29DLEVBQUFncEMsWUFBQWhwQyxFQUFBK29DLFdBQUF2dUMsR0FBQXdGLEVBQUErb0MsV0FBQUUsV0FBQXp1QyxFQUFBd0YsRUFBQStvQyxXQUFBdnVDLEtBQTRNQSxJQUFBNmIsS0FBZ0IsSUFBUDFiLEVBQUEsS0FBT0gsRUFBQXdGLEVBQUEreUMsb0JBQTRCLE9BQUF2NEMsR0FBUyxDQUFFLElBQUE2QixFQUFBN0IsRUFBQTJ1QyxlQUF1QjlzQyxFQUFBMkYsR0FBQSxPQUFBckgsTUFBQUgsRUFBQSxPQUFBbWUsSUFBQTNFLEVBQUEzVixJQUFBb2dCLEVBQUFwaUIsSUFBQW9pQixFQUFBcGlCLEtBQUFnQyxFQUFBazFDLEdBQUF4ekMsRUFBQUMsRUFBQXhGLEVBQUE2RCxFQUFBekQsRUFBQUMsR0FBQSxPQUFBTCxFQUFBbUksV0FBQTVDLEVBQUE0MkIsV0FDeFosR0FBQW44QixFQUFBeXVDLFdBQUEsWUFBQWpwQyxFQUFBa3pDLG1CQUFBbHpDLEVBQUFpekMsb0JBQUFqekMsRUFBQWt6QyxtQkFBQTE0QyxHQUFBd0YsRUFBQWt6QyxtQkFBQWpLLFdBQUF6dUMsRUFBQXdGLEVBQUFrekMsbUJBQUExNEMsS0FBMkpBLElBQUE2YixLQUFTLE9BQUFzQyxJQUFBM1ksRUFBQTh5QyxXQUFBLE1BQThCLE9BQUFuNEMsRUFBQXFGLEVBQUFnekMsbUJBQUEsS0FBQWp6QyxFQUFBNDJCLFdBQUEsR0FBbUQsT0FBQWhlLEdBQUEsT0FBQWhlLElBQUFxWixFQUFBM1YsR0FBMEIyQixFQUFBMHFDLFVBQUExMkIsRUFBY2hVLEVBQUE2eUMsWUFBQWw2QixFQUFnQjNZLEVBQUEreUMsb0JBQUFwNEMsRUFBd0JvRixFQUFBb3BDLGVBQUExcUIsRUFBbUIxZSxFQUFBNm9DLGNBQUF2cUMsRUFDeFYsU0FBQW0xQyxHQUFBenpDLEVBQUFDLEVBQUFwRixHQUFtQixPQUFBb0YsRUFBQSt5QyxzQkFBQSxPQUFBL3lDLEVBQUE4eUMsYUFBQTl5QyxFQUFBOHlDLFdBQUF6OEIsS0FBQXJXLEVBQUEreUMsb0JBQUEveUMsRUFBQTh5QyxXQUFBOXlDLEVBQUFnekMsb0JBQUFoekMsRUFBQSt5QyxvQkFBQS95QyxFQUFBZ3pDLG1CQUFBLE1BQWlMUyxHQUFBenpDLEVBQUFncEMsWUFBQXB1QyxHQUFvQm9GLEVBQUFncEMsWUFBQWhwQyxFQUFBK29DLFdBQUEsS0FBZ0MwSyxHQUFBenpDLEVBQUFpekMsb0JBQUFyNEMsR0FBNEJvRixFQUFBaXpDLG9CQUFBanpDLEVBQUFrekMsbUJBQUEsS0FBZ0QsU0FBQU8sR0FBQTF6QyxFQUFBQyxHQUFpQixLQUFLLE9BQUFELEdBQVMsQ0FBRSxJQUFBbkYsRUFBQW1GLEVBQUE0QyxTQUFpQixVQUFBL0gsRUFBQSxDQUFhbUYsRUFBQTRDLFNBQUEsS0FBZ0IsSUFBQTlILEVBQUFtRixFQUFRLG1CQUFBcEYsR0FBQXNqQixFQUFBLE1BQUF0akIsR0FBd0NBLEVBQUFGLEtBQUFHLEdBQVVrRixJQUFBa3BDLFlBQzdjLFNBQUF5SyxHQUFBM3pDLEVBQUFDLEdBQWlCLE9BQU94RSxNQUFBdUUsRUFBQW5ELE9BQUFvRCxFQUFBMnpDLE1BQUE5akIsR0FBQTd2QixJQUE4QixTQUFBNHpDLEdBQUE3ekMsR0FBZUEsRUFBQTQyQixXQUFBLEVBQWUsSUFBQWtkLFFBQUEsRUFBQUMsUUFBQSxFQUFBQyxRQUFBLEVBQUFDLFFBQUEsRUFBNENILEdBQUEsU0FBQTl6QyxFQUFBQyxHQUFpQixRQUFBcEYsRUFBQW9GLEVBQUFrUixNQUFrQixPQUFBdFcsR0FBUyxDQUFFLE9BQUFBLEVBQUF3ckIsS0FBQSxJQUFBeHJCLEVBQUF3ckIsSUFBQXJtQixFQUFBNGhDLFlBQUEvbUMsRUFBQWdyQixnQkFBbUQsT0FBQWhyQixFQUFBd3JCLEtBQUEsT0FBQXhyQixFQUFBc1csTUFBQSxDQUFtQ3RXLEVBQUFzVyxNQUFBdVYsT0FBQTdyQixFQUFpQkEsSUFBQXNXLE1BQVUsU0FBUyxHQUFBdFcsSUFBQW9GLEVBQUEsTUFBZSxLQUFLLE9BQUFwRixFQUFBazhCLFNBQWlCLENBQUUsVUFBQWw4QixFQUFBNnJCLFFBQUE3ckIsRUFBQTZyQixTQUFBem1CLEVBQUEsT0FBd0NwRixJQUFBNnJCLE9BQVc3ckIsRUFBQWs4QixRQUFBclEsT0FBQTdyQixFQUFBNnJCLE9BQTBCN3JCLElBQUFrOEIsVUFBY2dkLEdBQUEsYUFDMWFDLEdBQUEsU0FBQWgwQyxFQUFBQyxFQUFBcEYsRUFBQUMsRUFBQW1ILEdBQXVCLElBQUFnUyxFQUFBalUsRUFBQStvQyxjQUFzQixHQUFBOTBCLElBQUFuWixFQUFBLENBQVUsSUFBQThkLEVBQUEzWSxFQUFBNGxCLFVBQXVDLE9BQXJCaW5CLEdBQUEzc0IsR0FBQVIsU0FBYzNmLEVBQUEsS0FBT25GLEdBQVUsWUFBQW9aLEVBQUFxZCxHQUFBMVksRUFBQTNFLEdBQXVCblosRUFBQXcyQixHQUFBMVksRUFBQTlkLEdBQVVrRixFQUFBLEdBQUssTUFBTSxhQUFBaVUsRUFBQWlzQixHQUFBdG5CLEVBQUEzRSxHQUF3Qm5aLEVBQUFvbEMsR0FBQXRuQixFQUFBOWQsR0FBVWtGLEVBQUEsR0FBSyxNQUFNLGFBQUFpVSxFQUFBaFksRUFBQSxHQUFvQmdZLEVBQUEsQ0FBSXhZLFdBQUEsSUFBZVgsRUFBQW1CLEVBQUEsR0FBTW5CLEVBQUEsQ0FBSVcsV0FBQSxJQUFldUUsRUFBQSxHQUFLLE1BQU0sZUFBQWlVLEVBQUFzc0IsR0FBQTNuQixFQUFBM0UsR0FBMEJuWixFQUFBeWxDLEdBQUEzbkIsRUFBQTlkLEdBQVVrRixFQUFBLEdBQUssTUFBTSwyQkFBQWlVLEVBQUFpZ0MsU0FBQSxtQkFBQXA1QyxFQUFBbzVDLFVBQUF0N0IsRUFBQXU3QixRQUFBOU4sSUFBcUZKLEdBQUFwckMsRUFBQUMsR0FBUThkLEVBQUEvZCxPQUFBLEVBQVcsSUFBQTZqQixFQUFBLEtBQVcsSUFBQTdqQixLQUFBb1osRUFBQSxJQUFBblosRUFBQXVCLGVBQUF4QixJQUFBb1osRUFBQTVYLGVBQUF4QixJQUFBLE1BQUFvWixFQUFBcFosR0FBQSxhQUM5YUEsRUFBQSxDQUFHLElBQUFKLEVBQUF3WixFQUFBcFosR0FBVyxJQUFBK2QsS0FBQW5lLElBQUE0QixlQUFBdWMsS0FBQThGLE1BQUEsSUFBeUNBLEVBQUE5RixHQUFBLFFBQVcsNEJBQUEvZCxHQUFBLGFBQUFBLEdBQUEsbUNBQUFBLEdBQUEsNkJBQUFBLEdBQUEsY0FBQUEsSUFBQTRwQixFQUFBcG9CLGVBQUF4QixHQUFBbUYsTUFBQSxLQUFBQSxLQUFBLElBQUFpRCxLQUFBcEksRUFBQSxPQUFrTSxJQUFBQSxLQUFBQyxFQUFBLENBQVksSUFBQXdELEVBQUF4RCxFQUFBRCxHQUFpQyxHQUF0QkosRUFBQSxNQUFBd1osSUFBQXBaLFFBQUEsRUFBc0JDLEVBQUF1QixlQUFBeEIsSUFBQXlELElBQUE3RCxJQUFBLE1BQUE2RCxHQUFBLE1BQUE3RCxHQUFBLGFBQUFJLEVBQUEsR0FBQUosRUFBQSxDQUF1RSxJQUFBbWUsS0FBQW5lLEtBQUE0QixlQUFBdWMsSUFBQXRhLEtBQUFqQyxlQUFBdWMsS0FBQThGLE1BQUEsSUFBa0VBLEVBQUE5RixHQUFBLElBQVcsSUFBQUEsS0FBQXRhLElBQUFqQyxlQUFBdWMsSUFBQW5lLEVBQUFtZSxLQUFBdGEsRUFBQXNhLEtBQUE4RixJQUNyY0EsRUFBQSxJQUFLQSxFQUFBOUYsR0FBQXRhLEVBQUFzYSxTQUFhOEYsSUFBQTFlLE1BQUEsSUFBQUEsRUFBQWlELEtBQUFwSSxFQUFBNmpCLE1BQUFwZ0IsTUFBb0MsNEJBQUF6RCxHQUFBeUQsTUFBQXFvQyxZQUFBLEVBQUFsc0MsTUFBQWtzQyxZQUFBLFFBQUFyb0MsR0FBQTdELElBQUE2RCxJQUFBMEIsS0FBQSxJQUFBaUQsS0FBQXBJLEVBQUEsR0FBQXlELElBQUEsYUFBQXpELEVBQUFKLElBQUE2RCxHQUFBLGlCQUFBQSxHQUFBLGlCQUFBQSxJQUFBMEIsS0FBQSxJQUFBaUQsS0FBQXBJLEVBQUEsR0FBQXlELEdBQUEsbUNBQUF6RCxHQUFBLDZCQUFBQSxJQUFBNHBCLEVBQUFwb0IsZUFBQXhCLElBQUEsTUFBQXlELEdBQUE2bkMsR0FBQWxrQyxFQUFBcEgsR0FBQW1GLEdBQUF2RixJQUFBNkQsSUFBQTBCLEVBQUEsTUFBQUEsS0FBQSxJQUFBaUQsS0FBQXBJLEVBQUF5RCxJQUErVm9nQixJQUFBMWUsS0FBQSxJQUFBaUQsS0FBQSxRQUFBeWIsR0FBNkJ6YyxFQUFBakMsR0FBSUMsRUFBQTZvQyxZQUFBN21DLElBQUE0eEMsR0FBQTV6QyxLQUEyQmcwQyxHQUFBLFNBQUFqMEMsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQXFCRCxJQUFBQyxHQUFBKzRDLEdBQUE1ekMsSUFDdGUsSUFBQW0wQyxHQUFBLG1CQUFBQyxnQkFBQS9NLElBQStDLFNBQUFnTixHQUFBdDBDLEVBQUFDLEdBQWlCLElBQUFwRixFQUFBb0YsRUFBQXBELE9BQUEvQixFQUFBbUYsRUFBQTJ6QyxNQUF5QixPQUFBOTRDLEdBQUEsT0FBQUQsSUFBQUMsRUFBQWcxQixHQUFBajFCLElBQThCLE9BQUFBLEdBQUFnMUIsR0FBQWgxQixFQUFBMFgsTUFBcUJ0UyxJQUFBeEUsTUFBVSxPQUFBdUUsR0FBQSxJQUFBQSxFQUFBcW1CLEtBQUF3SixHQUFBN3ZCLEVBQUF1UyxNQUFnQyxJQUFJb0csUUFBQXpFLE1BQUFqVSxHQUFpQixNQUFBZ0MsR0FBUzRrQyxXQUFBLFdBQXNCLE1BQUE1a0MsS0FBWSxTQUFBc3lDLEdBQUF2MEMsR0FBZSxJQUFBQyxFQUFBRCxFQUFBMFIsSUFBWSxVQUFBelIsRUFBQSxzQkFBQUEsRUFBQSxJQUF5Q0EsRUFBQSxNQUFRLE1BQUFwRixHQUFTMjVDLEdBQUF4MEMsRUFBQW5GLFFBQVFvRixFQUFBMGYsUUFBQSxLQUNuVixTQUFBODBCLEdBQUF6MEMsRUFBQUMsRUFBQXBGLEdBQWdFLFdBQTdCQSxFQUFBLFFBQWhCQSxJQUFBaXVDLGFBQWdCanVDLEVBQUFtdUMsV0FBQSxNQUE2QixDQUFhLElBQUFsdUMsRUFBQUQsSUFBQXliLEtBQWUsR0FBRyxJQUFBeGIsRUFBQXVyQixJQUFBcm1CLEtBQUFvdEMsR0FBQSxDQUFtQixJQUFBbnJDLEVBQUFuSCxFQUFBNDBDLFFBQWdCNTBDLEVBQUE0MEMsYUFBQSxPQUFpQixJQUFBenRDLFFBQWdCbkgsRUFBQXVyQixJQUFBcG1CLEtBQUFtdEMsS0FBQW5yQyxFQUFBbkgsRUFBQWdCLE9BQUFoQixFQUFBNDBDLFFBQUF6dEMsS0FBMkNuSCxJQUFBd2IsV0FBU3hiLElBQUFELElBR3ZOLFNBQUE2NUMsR0FBQTEwQyxHQUE2QyxPQUE5QixtQkFBQXVvQyxPQUFBdm9DLEdBQThCQSxFQUFBcW1CLEtBQWMsbUNBQUFwbUIsRUFBQUQsRUFBQThvQyxZQUFtRCxVQUFBN29DLEdBQUEsUUFBQUEsSUFBQStvQyxZQUFBLENBQXdDLElBQUFudUMsRUFBQW9GLElBQUFxVyxLQUFlLEdBQUcsSUFBQXhiLEVBQUFELEVBQUE2MEMsUUFBZ0IsWUFBQTUwQyxFQUFBLENBQWUsSUFBQW1ILEVBQUFqQyxFQUFRLElBQUlsRixJQUFJLE1BQUFtWixHQUFTdWdDLEdBQUF2eUMsRUFBQWdTLElBQVNwWixJQUFBeWIsV0FBU3piLElBQUFvRixHQUFhLE1BQU0sT0FBMkIsR0FBM0JzMEMsR0FBQXYwQyxHQUEyQixtQkFBZEMsRUFBQUQsRUFBQTZsQixXQUFjaloscUJBQUEsSUFBa0QzTSxFQUFBb0UsTUFBQXJFLEVBQUErb0MsY0FBQTlvQyxFQUFBeUIsTUFBQTFCLEVBQUE2b0MsY0FBQTVvQyxFQUFBMk0sdUJBQXlFLE1BQUFxSCxHQUFTdWdDLEdBQUF4MEMsRUFBQWlVLEdBQVEsTUFBTSxPQUFBc2dDLEdBQUF2MEMsR0FBYSxNQUFNLE9BQUEyMEMsR0FBQTMwQyxJQUNyYyxTQUFBNDBDLEdBQUE1MEMsR0FBZSxXQUFBQSxFQUFBcW1CLEtBQUEsSUFBQXJtQixFQUFBcW1CLEtBQUEsSUFBQXJtQixFQUFBcW1CLElBQ2YsU0FBQXd1QixHQUFBNzBDLEdBQWVBLEVBQUEsQ0FBRyxRQUFBQyxFQUFBRCxFQUFBMG1CLE9BQW1CLE9BQUF6bUIsR0FBUyxDQUFFLEdBQUEyMEMsR0FBQTMwQyxHQUFBLENBQVUsSUFBQXBGLEVBQUFvRixFQUFRLE1BQUFELEVBQVFDLElBQUF5bUIsT0FBV3ZJLEVBQUEsT0FBU3RqQixPQUFBLEVBQVMsSUFBQUMsRUFBQW1GLE9BQUEsRUFBZSxPQUFBcEYsRUFBQXdyQixLQUFjLE9BQUFwbUIsRUFBQXBGLEVBQUFnckIsVUFBcUIvcUIsR0FBQSxFQUFLLE1BQU0sT0FBOEMsT0FBQW1GLEVBQUFwRixFQUFBZ3JCLFVBQUEyVyxjQUFtQzFoQyxHQUFBLEVBQUssTUFBTSxRQUFBcWpCLEVBQUEsT0FBaUIsR0FBQXRqQixFQUFBKzdCLFlBQUFtTCxHQUFBOWhDLEVBQUEsSUFBQXBGLEVBQUErN0IsWUFBQSxJQUE0QzUyQixFQUFBQyxFQUFBLElBQUFwRixFQUFBbUYsSUFBYSxDQUFFLEtBQUssT0FBQW5GLEVBQUFrOEIsU0FBaUIsQ0FBRSxVQUFBbDhCLEVBQUE2ckIsUUFBQWt1QixHQUFBLzVDLEVBQUE2ckIsUUFBQSxDQUFrQzdyQixFQUFBLEtBQU8sTUFBQW1GLEVBQVFuRixJQUFBNnJCLE9BQXFDLElBQTFCN3JCLEVBQUFrOEIsUUFBQXJRLE9BQUE3ckIsRUFBQTZyQixPQUEwQjdyQixJQUFBazhCLFFBQWdCLElBQUFsOEIsRUFBQXdyQixLQUFBLElBQUF4ckIsRUFBQXdyQixLQUFBLEtBQUF4ckIsRUFBQXdyQixLQUFpQyxDQUFFLEdBQzdlLEVBRDZleHJCLEVBQUErN0IsVUFDN2UsU0FBQTMyQixFQUFhLFVBQUFwRixFQUFBc1csT0FBQSxJQUFBdFcsRUFBQXdyQixJQUFBLFNBQUFwbUIsRUFBd0NwRixFQUFBc1csTUFBQXVWLE9BQUE3ckIsTUFBQXNXLE1BQWdDLE9BQUF0VyxFQUFBKzdCLFdBQUEsQ0FBcUIvN0IsSUFBQWdyQixVQUFjLE1BQUE3bEIsR0FBUyxRQUFBaUMsRUFBQWpDLElBQWEsQ0FBRSxPQUFBaUMsRUFBQW9rQixLQUFBLElBQUFwa0IsRUFBQW9rQixJQUFBLEdBQUF4ckIsRUFBQSxHQUFBQyxFQUFBLENBQW1DLElBQUFtWixFQUFBaFUsRUFBQTJZLEVBQUEzVyxFQUFBNGpCLFVBQUFuSCxFQUFBN2pCLEVBQTBCLElBQUFvWixFQUFBK1osU0FBQS9aLEVBQUFtUyxXQUFBMHVCLGFBQUFsOEIsRUFBQThGLEdBQUF6SyxFQUFBNmdDLGFBQUFsOEIsRUFBQThGLFFBQWtFemUsRUFBQTYwQyxhQUFBN3lDLEVBQUE0akIsVUFBQWhyQixRQUFtQ0MsR0FBQThkLEVBQUEzWSxFQUFBeWUsRUFBQXpjLEVBQUE0akIsVUFBQSxJQUFBak4sRUFBQW9WLFVBQUEvWixFQUFBMkUsRUFBQXdOLFlBQUEwdUIsYUFBQXAyQixFQUFBOUYsSUFBQTNFLEVBQUEyRSxHQUFBZ3BCLFlBQUFsakIsR0FBQSxPQUFBOUYsSUFBQW04QixzQkFBQSxPQUFBOWdDLEVBQUFrZ0MsVUFBQWxnQyxFQUFBa2dDLFFBQUE5TixLQUFBcG1DLEVBQUEyaEMsWUFBQTMvQixFQUFBNGpCLGdCQUNsVCxPQUFBNWpCLEVBQUFva0IsS0FBQSxPQUFBcGtCLEVBQUFrUCxNQUFBLENBQW1DbFAsRUFBQWtQLE1BQUF1VixPQUFBemtCLEVBQWlCQSxJQUFBa1AsTUFBVSxTQUFTLEdBQUFsUCxJQUFBakMsRUFBQSxNQUFlLEtBQUssT0FBQWlDLEVBQUE4MEIsU0FBaUIsQ0FBRSxVQUFBOTBCLEVBQUF5a0IsUUFBQXprQixFQUFBeWtCLFNBQUExbUIsRUFBQSxPQUF3Q2lDLElBQUF5a0IsT0FBV3prQixFQUFBODBCLFFBQUFyUSxPQUFBemtCLEVBQUF5a0IsT0FBMEJ6a0IsSUFBQTgwQixTQUMzTCxTQUFBNGQsR0FBQTMwQyxHQUFlLFFBQUFDLEVBQUFELEVBQUFuRixHQUFBLEVBQUFDLE9BQUEsRUFBQW1ILE9BQUEsSUFBb0MsQ0FBRSxJQUFBcEgsRUFBQSxDQUFPQSxFQUFBb0YsRUFBQXltQixPQUFXMW1CLEVBQUEsT0FBUSxDQUEyQixPQUF6QixPQUFBbkYsR0FBQXNqQixFQUFBLE9BQXlCdGpCLEVBQUF3ckIsS0FBYyxPQUFBdnJCLEVBQUFELEVBQUFnckIsVUFBcUI1akIsR0FBQSxFQUFLLE1BQUFqQyxFQUFRLE9BQWdELE9BQUFsRixFQUFBRCxFQUFBZ3JCLFVBQUEyVyxjQUFtQ3Y2QixHQUFBLEVBQUssTUFBQWpDLEVBQVFuRixJQUFBNnJCLE9BQVc3ckIsR0FBQSxFQUFLLE9BQUFvRixFQUFBb21CLEtBQUEsSUFBQXBtQixFQUFBb21CLElBQUEsQ0FBeUJybUIsRUFBQSxRQUFBaVUsRUFBQWhVLEVBQUEyWSxFQUFBM0UsSUFBbUIsR0FBQXlnQyxHQUFBOTdCLEdBQUEsT0FBQUEsRUFBQXpILE9BQUEsSUFBQXlILEVBQUF5TixJQUFBek4sRUFBQXpILE1BQUF1VixPQUFBOU4sTUFBQXpILFVBQStELENBQUssR0FBQXlILElBQUEzRSxFQUFBLE1BQWUsS0FBSyxPQUFBMkUsRUFBQW1lLFNBQWlCLENBQUUsVUFBQW5lLEVBQUE4TixRQUFBOU4sRUFBQThOLFNBQUF6UyxFQUFBLE1BQUFqVSxFQUF5QzRZLElBQUE4TixPQUFXOU4sRUFBQW1lLFFBQUFyUSxPQUFBOU4sRUFBQThOLE9BQTBCOU4sSUFBQW1lLFFBQVk5MEIsR0FDM2ZnUyxFQUFBblosRUFBQThkLEVBQUEzWSxFQUFBNGxCLFVBQUEsSUFBQTVSLEVBQUErWixTQUFBL1osRUFBQW1TLFdBQUF1YixZQUFBL29CLEdBQUEzRSxFQUFBMHRCLFlBQUEvb0IsSUFBQTlkLEVBQUE2bUMsWUFBQTFoQyxFQUFBNGxCLGdCQUEyRyxPQUFBNWxCLEVBQUFvbUIsS0FBbUIsVUFBQXBtQixFQUFBa1IsTUFBQSxDQUFtQnJXLEVBQUFtRixFQUFBNGxCLFVBQUEyVyxjQUE0QnY2QixHQUFBLEVBQUtoQyxFQUFBa1IsTUFBQXVWLE9BQUF6bUIsRUFBaUJBLElBQUFrUixNQUFVLGVBQVUsR0FBQXVqQyxHQUFBejBDLEdBQUEsT0FBQUEsRUFBQWtSLE1BQUEsQ0FBOEJsUixFQUFBa1IsTUFBQXVWLE9BQUF6bUIsRUFBaUJBLElBQUFrUixNQUFVLFNBQVMsR0FBQWxSLElBQUFELEVBQUEsTUFBZSxLQUFLLE9BQUFDLEVBQUE4MkIsU0FBaUIsQ0FBRSxVQUFBOTJCLEVBQUF5bUIsUUFBQXptQixFQUFBeW1CLFNBQUExbUIsRUFBQSxPQUFtRCxLQUFYQyxJQUFBeW1CLFFBQVdMLE1BQUF4ckIsR0FBQSxHQUFrQm9GLEVBQUE4MkIsUUFBQXJRLE9BQUF6bUIsRUFBQXltQixPQUEwQnptQixJQUFBODJCLFNBQy9aLFNBQUFpZSxHQUFBaDFDLEVBQUFDLEdBQWlCLE9BQUFBLEVBQUFvbUIsS0FBYywrQkFBQW91QixHQUFBbkgsR0FBQUMsR0FBQXR0QyxHQUEyQyxNQUFNLGFBQWEsV0FBQXBGLEVBQUFvRixFQUFBNGxCLFVBQXlCLFNBQUFockIsRUFBQSxDQUFZLElBQUFDLEVBQUFtRixFQUFBOG9DLGNBQXNCL29DLEVBQUEsT0FBQUEsSUFBQStvQyxjQUFBanVDLEVBQTZCLElBQUFtSCxFQUFBaEMsRUFBQXNTLEtBQUEwQixFQUFBaFUsRUFBQTZvQyxZQUE2QjdvQyxFQUFBNm9DLFlBQUEsS0FBbUIsT0FBQTcwQixHQWpHck8sU0FBQWpVLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsR0FBdUJqQyxFQUFBa21CLEdBQUFqa0IsRUFBUSxVQUFBcEgsR0FBQSxVQUFBb0gsRUFBQXNRLE1BQUEsTUFBQXRRLEVBQUFsSCxNQUFBKzJCLEdBQUE5eEIsRUFBQWlDLEdBQXFEbVosR0FBQXZnQixFQUFBQyxHQUFRQSxFQUFBc2dCLEdBQUF2Z0IsRUFBQW9ILEdBQVUsUUFBQWdTLEVBQUEsRUFBWUEsRUFBQWhVLEVBQUFyRCxPQUFXcVgsR0FBQSxHQUFNLElBQUEyRSxFQUFBM1ksRUFBQWdVLEdBQUF5SyxFQUFBemUsRUFBQWdVLEVBQUEsR0FBb0IsVUFBQTJFLEVBQUFvc0IsR0FBQWhsQyxFQUFBMGUsR0FBQSw0QkFBQTlGLEVBQUE0b0IsR0FBQXhoQyxFQUFBMGUsR0FBQSxhQUFBOUYsRUFBQW1wQixHQUFBL2hDLEVBQUEwZSxHQUFBb1MsR0FBQTl3QixFQUFBNFksRUFBQThGLEVBQUE1akIsR0FBNkYsT0FBQUQsR0FBVSxZQUFBazNCLEdBQUEveEIsRUFBQWlDLEdBQXFCLE1BQU0sZUFBQXkrQixHQUFBMWdDLEVBQUFpQyxHQUF3QixNQUFNLGFBQUFoQyxFQUFBRCxFQUFBeXhCLGNBQUF3akIsWUFBQWoxQyxFQUFBeXhCLGNBQUF3akIsY0FBQWh6QyxFQUFBaXpDLFNBQUEsT0FBQXI2QyxFQUFBb0gsRUFBQXhHLE9BQUEya0MsR0FBQXBnQyxJQUFBaUMsRUFBQWl6QyxTQUFBcjZDLEdBQUEsR0FBQW9GLE1BQUFnQyxFQUFBaXpDLFdBQUEsTUFBQWp6QyxFQUFBdXZCLGFBQUE0TyxHQUFBcGdDLElBQUFpQyxFQUFBaXpDLFNBQUFqekMsRUFBQXV2QixjQUN2VCxHQUFBNE8sR0FBQXBnQyxJQUFBaUMsRUFBQWl6QyxTQUFBanpDLEVBQUFpekMsU0FBQSxZQWdHcU9DLENBQUF0NkMsRUFBQW9aLEVBQUFoUyxFQUFBakMsRUFBQWxGLEdBQTBCLE1BQU0sY0FBQW1GLEVBQUE0bEIsV0FBQTFILEVBQUEsT0FBMENsZSxFQUFBNGxCLFVBQUFvYyxVQUFBaGlDLEVBQUE4b0MsY0FBc0MsTUFBTSxPQUFhLGNBQWMsUUFDeFcsR0FEd1dsdUMsRUFBQW9GLEVBQUE0b0MsY0FBMEIvdEMsT0FBQSxFQUFTa0YsRUFBQUMsRUFBSSxPQUFBcEYsRUFBQUMsR0FBQSxHQUFBQSxHQUFBLEVBQUFrRixFQUFBQyxFQUFBa1IsTUFBQSxJQUFBdFcsRUFBQTgyQyxhQUFBOTJDLEVBQUE4MkMsV0FBQTdHLE9BQXFFLE9BQUE5cUMsR0FUbGUsU0FBQUEsRUFBQUMsR0FBaUIsUUFBQXBGLEVBQUFtRixJQUFhLENBQUUsT0FBQW5GLEVBQUF3ckIsSUFBQSxDQUFjLElBQUF2ckIsRUFBQUQsRUFBQWdyQixVQUFrQixHQUFBNWxCLEVBQUFuRixFQUFBK3NCLE1BQUF1dEIsUUFBQSxXQUE0QixDQUFLdDZDLEVBQUFELEVBQUFnckIsVUFBYyxJQUFBNWpCLEVBQUFwSCxFQUFBa3VDLGNBQUFsaEIsTUFBNEI1bEIsRUFBQSxNQUFBQSxLQUFBNUYsZUFBQSxXQUFBNEYsRUFBQW16QyxRQUFBLEtBQW1FdDZDLEVBQUErc0IsTUFBQXV0QixRQUFBdFEsR0FBQSxVQUFBN2lDLFNBQWlDLE9BQUFwSCxFQUFBd3JCLElBQUF4ckIsRUFBQWdyQixVQUFBb2MsVUFBQWhpQyxFQUFBLEdBQUFwRixFQUFBa3VDLGtCQUE2RCxTQUFBbHVDLEVBQUF3ckIsS0FBQSxPQUFBeHJCLEVBQUFndUMsY0FBQSxFQUE0Qy90QyxFQUFBRCxFQUFBc1csTUFBQTRsQixTQUFrQnJRLE9BQUE3ckIsRUFBV0EsRUFBQUMsRUFBSSxTQUFTLFVBQUFELEVBQUFzVyxNQUFBLENBQXdCdFcsRUFBQXNXLE1BQUF1VixPQUFBN3JCLEVBQWlCQSxJQUFBc1csTUFBVSxVQUFTLEdBQUF0VyxJQUFBbUYsRUFBQSxNQUFlLEtBQUssT0FBQW5GLEVBQUFrOEIsU0FBaUIsQ0FBRSxVQUFBbDhCLEVBQUE2ckIsUUFDcmU3ckIsRUFBQTZyQixTQUFBMW1CLEVBQUEsT0FBb0JuRixJQUFBNnJCLE9BQVc3ckIsRUFBQWs4QixRQUFBclEsT0FBQTdyQixFQUFBNnJCLE9BQTBCN3JCLElBQUFrOEIsU0FReWFzZSxDQUFBcjFDLEVBQUFsRixHQUNwZCxRQURzZUQsRUFDcGZvRixFQUFBNm9DLGFBQWMsQ0FBYTdvQyxFQUFBNm9DLFlBQUEsS0FBbUIsSUFBQWx3QixFQUFBM1ksRUFBQTRsQixVQUFrQixPQUFBak4sTUFBQTNZLEVBQUE0bEIsVUFBQSxJQUFBdXVCLElBQWlDdjVDLEVBQUEwSSxRQUFBLFNBQUF2RCxHQUFzQixJQUFBbkYsRUErQjhMLFNBQUFtRixFQUFBQyxHQUFpQixJQUFBcEYsRUFBQW1GLEVBQUE2bEIsVUFBa0IsT0FBQWhyQixLQUFBMnhDLE9BQUF2c0MsR0FBNkJBLEVBQUErcUMsR0FBUC9xQyxFQUFBNnFDLEtBQU85cUMsR0FBb0IsUUFBVkEsRUFBQXMxQyxHQUFBdDFDLEVBQUFDLE1BQVU2cEMsR0FBQTlwQyxFQUFBQyxHQUFBLEtBQUFBLEVBQUFELEVBQUFvcEMsaUJBQUFtTSxHQUFBdjFDLEVBQUFDLEtBL0JsUmpFLEtBQUEsS0FBQWlFLEVBQUFELEdBQXdCNFksRUFBQTQ4QixJQUFBeDFDLEtBQUE0WSxFQUFBNjhCLElBQUF6MUMsS0FBQSt4QyxLQUFBbDNDLFFBQW1DLE1BQU0sY0FBYyxRQUFBc2pCLEVBQUEsUUFBa0IsSUFBQXUzQixHQUFBLG1CQUFBQyxnQkFBQXBKLElBQStDLFNBQUFxSixHQUFBNTFDLEVBQUFDLEVBQUFwRixJQUFtQkEsRUFBQWt3QyxHQUFBbHdDLElBQVF3ckIsSUFBQXVzQixHQUFTLzNDLEVBQUFvd0MsUUFBQSxDQUFXLzVCLFFBQUEsTUFBYyxJQUFBcFcsRUFBQW1GLEVBQUF4RSxNQUFtRCxPQUFyQ1osRUFBQStILFNBQUEsV0FBc0JpekMsR0FBQS82QyxHQUFNdzVDLEdBQUF0MEMsRUFBQUMsSUFBU3BGLEVBQ3ZYLFNBQUFpN0MsR0FBQTkxQyxFQUFBQyxFQUFBcEYsSUFBbUJBLEVBQUFrd0MsR0FBQWx3QyxJQUFRd3JCLElBQUF1c0IsR0FBUyxJQUFBOTNDLEVBQUFrRixFQUFBdVMsS0FBQUoseUJBQXNDLHNCQUFBclgsRUFBQSxDQUEwQixJQUFBbUgsRUFBQWhDLEVBQUF4RSxNQUFjWixFQUFBb3dDLFFBQUEsV0FBcUIsT0FBQW53QyxFQUFBbUgsSUFBYSxJQUFBZ1MsRUFBQWpVLEVBQUE2bEIsVUFBMFAsT0FBeE8sT0FBQTVSLEdBQUEsbUJBQUFBLEVBQUE4aEMsb0JBQUFsN0MsRUFBQStILFNBQUEsV0FBMEUsbUJBQUE5SCxJQUFBLE9BQUFrN0MsTUFBQSxJQUFBMU8sSUFBQSxDQUFBdnFDLE9BQUFpNUMsR0FBQVAsSUFBQTE0QyxPQUFtRSxJQUFBbEMsRUFBQW9GLEVBQUF4RSxNQUFBd0csRUFBQWhDLEVBQUEyekMsTUFBd0JVLEdBQUF0MEMsRUFBQUMsR0FBUWxELEtBQUFnNUMsa0JBQUFsN0MsRUFBQSxDQUEwQm83QyxlQUFBLE9BQUFoMEMsSUFBQSxPQUFpQ3BILEVBQzlZLFNBQUFxN0MsR0FBQWwyQyxHQUFlLE9BQUFBLEVBQUFxbUIsS0FBYyxPQUFBekcsR0FBQTVmLEVBQUF1UyxPQUFBdTFCLEtBQXdCLElBQUE3bkMsRUFBQUQsRUFBQTQyQixVQUFrQixZQUFBMzJCLEdBQUFELEVBQUE0MkIsV0FBQSxLQUFBMzJCLEVBQUEsR0FBQUQsR0FBQSxLQUE4QyxjQUFBaXRDLEtBQUFsRixLQUFBLFFBQUE5bkMsRUFBQUQsRUFBQTQyQixhQUFBelksRUFBQSxPQUFBbmUsRUFBQTQyQixXQUFBLEtBQUEzMkIsRUFBQSxHQUFBRCxFQUE0RixjQUFBbXRDLEdBQUFudEMsR0FBQSxLQUF5QixxQkFBQUMsRUFBQUQsRUFBQTQyQixZQUFBNTJCLEVBQUE0MkIsV0FBQSxLQUFBMzJCLEVBQUEsR0FBQUQsR0FBQSxLQUFvRSxvQkFBb0IsY0FBQWl0QyxLQUFBLEtBQXlCLGVBQUF5RixHQUFBMXlDLEdBQUEsS0FBMEIscUJBQ3JYLElBQUFtMkMsR0FBQXRuQixHQUFBdEwsdUJBQUE2eUIsR0FBQXZuQixHQUFBckwsa0JBQUE2eUIsR0FBQSxXQUFBQyxJQUFBLEVBQUExMUIsR0FBQSxLQUFBMjFCLEdBQUEsS0FBQTcxQixHQUFBLEVBQUE4MUIsSUFBQSxFQUFBQyxJQUFBLEVBQUF0MUIsR0FBQSxLQUFBdTFCLElBQUEsRUFBQUMsR0FBQSxLQUFBQyxHQUFBLEtBQUFDLEdBQUEsS0FBQWIsR0FBQSxLQUF5SixTQUFBYyxLQUFjLFVBQUFsMkIsR0FBQSxRQUFBNWdCLEVBQUE0Z0IsR0FBQThGLE9BQStCLE9BQUExbUIsR0FBUyxDQUFFLElBQUFDLEVBQUFELEVBQVEsT0FBQUMsRUFBQW9tQixLQUFjLFdBQUF4ckIsRUFBQW9GLEVBQUFzUyxLQUFBVCxrQkFBc0MsTUFBQWpYLEdBQUFpdEMsS0FBNEIsTUFBTSxPQUFBbUYsS0FBYWxGLEtBQU0sTUFBTSxPQUFBb0YsR0FBQWx0QyxHQUFhLE1BQU0sT0FBQWd0QyxLQUFhLE1BQU0sUUFBQXlGLEdBQUF6eUMsR0FBY0QsSUFBQTBtQixPQUFXNnZCLEdBQUEsS0FBUTcxQixHQUFBLEVBQUk4MUIsSUFBQSxFQUFNQyxJQUFBLEVBQU03MUIsR0FBQSxLQUMvWixTQUFBbTJCLEtBQWMsS0FBSyxPQUFBNTFCLElBQVMsQ0FBRSxJQUFBbmhCLEVBQUFtaEIsR0FBQXlWLFVBQTJDLEdBQXpCLEdBQUE1MkIsR0FBQStoQyxHQUFBNWdCLEdBQUEwRSxVQUFBLElBQXlCLElBQUE3bEIsRUFBQSxDQUFVLElBQUFDLEVBQUFraEIsR0FBQW9WLFVBQWtCLE9BQUF0MkIsSUFBQSxRQUFBQSxJQUFBeVIsT0FBQSxtQkFBQXpSLElBQUEsTUFBQUEsRUFBQTBmLFFBQUEsT0FBNkUsVUFBQTNmLEdBQWEsT0FBQTYwQyxHQUFBMXpCLElBQWFBLEdBQUF5VixZQUFBLEVBQWdCLE1BQU0sT0FBQWllLEdBQUExekIsSUFBYUEsR0FBQXlWLFlBQUEsRUFBZ0JvZSxHQUFBN3pCLEdBQUFvVixVQUFBcFYsSUFBa0IsTUFBTSxPQUFBNnpCLEdBQUE3ekIsR0FBQW9WLFVBQUFwVixJQUF5QixNQUFNLE9BQUF3ekIsR0FBQTMwQyxFQUFBbWhCLElBQUFuaEIsRUFBQTBtQixPQUFBLEtBQUExbUIsRUFBQW1SLE1BQUEsS0FBQW5SLEVBQUE2b0MsY0FBQSxLQUFBN29DLEVBQUE4b0MsWUFBQSxhQUFBOW9DLElBQUF1MkIsYUFBQXYyQixFQUFBMG1CLE9BQUEsS0FBQTFtQixFQUFBbVIsTUFBQSxLQUFBblIsRUFBQTZvQyxjQUFBLEtBQUE3b0MsRUFBQThvQyxZQUFBLE1BQWlMM25CLE1BQUErbkIsWUFDdmUsU0FBQThOLEtBQWMsS0FBSyxPQUFBNzFCLElBQVMsQ0FBRSxPQUFBQSxHQUFBeVYsVUFBQTUyQixFQUFBLENBQXNCLElBQUFBLEVBQUFtaEIsR0FBQW9WLFVBQUF0MkIsRUFBQWtoQixHQUFzQixPQUFBbGhCLEVBQUFvbUIsS0FBYyx1QkFBQW91QixHQUFBcEgsR0FBQUQsR0FBQW50QyxHQUFtQyxNQUFBRCxFQUFRLGNBQUFDLEVBQUEyMkIsV0FBQSxPQUFBNTJCLEVBQUEsQ0FBcUMsSUFBQW5GLEVBQUFtRixFQUFBK29DLGNBQUFqdUMsRUFBQWtGLEVBQUE2b0MsY0FBc0Q1b0MsR0FBZEQsRUFBQUMsRUFBQTRsQixXQUFja21CLHdCQUFBOXJDLEVBQUF5b0MsY0FBQXpvQyxFQUFBc1MsS0FBQTFYLEVBQUFpbEIsR0FBQTdmLEVBQUFzUyxLQUFBMVgsR0FBQUMsR0FBb0VrRixFQUFBaTNDLG9DQUFBaDNDLEVBQXdDLE1BQUFELEVBQVEsMENBQUFBLEVBQTRDLFFBQUFtZSxFQUFBLFFBQWtCZ0QsTUFBQStuQixZQUNoWixTQUFBZ08sR0FBQWwzQyxFQUFBQyxHQUFpQixLQUFLLE9BQUFraEIsSUFBUyxDQUFFLElBQUF0bUIsRUFBQXNtQixHQUFBeVYsVUFBa0IsTUFBQS83QixFQUFBLENBQVMsSUFBQUMsRUFBQXFtQixHQUFBb1YsVUFBQXQwQixFQUFBa2YsR0FBQWxOLEVBQUFoVSxFQUEwQixPQUFBZ0MsRUFBQW9rQixLQUFjLHVCQUFBb3VCLEdBQUFqSCxHQUFBQyxHQUFBeHJDLEdBQW1DLE1BQU0sV0FBQTJXLEVBQUEzVyxFQUFBNGpCLFVBQXlCLEtBQUE1akIsRUFBQTIwQixVQUFBLFVBQUE5N0IsRUFBQThkLEVBQUFqTSx3QkFBbUQsQ0FBSyxJQUFBK1IsRUFBQXpjLEVBQUF5bUMsY0FBQXptQyxFQUFBc1EsS0FBQXpYLEVBQUFpdUMsY0FBQWpwQixHQUFBN2QsRUFBQXNRLEtBQUF6WCxFQUFBaXVDLGVBQXVFbndCLEVBQUF6TCxtQkFBQXVSLEVBQUE1akIsRUFBQSt0QyxjQUFBandCLEVBQUFxK0IscUNBQThGLFFBQWhCbjhDLEVBQUFtSCxFQUFBNm1DLGNBQWdCMkssR0FBQXh4QyxFQUFBbkgsRUFBQThkLEdBQXNCLE1BQU0sT0FBdUIsV0FBdkI5ZCxFQUFBbUgsRUFBQTZtQyxhQUF1QixDQUFvQixHQUFQbHdCLEVBQUEsS0FBTyxPQUFBM1csRUFBQWtQLE1BQUEsT0FBQWxQLEVBQUFrUCxNQUFBa1YsS0FBc0MsT0FBQXpOLEVBQ2hmM1csRUFBQWtQLE1BQUEwVSxVQUFrQixNQUFNLE9BQUFqTixFQUFBM1csRUFBQWtQLE1BQUEwVSxVQUEyQjR0QixHQUFBeHhDLEVBQUFuSCxFQUFBOGQsR0FBWSxNQUFNLE9BQUEzRSxFQUFBaFMsRUFBQTRqQixVQUFxQixPQUFBL3FCLEdBQUEsRUFBQW1ILEVBQUEyMEIsV0FBQTRQLEdBQUF2a0MsRUFBQXNRLEtBQUF0USxFQUFBOG1DLGdCQUFBOTBCLEVBQUFzckIsUUFBK0QsTUFBTSxPQUFhLE9BQWEsUUFBYyxRQUFjLGNBQWMsUUFBQXBoQixFQUFBLFFBQWtCLElBQUF0akIsSUFBQSxRQUFBb0gsRUFBQWtmLEdBQUF6UCxPQUFBdUMsRUFBQWtOLEdBQUEwRSxVQUFBLG1CQUFBNWpCLElBQUFnUyxHQUFBaFMsRUFBQTBkLFFBQUExTCxJQUFrRixJQUFBcFosSUFBQTg3QyxHQUFBMzJDLEdBQWNtaEIsTUFBQStuQixZQUNsRyxTQUFBZ0MsS0FBYyxPQUFBMEwsSUFBQTFQLEdBQUEwUCxJQUFrQixPQUFBQyxTQUNuUixTQUFBTSxHQUFBbjNDLEVBQUFDLEdBQWlCeTJDLEdBQUFKLElBQUEsRUFBU3QyQyxFQUFBMmYsVUFBQTFmLEdBQUFrZSxFQUFBLE9BQThCLElBQUF0akIsRUFBQW1GLEVBQUFvM0MsNEJBQW9DLElBQUF2OEMsR0FBQXNqQixFQUFBLE9BQXNCbmUsRUFBQW8zQyw0QkFBQSxFQUFnQyxJQUFBdDhDLEVBQUFtRixFQUFBbXBDLGVBQUFubkMsRUFBQWhDLEVBQUFrcEMsb0JBQTRNLElBOUY5VixTQUFBbnBDLEVBQUFDLEdBQStCLEdBQWRELEVBQUErcEMsVUFBQSxFQUFjLElBQUE5cEMsRUFBQUQsRUFBQWdxQyxvQkFBQSxFQUFBaHFDLEVBQUFpcUMsa0JBQUEsRUFBQWpxQyxFQUFBcXFDLHNCQUFBLEVBQUFycUMsRUFBQXNxQyxvQkFBQSxFQUFBdHFDLEVBQUFvcUMsaUJBQUEsTUFBOEgsQ0FBS25xQyxFQUFBRCxFQUFBb3FDLG1CQUFBcHFDLEVBQUFvcUMsaUJBQUEsR0FBNkMsSUFBQXZ2QyxFQUFBbUYsRUFBQWlxQyxrQkFBMEIsSUFBQXB2QyxNQUFBb0YsRUFBQUQsRUFBQWdxQyxvQkFBQWhxQyxFQUFBaXFDLGtCQUFBLEVBQUFqcUMsRUFBQWdxQyxvQkFBQS9wQyxJQUFBRCxFQUFBZ3FDLG9CQUFBaHFDLEVBQUFpcUMsb0JBQXdKLEtBQTFCcHZDLEVBQUFtRixFQUFBcXFDLHVCQUEwQlAsR0FBQTlwQyxFQUFBQyxLQUFBRCxFQUFBc3FDLHFCQUFBdHFDLEVBQUFxcUMsc0JBQUEsRUFBQXJxQyxFQUFBc3FDLG9CQUFBLEVBQUF0cUMsRUFBQW9xQyxpQkFBQSxFQUFBTixHQUFBOXBDLEVBQUFDLElBQ2pZQSxFQUFBcEYsR0FBQWl2QyxHQUFBOXBDLEVBQUFDLEdBQWFpcUMsR0FBQSxFQUFBbHFDLEdBNkZvTHEzQyxDQUFBcjNDLEVBQUFpQyxFQUFBbkgsRUFBQW1ILEVBQUFuSCxHQUFjczdDLEdBQUF6MkIsUUFBQSxLQUFnQjdrQixPQUFBLEVBQVMsRUFBQW1GLEVBQUEyMkIsVUFBQSxPQUFBMzJCLEVBQUErb0MsWUFBQS9vQyxFQUFBK29DLFdBQUFFLFdBQUFqcEMsRUFBQW5GLEVBQUFtRixFQUFBZ3BDLGFBQUFudUMsRUFBQW1GLEVBQUFuRixFQUFBbUYsRUFBQWdwQyxZQUFrRzNDLEdBQUE1SixHQUFNNkosR0FqSWhWLFdBQWMsSUFBQXZtQyxFQUFBeTlCLEtBQVcsR0FBQUcsR0FBQTU5QixHQUFBLENBQVUsc0JBQUFBLEVBQUEsSUFBQUMsRUFBQSxDQUErQm8rQixNQUFBcitCLEVBQUFzK0IsZUFBQWp2QixJQUFBclAsRUFBQXUrQixtQkFBMkN2K0IsRUFBQSxDQUFxRCxJQUFBbkYsR0FBN0NvRixLQUFBRCxFQUFBa3lCLGdCQUFBanlCLEVBQUFvMkIsYUFBQXp5QixRQUE2QzQ2QixjQUFBditCLEVBQUF1K0IsZUFBdUMsR0FBQTNqQyxHQUFBLElBQUFBLEVBQUE0akMsV0FBQSxDQUF3QngrQixFQUFBcEYsRUFBQTZqQyxXQUFlLElBQUE1akMsRUFBQUQsRUFBQThqQyxhQUFBMThCLEVBQUFwSCxFQUFBK2pDLFVBQW1DL2pDLElBQUFna0MsWUFBZ0IsSUFBSTUrQixFQUFBK3RCLFNBQUEvckIsRUFBQStyQixTQUFzQixNQUFBeFAsR0FBU3ZlLEVBQUEsS0FBTyxNQUFBRCxFQUFRLElBQUFpVSxFQUFBLEVBQUEyRSxHQUFBLEVBQUE4RixHQUFBLEVBQUFqa0IsRUFBQSxFQUFBNkQsRUFBQSxFQUFBMUQsRUFBQW9GLEVBQUExRCxFQUFBLEtBQXFDMkQsRUFBQSxPQUFRLENBQUUsUUFBQXZFLEVBQWFkLElBQUFxRixHQUFBLElBQUFuRixHQUFBLElBQUFGLEVBQUFvekIsV0FBQXBWLEVBQUEzRSxFQUFBblosR0FBc0NGLElBQUFxSCxHQUFBLElBQUFwSCxHQUFBLElBQUFELEVBQUFvekIsV0FBQXRQLEVBQUF6SyxFQUFBcFosR0FBc0MsSUFBQUQsRUFBQW96QixXQUFBL1osR0FBQXJaLEVBQUFxbkMsVUFBQXJsQyxRQUM3ZCxRQUFBbEIsRUFBQWQsRUFBQXlpQyxhQUFpQy9nQyxFQUFBMUIsRUFBSUEsRUFBQWMsRUFBSSxPQUFNLENBQUUsR0FBQWQsSUFBQW9GLEVBQUEsTUFBQUMsRUFBNkQsR0FBNUMzRCxJQUFBMkQsS0FBQXhGLElBQUFLLElBQUE4ZCxFQUFBM0UsR0FBc0IzWCxJQUFBMkYsS0FBQTNELElBQUF6RCxJQUFBNmpCLEVBQUF6SyxHQUFzQixRQUFBdlksRUFBQWQsRUFBQTRpQyxhQUFBLE1BQXNDbGhDLEdBQUoxQixFQUFBMEIsR0FBSThwQixXQUFleHJCLEVBQUFjLEVBQUl1RSxHQUFBLElBQUEyWSxJQUFBLElBQUE4RixFQUFBLE1BQXVCMmYsTUFBQXpsQixFQUFBdkosSUFBQXFQLFFBQWV6ZSxFQUFBLEtBQVlBLEtBQUEsQ0FBTW8rQixNQUFBLEVBQUFodkIsSUFBQSxRQUFlcFAsRUFBQSxLQUFZLE9BQU84OUIsWUFBQS85QixFQUFBZytCLGVBQUEvOUIsR0FnSStFcTNDLEdBQVE1YSxJQUFBLEVBQU12YixHQUFBcm1CLEVBQVEsT0FBQXFtQixJQUFTLENBQUVsZixHQUFBLEVBQUssSUFBQWdTLE9BQUEsRUFBYSxJQUFJK2lDLEtBQUssTUFBQXQ0QixHQUFTemMsR0FBQSxFQUFBZ1MsRUFBQXlLLEVBQVN6YyxJQUFBLE9BQUFrZixJQUFBaEQsRUFBQSxPQUFBcTJCLEdBQUFyekIsR0FBQWxOLEdBQUEsT0FBQWtOLFdBQUErbkIsYUFBaUUsSUFBQS9uQixHQUFBcm1CLEVBQVEsT0FBQXFtQixJQUFTLENBQUVsZixHQUFBLEVBQ2xmZ1MsT0FBQSxFQUFTLElBQUk4aUMsS0FBSyxNQUFBcjRCLEdBQVN6YyxHQUFBLEVBQUFnUyxFQUFBeUssRUFBU3pjLElBQUEsT0FBQWtmLElBQUFoRCxFQUFBLE9BQUFxMkIsR0FBQXJ6QixHQUFBbE4sR0FBQSxPQUFBa04sV0FBQStuQixhQUE0RyxJQUEzQ3BMLEdBQUF5SSxJQUFPQSxHQUFBLEtBQVE3SixLQUFBNEosR0FBUUEsR0FBQSxLQUFRdG1DLEVBQUEyZixRQUFBMWYsRUFBWWtoQixHQUFBcm1CLEVBQVEsT0FBQXFtQixJQUFTLENBQUVsZixHQUFBLEVBQUtnUyxPQUFBLEVBQVMsSUFBSWlqQyxHQUFBbDNDLEVBQUFuRixHQUFRLE1BQUE2akIsR0FBU3pjLEdBQUEsRUFBQWdTLEVBQUF5SyxFQUFTemMsSUFBQSxPQUFBa2YsSUFBQWhELEVBQUEsT0FBQXEyQixHQUFBcnpCLEdBQUFsTixHQUFBLE9BQUFrTixXQUFBK25CLGFBQWlFLFVBQUFwdUMsR0FBQSxPQUFBNjdDLEdBQUEsQ0FBd0IsSUFBQS85QixFQUZ4UyxTQUFBNVksRUFBQUMsR0FBaUI0MkMsR0FBQUQsR0FBQUQsR0FBQSxLQUFjLElBQUE5N0MsRUFBQXdtQixHQUFRQSxJQUFBLEVBQUssR0FBRyxPQUFBcGhCLEVBQUEyMkIsVUFBQSxDQUFvQixJQUFBOTdCLEdBQUEsRUFBQW1ILE9BQUEsRUFBa0IsSUFBSSxJQUFBZ1MsRUFBQWhVLEVBQVF3MEMsR0FBQTlHLEdBQUFQLEdBQUFuNUIsR0FBWXdnQyxHQUFBckgsR0FBQU0sR0FBQXo1QixHQUFZLE1BQUEyRSxHQUFTOWQsR0FBQSxFQUFBbUgsRUFBQTJXLEVBQVM5ZCxHQUFBMDVDLEdBQUF2MEMsRUFBQWdDLEdBQVdoQyxJQUFBaXBDLGlCQUFlLE9BQUFqcEMsR0FBZ0JvaEIsR0FBQXhtQixFQUF1QixLQUFuQkEsRUFBQW1GLEVBQUFvcEMsaUJBQW1CbU0sR0FBQXYxQyxFQUFBbkYsR0FBZXltQixJQUFBRCxJQUFBazJCLEdBQUEsZ0JBRTZFdjdDLEtBQUEsS0FBQWdFLEVBQUFsRixHQUF3Qjg3QyxHQUFBdDdDLEVBQUFrOEMseUJBQUFsOEMsRUFBQW04Qyx3QkFBQSxXQUFtRSxPQUFBelEsR0FBQXB1QixLQUFlaStCLEdBQUFqK0IsRUFBSzA5QixHQUFBSSxJQUFBLEVBQVMsbUJBQUFwTyxPQUFBcm9DLEVBQUE0bEIsV0FBd0NockIsRUFBQW9GLEVBQUFtcEMsZUFDaGMsS0FEMmVucEMsR0FBeEJBLElBQUFrcEMscUJBQzNkdHVDLEVBQUFvRixFQUFBcEYsS0FBUW03QyxHQUFBLE1BdUJ5WixTQUFBaDJDLEVBQUFDLEdBQWlCRCxFQUFBb3BDLGVBQUFucEMsRUFBbUJELEVBQUEwM0MsYUFBQSxLQXZCNWFDLENBQUEzM0MsRUFBQUMsR0FDekIsU0FBQTIzQyxHQUFBNTNDLEdBQWUsT0FBTSxDQUFFLElBQUFDLEVBQUFELEVBQUF1MkIsVUFBQTE3QixFQUFBbUYsRUFBQTBtQixPQUFBNXJCLEVBQUFrRixFQUFBKzJCLFFBQXlDLFlBQUEvMkIsRUFBQTQyQixXQUFBLENBQTJCaFcsR0FBQTVnQixFQUFJQSxFQUFBLENBQUcsSUFBQWlDLEVBQUFoQyxFQUFZZ1UsRUFBQXlNLEdBQVE5SCxHQUFaM1ksRUFBQUQsR0FBWTJvQyxhQUFxQixPQUFBMW9DLEVBQUFvbUIsS0FBYyxPQUFhLGNBQWMscUJBQXFCLE9BQUF6RyxHQUFBM2YsRUFBQXNTLE9BQUF1MUIsS0FBd0IsTUFBTSxPQUFBbUYsS0FBYWxGLE1BQU1udkIsRUFBQTNZLEVBQUE0bEIsV0FBYzRyQixpQkFBQTc0QixFQUFBN04sUUFBQTZOLEVBQUE2NEIsZUFBQTc0QixFQUFBNjRCLGVBQUEsTUFBcUUsT0FBQXh2QyxHQUFBLE9BQUFBLEVBQUFrUCxRQUFBcy9CLEdBQUF4d0MsS0FBQTIyQixZQUFBLEdBQWtEbWQsR0FBQTl6QyxHQUFNLE1BQU0sT0FBQWt0QyxHQUFBbHRDLEdBQWEsSUFBQXllLEVBQUFvdUIsR0FBQUQsR0FBQWx0QixTQUE4QixHQUFUMUwsRUFBQWhVLEVBQUFzUyxLQUFTLE9BQUF0USxHQUFBLE1BQUFoQyxFQUFBNGxCLFVBQUFtdUIsR0FBQS94QyxFQUFBaEMsRUFBQWdVLEVBQUEyRSxFQUFBOEYsR0FBQXpjLEVBQUF5UCxNQUFBelIsRUFBQXlSLE1BQUF6UixFQUFBMjJCLFdBQ3RiLFVBQUssR0FBQWhlLEVBQUEsQ0FBVyxJQUFBbmUsRUFBQXF5QyxHQUFBM3NCLEdBQUFSLFNBQW9CLEdBQUE4d0IsR0FBQXh3QyxHQUFBLENBQWNnQyxHQUFKMlcsRUFBQTNZLEdBQUk0bEIsVUFBYyxJQUFBdm5CLEVBQUFzYSxFQUFBckcsS0FBQTNYLEVBQUFnZSxFQUFBbXdCLGNBQUF6c0MsRUFBQW9pQixFQUFnRSxPQUE3QnpjLEVBQUFna0IsR0FBQXJOLEVBQVEzVyxFQUFBaWtCLEdBQUF0ckIsRUFBUXFaLE9BQUEsRUFBU3lLLEVBQUFwZ0IsR0FBYywwQkFBQTJnQixHQUFBLE9BQUFoZCxHQUF3QyxNQUFNLDRCQUFBM0QsRUFBQSxFQUFrQ0EsRUFBQThwQixHQUFBeHJCLE9BQVkwQixJQUFBMmdCLEdBQUFtSixHQUFBOXBCLEdBQUEyRCxHQUFlLE1BQU0sYUFBQWdkLEdBQUEsUUFBQWhkLEdBQTJCLE1BQU0saUNBQUFnZCxHQUFBLFFBQUFoZCxHQUFpRGdkLEdBQUEsT0FBQWhkLEdBQVksTUFBTSxXQUFBZ2QsR0FBQSxRQUFBaGQsR0FBeUJnZCxHQUFBLFNBQUFoZCxHQUFjLE1BQU0sY0FBQWdkLEdBQUEsU0FBQWhkLEdBQTZCLE1BQU0sWUFBQTB2QixHQUFBMXZCLEVBQUFySCxHQUFxQnFrQixHQUFBLFVBQUFoZCxHQUFla2tDLEdBQUE3cEMsRUFBQSxZQUFpQixNQUFNLGFBQUEyRixFQUFBd3ZCLGNBQzFlLENBQUN3akIsY0FBQXI2QyxFQUFBczZDLFVBQTBCajJCLEdBQUEsVUFBQWhkLEdBQWVra0MsR0FBQTdwQyxFQUFBLFlBQWlCLE1BQU0sZUFBQW1rQyxHQUFBeCtCLEVBQUFySCxHQUFBcWtCLEdBQUEsVUFBQWhkLEdBQUFra0MsR0FBQTdwQyxFQUFBLFlBQXVFLElBQUEyWCxLQUFmZ3lCLEdBQUF2bkIsRUFBQTlqQixHQUFRMEQsRUFBQSxLQUFPMUQsSUFBQXlCLGVBQUE0WCxLQUFBeFosRUFBQUcsRUFBQXFaLEdBQUEsYUFBQUEsRUFBQSxpQkFBQXhaLEVBQUF3SCxFQUFBd21CLGNBQUFodUIsSUFBQTZELEVBQUEsWUFBQTdELElBQUEsaUJBQUFBLEdBQUF3SCxFQUFBd21CLGNBQUEsR0FBQWh1QixJQUFBNkQsRUFBQSxlQUFBN0QsSUFBQWdxQixFQUFBcG9CLGVBQUE0WCxJQUFBLE1BQUF4WixHQUFBMHJDLEdBQUE3cEMsRUFBQTJYLElBQTBOLE9BQUF5SyxHQUFVLFlBQUEwUCxHQUFBbnNCLEdBQW1CZ3dCLEdBQUFod0IsRUFBQXJILEdBQUEsR0FBVyxNQUFNLGVBQUF3ekIsR0FBQW5zQixHQUFzQjArQixHQUFBMStCLEdBQVEsTUFBTSxnQ0FBa0MsMkJBQUFySCxFQUFBczVDLFVBQ3RkanlDLEVBQUFreUMsUUFBQTlOLElBQWVweUIsRUFBQTNWLEVBQUlzYSxFQUFBa3dCLFlBQUE3MEIsR0FBZ0IyRSxFQUFBLE9BQUEzRSxJQUFpQjQvQixHQUFBNXpDLE9BQVMsQ0FBS3JGLEVBQUFxRixFQUFJM0QsRUFBQTJYLEVBQUloUyxFQUFBMlcsRUFBSXRhLEVBQUEsSUFBQW9nQixFQUFBc1AsU0FBQXRQLElBQUF3VCxjQUFtQ3ozQixJQUFBd21DLEdBQUFDLE9BQUF6bUMsRUFBQTRtQyxHQUFBL2tDLElBQXVCN0IsSUFBQXdtQyxHQUFBQyxLQUFBLFdBQUE1a0MsSUFBQTJGLEVBQUEzRCxFQUFBd0YsY0FBQSxRQUFBNDlCLFVBQUEscUJBQUFwakMsRUFBQTJELEVBQUEwL0IsWUFBQTEvQixFQUFBbzdCLGFBQUEsaUJBQUFwN0IsRUFBQWlrQyxHQUFBNW5DLElBQUF3RixjQUFBeEgsRUFBQSxDQUFpSzRwQyxHQUFBamtDLEVBQUFpa0MsTUFBUTVuQyxJQUFBd0YsY0FBQXhILEdBQUEsV0FBQUEsTUFBQWdDLEVBQUEyRCxFQUFBaXpDLFNBQUE1NEMsRUFBQTQ0QyxVQUFBLEVBQUFqekMsRUFBQTQxQyxPQUFBdjdDLEVBQUF1N0MsS0FBQTUxQyxFQUFBNDFDLFFBQUF2NUMsSUFBQXc1QyxnQkFBQXI5QyxFQUFBNkIsSUFBdUgyRixFQUFBM0QsR0FBSTJuQixHQUFBcnJCLEVBQVFxSCxFQUFBaWtCLEdBQUF0TixFQUFRazdCLEdBQUE3eEMsRUFBQWhDLEdBQUEsTUFBYzNELEVBQUEyRixFQUFZLElBQUF2RyxFQUFBZ2pCLEVBQUFGLEVBQUFwRCxHQUFSOWMsRUFBQTJWLEVBQUlyWixFQUFBZ2UsR0FBc0IsT0FBQXRhLEdBQVUsMEJBQUEyZ0IsR0FBQSxPQUNsZjNpQixHQUFHb2lCLEVBQUE5akIsRUFBSSxNQUFNLDRCQUFBOGpCLEVBQUEsRUFBa0NBLEVBQUEwSixHQUFBeHJCLE9BQVk4aEIsSUFBQU8sR0FBQW1KLEdBQUExSixHQUFBcGlCLEdBQWVvaUIsRUFBQTlqQixFQUFJLE1BQU0sYUFBQXFrQixHQUFBLFFBQUEzaUIsR0FBMkJvaUIsRUFBQTlqQixFQUFJLE1BQU0saUNBQUFxa0IsR0FBQSxRQUFBM2lCLEdBQWlEMmlCLEdBQUEsT0FBQTNpQixHQUFZb2lCLEVBQUE5akIsRUFBSSxNQUFNLFdBQUFxa0IsR0FBQSxRQUFBM2lCLEdBQXlCMmlCLEdBQUEsU0FBQTNpQixHQUFjb2lCLEVBQUE5akIsRUFBSSxNQUFNLGNBQUFxa0IsR0FBQSxTQUFBM2lCLEdBQTZCb2lCLEVBQUE5akIsRUFBSSxNQUFNLFlBQUErMkIsR0FBQXIxQixFQUFBMUIsR0FBcUI4akIsRUFBQTRTLEdBQUFoMUIsRUFBQTFCLEdBQVVxa0IsR0FBQSxVQUFBM2lCLEdBQWU2cEMsR0FBQXpxQyxFQUFBLFlBQWlCLE1BQU0sYUFBQWdqQixFQUFBd2hCLEdBQUE1akMsRUFBQTFCLEdBQXdCLE1BQU0sYUFBQTBCLEVBQUFtMUIsY0FBQSxDQUErQndqQixjQUFBcjZDLEVBQUFzNkMsVUFBMEJ4MkIsRUFBQXppQixFQUFBLEdBQU1yQixFQUFBLENBQUlhLFdBQUEsSUFBZXdqQixHQUFBLFVBQUEzaUIsR0FBZTZwQyxHQUFBenFDLEVBQUEsWUFBaUIsTUFBTSxlQUFBK2tDLEdBQUFua0MsRUFDbmYxQixHQUFHOGpCLEVBQUE2aEIsR0FBQWprQyxFQUFBMUIsR0FBVXFrQixHQUFBLFVBQUEzaUIsR0FBZTZwQyxHQUFBenFDLEVBQUEsWUFBaUIsTUFBTSxRQUFBZ2pCLEVBQUE5akIsRUFBWXFyQyxHQUFBM25DLEVBQUFvZ0IsR0FBUWprQixPQUFBLEVBQVMsSUFBQXdqQixFQUFBM2YsRUFBQW1pQixFQUFBbmtCLEVBQUEwaEIsRUFBQVUsRUFBZ0IsSUFBQWprQixLQUFBdWpCLEVBQUEsR0FBQUEsRUFBQTNoQixlQUFBNUIsR0FBQSxDQUFtQyxJQUFBc2pCLEVBQUFDLEVBQUF2akIsR0FBVyxVQUFBQSxFQUFBdXFDLEdBQUF2a0IsRUFBQTFDLEdBQUEsNEJBQUF0akIsRUFBQSxPQUFBc2pCLE1BQUE0b0IsWUFBQSxJQUFBbkYsR0FBQS9nQixFQUFBMUMsR0FBQSxhQUFBdGpCLEVBQUEsaUJBQUFzakIsR0FBQSxhQUFBRSxHQUFBLEtBQUFGLElBQUFna0IsR0FBQXRoQixFQUFBMUMsR0FBQSxpQkFBQUEsR0FBQWdrQixHQUFBdGhCLEVBQUEsR0FBQTFDLEdBQUEsbUNBQUF0akIsR0FBQSw2QkFBQUEsR0FBQSxjQUFBQSxJQUFBZ3FCLEVBQUFwb0IsZUFBQTVCLEdBQUEsTUFBQXNqQixHQUFBb29CLEdBQUF6cUMsRUFBQWpCLEdBQUEsTUFBQXNqQixHQUFBK1MsR0FBQXJRLEVBQUFobUIsRUFBQXNqQixFQUFBUyxJQUFrVixPQUFBbGdCLEdBQVUsWUFBQTh2QixHQUFBOXhCLEdBQzFlMjFCLEdBQUEzMUIsRUFBQTFCLEdBQUEsR0FBVyxNQUFNLGVBQUF3ekIsR0FBQTl4QixHQUFzQnFrQyxHQUFBcmtDLEdBQVEsTUFBTSxtQkFBQTFCLEVBQUFhLE9BQUFhLEVBQUE0eEIsYUFBQSxXQUFBbUQsR0FBQXoyQixFQUFBYSxRQUFvRSxNQUFNLGNBQUFpakIsRUFBQXBpQixHQUFrQjQ0QyxXQUFBdDZDLEVBQUFzNkMsU0FBa0MsT0FBVjU0QyxFQUFBMUIsRUFBQWEsT0FBVTJrQyxHQUFBMWhCLElBQUE5akIsRUFBQXM2QyxTQUFBNTRDLEdBQUEsU0FBQTFCLEVBQUE0MkIsY0FBQTRPLEdBQUExaEIsSUFBQTlqQixFQUFBczZDLFNBQUF0NkMsRUFBQTQyQixjQUFBLEdBQTJGLE1BQU0sMkJBQUE5UyxFQUFBdzFCLFVBQUE1M0MsRUFBQTYzQyxRQUFBOU4sS0FBc0R6dEIsRUFBQTR0QixHQUFBdnlCLEVBQUEyRSxLQUFBaTdCLEdBQUE1ekMsR0FBbUJBLEVBQUE0bEIsVUFBQTVqQixFQUFjLE9BQUFoQyxFQUFBeVIsTUFBQXpSLEVBQUEyMkIsV0FBQSxVQUFpQyxPQUFBMzJCLEVBQUE0bEIsV0FBQTFILEVBQUEsT0FBd0MsTUFBTSxPQUFBbGMsR0FBQSxNQUFBaEMsRUFBQTRsQixVQUFBb3VCLEdBQUFoeUMsRUFBQWhDLEVBQUFnQyxFQUFBOG1DLGNBQUFud0IsSUFBQSxpQkFDMWJBLElBQUEsT0FBQTNZLEVBQUE0bEIsV0FBQTFILEVBQUEsUUFBQWxjLEVBQUE2cUMsR0FBQUQsR0FBQWx0QixTQUFBbXRCLEdBQUEzc0IsR0FBQVIsU0FBQTh3QixHQUFBeHdDLElBQUFnVSxHQUFBMkUsRUFBQTNZLEdBQUE0bEIsVUFBQTVqQixFQUFBMlcsRUFBQW13QixjQUFBOTBCLEVBQUFnUyxHQUFBck4sS0FBQTNFLEVBQUFndUIsWUFBQWhnQyxJQUFBNHhDLEdBQUE1ekMsS0FBQWdVLEVBQUFoVSxHQUFBMlksR0FBQSxJQUFBM1csRUFBQStyQixTQUFBL3JCLElBQUFpd0IsZUFBQTZsQixlQUFBbi9CLElBQUFxTixHQUFBaG1CLEVBQUFnVSxFQUFBNFIsVUFBQWpOLElBQWlQLE1BQU0sY0FBYyxRQUEwQixHQUExQkEsRUFBQTNZLEVBQUE0b0MsY0FBMEIsT0FBQTVvQyxFQUFBMjJCLFdBQUEsQ0FBeUIzMkIsRUFBQW1wQyxlQUFBbjFCLEVBQW1CMk0sR0FBQTNnQixFQUFJLE1BQUFELEVBQVE0WSxFQUFBLE9BQUFBLEVBQVczRSxFQUFBLE9BQUFoUyxHQUFBLE9BQUFBLEVBQUE0bUMsY0FBbUMsT0FBQTVtQyxJQUFBMlcsR0FBQTNFLElBQUEsUUFBQWhTLElBQUFrUCxNQUFBNGxCLFdBQUEsUUFBQXJZLEVBQUF6ZSxFQUFBZ3BDLGNBQUFocEMsRUFBQWdwQyxZQUFBaG5DLElBQUFpbkMsV0FBQXhxQixJQUFBemUsRUFBQWdwQyxZQUNyWWhwQyxFQUFBK29DLFdBQUEvbUMsSUFBQWluQyxXQUFBLE1BQUFqbkMsRUFBQTIwQixVQUFBLEtBQWtEaGUsR0FBQTNFLEtBQUFoVSxFQUFBMjJCLFdBQUEsR0FBdUIsTUFBTSxPQUFhLE9BQWEsY0FBYyxPQUFBcVcsS0FBYThHLEdBQUE5ekMsR0FBTSxNQUFNLFFBQUF5eUMsR0FBQXp5QyxHQUFjLE1BQU0sT0FBYSxjQUFjLFFBQUEyZixHQUFBM2YsRUFBQXNTLE9BQUF1MUIsS0FBeUIsTUFBTSxjQUFjLFFBQUEzcEIsRUFBQSxPQUFpQnlDLEdBQUEsS0FBVyxHQUFKM2dCLEVBQUFELEVBQUksSUFBQTBnQixJQUFBLElBQUF6Z0IsRUFBQWtwQyxvQkFBQSxDQUF5QyxJQUFKdndCLEVBQUEsRUFBSTNFLEVBQUFoVSxFQUFBa1IsTUFBYyxPQUFBOEMsSUFBU2hTLEVBQUFnUyxFQUFBbTFCLGdCQUFBeHdCLE1BQUEzVyxJQUFBeWMsRUFBQXpLLEVBQUFrMUIscUJBQUF2d0IsTUFBQThGLEdBQUF6SyxJQUFBOGlCLFFBQThFOTJCLEVBQUFrcEMsb0JBQUF2d0IsRUFBd0IsVUFBQWdJLEdBQUEsT0FBQUEsR0FBcUIsT0FBQS9sQixHQUFBLFNBQUFBLEVBQUErN0IsYUFBQSxPQUFBLzdCLEVBQUFvdUMsY0FDbmNwdUMsRUFBQW91QyxZQUFBanBDLEVBQUFpcEMsYUFBQSxPQUFBanBDLEVBQUFncEMsYUFBQSxPQUFBbnVDLEVBQUFtdUMsYUFBQW51QyxFQUFBbXVDLFdBQUFFLFdBQUFscEMsRUFBQWlwQyxhQUFBcHVDLEVBQUFtdUMsV0FBQWhwQyxFQUFBZ3BDLFlBQUEsRUFBQWhwQyxFQUFBNDJCLFlBQUEsT0FBQS83QixFQUFBbXVDLFdBQUFudUMsRUFBQW11QyxXQUFBRSxXQUFBbHBDLEVBQUFuRixFQUFBb3VDLFlBQUFqcEMsRUFBQW5GLEVBQUFtdUMsV0FBQWhwQyxRQUEyTyxDQUFlLFdBQVZBLEVBQUFrMkMsR0FBQWwyQyxJQUFVLE9BQUFBLEVBQUE0MkIsV0FBQSxLQUFBNTJCLEVBQXVDLE9BQUFuRixNQUFBb3VDLFlBQUFwdUMsRUFBQW11QyxXQUFBLEtBQUFudUMsRUFBQSs3QixXQUFBLE1BQThELFVBQUE5N0IsRUFBQSxPQUFBQSxFQUFxQixVQUFBRCxFQUFnQixNQUFoQm1GLEVBQUFuRixFQUEyQixZQUMvWSxTQUFBbTlDLEdBQUFoNEMsR0FBZSxJQUFBQyxFQUFBNHhDLEdBQUE3eEMsRUFBQXUyQixVQUFBdjJCLEVBQUEwZ0IsSUFBNkYsT0FBbkUxZ0IsRUFBQStvQyxjQUFBL29DLEVBQUEyb0MsYUFBK0IsT0FBQTFvQyxNQUFBMjNDLEdBQUE1M0MsSUFBb0JvMkMsR0FBQXoyQixRQUFBLEtBQWdCMWYsRUFDNUcsU0FBQWc0QyxHQUFBajRDLEVBQUFDLEdBQWlCcTJDLElBQUFuNEIsRUFBQSxPQUFtQitzQixLQUFLb0wsSUFBQSxFQUFNLElBQUF6N0MsRUFBQXM3QyxHQUFBeDJCLFFBQWlCdzJCLEdBQUF4MkIsUUFBQWl2QixHQUFjLElBQUE5ekMsRUFBQWtGLEVBQUF3cUMsMkJBQW1DMXZDLElBQUE0bEIsSUFBQTFnQixJQUFBdTJDLElBQUEsT0FBQTMxQixLQUFBazJCLEtBQUFwMkIsR0FBQTVsQixFQUFBOGxCLEdBQUEwb0IsSUFBQWlOLEdBQUF2MkMsR0FBQTJmLFFBQUEsTUFBQTNmLEVBQUFvM0MsNEJBQUEsR0FBMEcsSUFBVCxJQUFBbjFDLEdBQUEsSUFBUyxDQUFHLElBQUksR0FBQWhDLEVBQUEsS0FBVSxPQUFBMmdCLEtBQUFzM0IsTUFBZ0J0M0IsR0FBQW8zQixHQUFBcDNCLFNBQVMsS0FBVSxPQUFBQSxJQUFTQSxHQUFBbzNCLEdBQUFwM0IsSUFBUyxNQUFBNUMsR0FBUyxHQUFBeTBCLEdBQUFELEdBQUFELEdBQUEsS0FBQTFELEtBQUEsT0FBQWp1QixHQUFBM2UsR0FBQSxFQUFBNHpDLEdBQUE3M0IsT0FBMEMsQ0FBSyxPQUFBNEMsSUFBQXpDLEVBQUEsT0FBeUIsSUFBQWxLLEVBQUEyTSxHQUFBaEksRUFBQTNFLEVBQUF5UyxPQUFtQixVQUFBOU4sRUFBdUIsQ0FBSzVZLEVBQUEsQ0FBRyxJQUFBMGUsRUFBQTFlLEVBQUF2RixFQUFBbWUsRUFBQXRhLEVBQUEyVixFQUFBclosRUFBQW9qQixFQUEwRSxHQUF0RHBGLEVBQUE4SCxHQUFJcGlCLEVBQUFzNEIsV0FBQSxLQUFrQnQ0QixFQUFBMnFDLFlBQUEzcUMsRUFBQTBxQyxXQUFBLEtBQWdDLE9BQzllcHVDLEdBQUEsaUJBQUFBLEdBQUEsbUJBQUFBLEVBQUFtM0MsS0FBQSxDQUFvRCxJQUFBejFDLEVBQUExQixFQUFRQSxFQUFBSCxFQUFJLElBQUFpQixHQUFBLEVBQUE4aUIsR0FBQSxFQUFjLEdBQUcsUUFBQTVqQixFQUFBeXJCLElBQUEsQ0FBZSxJQUFBcEksRUFBQXJqQixFQUFBMjdCLFVBQWtCLFVBQUF0WSxHQUFBLFFBQUFBLElBQUE0cUIsZUFBQSxDQUEyQ3JxQixFQUFBLGVBQUFQLEVBQUEwekIsWUFBK0IsTUFBbUMsaUJBQTdCMXpCLEVBQUFyakIsRUFBQSt0QyxhQUFBd1AsZUFBNkIsR0FBQWw2QixFQUFBdmlCLEVBQUEsSUFBbUMsSUFBQUEsR0FBQXVpQixFQUFBdmlCLE9BQUF1aUIsSUFBd0JyakIsSUFBQThyQixhQUFXLE9BQUE5ckIsR0FBZ0JBLEVBQUFILEVBQUksR0FBaUYsSUFBOUV3akIsRUFBQSxLQUFBcmpCLEVBQUF5ckIsT0FBQXBJLE9BQUEsSUFBQXJqQixFQUFBbXVDLGNBQUE2SSxVQUFBLE9BQUFoM0MsRUFBQWl1QyxlQUE4RTVxQixFQUFBLENBQTZFLEdBQXZELFFBQWhCeGpCLEVBQUFHLEVBQUFrdUMsZUFBZ0JydUMsRUFBQSxJQUFBNnNDLEtBQUFtTyxJQUFBbjVDLEdBQUExQixFQUFBa3VDLFlBQUFydUMsS0FBQWc3QyxJQUFBbjVDLEdBQXVELE1BQUExQixFQUFBZSxNQUFBLENBQW1CZixFQUFBZzhCLFdBQzFlLEdBQUd0NEIsRUFBQXM0QixZQUFBLEtBQW1CLElBQUF0NEIsRUFBQStuQixNQUFBLE9BQUEvbkIsRUFBQWk0QixVQUFBajRCLEVBQUErbkIsSUFBQSxLQUFBek4sRUFBQW15QixHQUFBLGFBQUExa0IsSUFBQWlsQixHQUFBSCxHQUFBN3NDLEVBQUFzYSxLQUE2RXRhLEVBQUE4cUMsZUFBQSxXQUE0QixNQUFBcHBDLEVBQVl2RixFQUFBbWUsRUFBSSxJQUFBNkgsR0FBUm5pQixFQUFBb2dCLEdBQVEwNUIsVUFBa0IsT0FBQTMzQixLQUFBbmlCLEVBQUE4NUMsVUFBQSxJQUFBMUMsR0FBQXozQixFQUFBLElBQUFxcEIsSUFBQTdtQixFQUFBNk4sSUFBQWh5QixFQUFBMmhCLFNBQUEsS0FBQUEsRUFBQXdDLEVBQUFwbEIsSUFBQWlCLE1BQUEyaEIsRUFBQSxJQUFBcXBCLElBQUE3bUIsRUFBQTZOLElBQUFoeUIsRUFBQTJoQixJQUFxR0EsRUFBQXUzQixJQUFBLzZDLEtBQUF3akIsRUFBQXczQixJQUFBaDdDLEdBQUE2RCxFQUFBKzVDLEdBQUFyOEMsS0FBQSxLQUFBc0MsRUFBQWhDLEVBQUE3QixHQUFBNkIsRUFBQXkxQyxLQUFBenpDLE9BQXVELElBQUE1QyxFQUFBZ2pCLEVBQUEsaUJBQUFGLE1BQUEsZUFBQStyQixHQUFBN3JCLEVBQUE5RixJQUFBLEtBQUE4RixFQUFBRixFQUFBOWlCLEdBQW9FLEdBQUFnakIsR0FBQTgzQixHQUFBOTNCLElBQUE4M0IsR0FBQTkzQixHQUFtQjlqQixFQUFBZzhCLFdBQUEsS0FBa0JoOEIsRUFBQXd1QyxlQUFBeHdCLEVBQW1CLE1BQUE1WSxFQUFRcEYsSUFBQThyQixhQUFXLE9BQUE5ckIsR0FBZ0JBLEVBQUFtRCxPQUFBOHhCLEdBQUF2eEIsRUFBQWlVLE9BQUEscUJBQzVkLHdMQUFBdWQsR0FBQXh4QixJQUErTG00QyxJQUFBLEVBQU03N0MsRUFBQSs0QyxHQUFBLzRDLEVBQUEwRCxHQUFVb2dCLEVBQUFqa0IsRUFBSSxHQUFHLE9BQUFpa0IsRUFBQTJILEtBQWMsT0FBQTNILEVBQUFrWSxXQUFBLEtBQXlCbFksRUFBQTBxQixlQUFBeHdCLEVBQStCMDZCLEdBQUE1MEIsRUFBWjlGLEVBQUFnOUIsR0FBQWwzQixFQUFBOWpCLEVBQUFnZSxJQUFvQixNQUFBNVksRUFBUSxVQUFBdEUsRUFBQWQsRUFBQTRqQixFQUFBRSxFQUFBbk0sS0FBQWpVLEVBQUFvZ0IsRUFBQW1ILFVBQUEsT0FBQW5ILEVBQUFrWSxhQUFBLG1CQUFBcFksRUFBQXJNLDBCQUFBLE9BQUE3VCxHQUFBLG1CQUFBQSxFQUFBeTNDLG9CQUFBLE9BQUFDLFFBQUFSLElBQUFsM0MsS0FBQSxDQUF5TG9nQixFQUFBa1ksV0FBQSxLQUNyZWxZLEVBQUEwcUIsZUFBQXh3QixFQUErQjA2QixHQUFBNTBCLEVBQVo5RixFQUFBazlCLEdBQUFwM0IsRUFBQWhqQixFQUFBa2QsSUFBb0IsTUFBQTVZLEdBQVMwZSxJQUFBZ0ksYUFBVyxPQUFBaEksR0FBZ0JrQyxHQUFBZzNCLEdBQUEzakMsR0FBUSxTQUprVGhTLEdBQUEsRUFBQTR6QyxHQUFBNzNCLElBSXZTLE1BQXFELEdBQXRDczRCLElBQUEsRUFBTUgsR0FBQXgyQixRQUFBOWtCLEVBQWE0M0MsR0FBQUQsR0FBQUQsR0FBQSxLQUFjMUQsS0FBSzVzQyxFQUFBczBDLEdBQUEsS0FBQXYyQyxFQUFBMDNDLGFBQUEsVUFBaUMsVUFBQTkyQixHQUFBNWdCLEVBQUEwM0MsYUFBQSxTQUFxQyxDQUE0RCxHQUFqQyxRQUF0Qjc4QyxFQUFBbUYsRUFBQTJmLFFBQUE0VyxZQUFzQnBZLEVBQUEsT0FBeUJvNEIsR0FBQSxLQUFRRSxHQUFBLENBQTBFLEdBQW5FeDBDLEVBQUFqQyxFQUFBaXFDLGtCQUFzQmgyQixFQUFBalUsRUFBQXNxQyxvQkFBd0IxeEIsRUFBQTVZLEVBQUFvcUMsaUJBQXFCLElBQUFub0MsS0FBQW5ILEdBQUEsSUFBQW1aLEtBQUFuWixHQUFBLElBQUE4ZCxLQUFBOWQsRUFBNkUsT0FBdENxdkMsR0FBQW5xQyxFQUFBbEYsUUFBUXc5QyxHQUFBdDRDLEVBQUFuRixFQUFBQyxFQUFBa0YsRUFBQW9wQyxnQkFBQSxHQUFxQyxJQUFBcHBDLEVBQUErcEMsVUFBQTlwQyxFQUN0WSxPQUR5WkQsRUFBQStwQyxVQUFBLEVBQWNqdkMsRUFBQWtGLEVBQUF3cUMsMkJBQUExdkMsRUFDcGRtRixFQUFBRCxFQUFBb3BDLGVBQUEsZ0JBQThCa1AsR0FBQXQ0QyxFQUFBbkYsRUFBQUMsRUFBQW1GLEdBQUEsR0FBdUJBLElBQUEsSUFBQXUyQyxJQUFBck0sR0FBQW5xQyxFQUFBbEYsSUFBQW1GLEVBQUEsZUFBQXNxQyxHQUFBdnFDLEVBQUFsRixLQUFBMDdDLFFBQUF2MkMsS0FBQSxlQUFBNnFDLE1BQUE3cUMsRUFBQXUyQyxHQUFBdjJDLEVBQUFxNEMsR0FBQXQ0QyxFQUFBbkYsRUFBQUMsRUFBQWtGLEVBQUFvcEMsZUFBQSxFQUFBbnBDLEVBQUEsRUFBQUEsS0FBQUQsRUFBQW8zQyw0QkFBQXQ4QyxFQUFBa0YsRUFBQTAzQyxhQUFBNzhDLElBQ3JELFNBQUEyNUMsR0FBQXgwQyxFQUFBQyxHQUFpQixRQUFBcEYsRUFBQW1GLEVBQUEwbUIsT0FBbUIsT0FBQTdyQixHQUFTLENBQUUsT0FBQUEsRUFBQXdyQixLQUFjLFdBQUF2ckIsRUFBQUQsRUFBQWdyQixVQUF5QixzQkFBQWhyQixFQUFBMFgsS0FBQUosMEJBQUEsbUJBQUFyWCxFQUFBaTdDLG9CQUFBLE9BQUFDLFFBQUFSLElBQUExNkMsSUFBa0wsT0FBekJxd0MsR0FBQXR3QyxFQUFyQm1GLEVBQUE4MUMsR0FBQWo3QyxFQUFWbUYsRUFBQTJ6QyxHQUFBMXpDLEVBQUFELEdBQVUsa0JBQTZCb3JDLEdBQUF2d0MsRUFBQSxZQUF3QixNQUFNLE9BQStELE9BQXpCc3dDLEdBQUF0d0MsRUFBckJtRixFQUFBNDFDLEdBQUEvNkMsRUFBakJtRixFQUFBMnpDLEdBQUExekMsRUFBQUQsR0FBaUIsa0JBQTZCb3JDLEdBQUF2d0MsRUFBQSxZQUF3QkEsSUFBQTZyQixPQUFXLElBQUExbUIsRUFBQXFtQixNQUFBOGtCLEdBQUFuckMsRUFBQW5GLEVBQUErNkMsR0FBQTUxQyxFQUFBbkYsRUFBQTg0QyxHQUFBMXpDLEVBQUFELEdBQUEsYUFBQW9yQyxHQUFBcHJDLEVBQUEsYUFDdFcsU0FBQWdyQyxHQUFBaHJDLEVBQUFDLEdBQWlCLElBQUFwRixFQUFBUyxFQUFBaTlDLG1DQUFBejlDLE9BQUEsRUFBb0QsU0FBQW1GLEVBQUF0RSxNQUFBYixFQUFBLGdCQUErQixHQUFBdzdDLEtBQUFJLEdBQUE1N0MsRUFBQTRsQixPQUFvQixDQUFLLE9BQUE3bEIsR0FBVSxLQUFBUyxFQUFBazlDLDJCQUFBMTlDLEVBQUEsV0FBK0MsTUFBTSxLQUFBUSxFQUFBbTlDLDhCQUFBMzlDLEVBQUEsOEJBQUFrRixFQUFBLFdBQWtGLE1BQU0sS0FBQTFFLEVBQUFtOEMsd0JBQUEzOEMsRUFBQSw4QkFBQWtGLEVBQUEsWUFBNkUsTUFBTSxLQUFBMUUsRUFBQW85QyxxQkFBQSxLQUFBcDlDLEVBQUFxOUMsc0JBQUE3OUMsRUFBQSxFQUE2RCxNQUFNLFFBQUFxakIsRUFBQSxPQUFpQixPQUFBbzRCLElBQUF6N0MsSUFBQTRsQixNQUFBNWxCLEVBQ3BhLE9BRDBiRCxJQUFBUyxFQUFBbTlDLGdDQUNqZCxJQUFBRyxJQUFBOTlDLEVBQUE4OUMsU0FBQTk5QyxHQUF1QkEsRUFBUyxTQUFBdTlDLEdBQUFyNEMsRUFBQUMsRUFBQXBGLEdBQW1CLElBQUFDLEVBQUFrRixFQUFBbzRDLFVBQWtCLE9BQUF0OUMsS0FBQTB4QyxPQUFBdnNDLEdBQXNCLE9BQUFzMkMsSUFBQTcxQixLQUFBN2xCLEVBQUEwN0MsR0FBQSxNQUE0QnQyQyxFQUFBRCxFQUFBcXFDLHNCQUFBdnZDLEVBQUFrRixFQUFBc3FDLG9CQUFBLElBQUFycUMsR0FBQXBGLEdBQUFvRixHQUFBcEYsR0FBQUMsSUFBNkVrRixFQUFBK3BDLFVBQUEsR0FBbUMsS0FBckI5cEMsRUFBQUQsRUFBQW9xQyxtQkFBcUJucUMsRUFBQXBGLEtBQUFtRixFQUFBb3FDLGlCQUFBdnZDLEdBQW1DcXZDLEdBQUFydkMsRUFBQW1GLEdBQTJCLEtBQW5CbkYsRUFBQW1GLEVBQUFvcEMsaUJBQW1CbU0sR0FBQXYxQyxFQUFBbkYsS0FDclMsU0FBQXk2QyxHQUFBdDFDLEVBQUFDLEdBQWlCRCxFQUFBb3BDLGVBQUFucEMsSUFBQUQsRUFBQW9wQyxlQUFBbnBDLEdBQXlDLElBQUFwRixFQUFBbUYsRUFBQXUyQixVQUFrQixPQUFBMTdCLEtBQUF1dUMsZUFBQW5wQyxJQUFBcEYsRUFBQXV1QyxlQUFBbnBDLEdBQW1ELElBQUFuRixFQUFBa0YsRUFBQTBtQixPQUFBemtCLEVBQUEsS0FBc0IsVUFBQW5ILEdBQUEsSUFBQWtGLEVBQUFxbUIsSUFBQXBrQixFQUFBakMsRUFBQTZsQixlQUFxQyxLQUFVLE9BQUEvcUIsR0FBUyxDQUFnSSxHQUE5SEQsRUFBQUMsRUFBQXk3QixVQUFjejdCLEVBQUFxdUMsb0JBQUFscEMsSUFBQW5GLEVBQUFxdUMsb0JBQUFscEMsR0FBbUQsT0FBQXBGLEtBQUFzdUMsb0JBQUFscEMsSUFBQXBGLEVBQUFzdUMsb0JBQUFscEMsR0FBNkQsT0FBQW5GLEVBQUE0ckIsUUFBQSxJQUFBNXJCLEVBQUF1ckIsSUFBQSxDQUErQnBrQixFQUFBbkgsRUFBQStxQixVQUFjLE1BQU0vcUIsSUFBQTRyQixPQUFXLE9BQUF6a0IsRUFDM1ksU0FBQW1wQyxHQUFBcHJDLEVBQUFDLEdBQTJCLFFBQVZELEVBQUFzMUMsR0FBQXQxQyxFQUFBQyxPQUFVcTJDLElBQUEsSUFBQTUxQixJQUFBemdCLEVBQUF5Z0IsSUFBQW8yQixLQUFBaE4sR0FBQTlwQyxFQUFBQyxHQUFBcTJDLEtBQUFJLElBQUFILEtBQUF2MkMsR0FBQXUxQyxHQUFBdjFDLElBQUFvcEMsZ0JBQUF5UCxHQUFBQyxLQUFBRCxHQUFBLEVBQUExNkIsRUFBQSxTQUF5RyxTQUFBNDZCLEdBQUEvNEMsRUFBQUMsRUFBQXBGLEVBQUFDLEVBQUFtSCxHQUF1QixPQUFBM0csRUFBQWs4Qyx5QkFBQWw4QyxFQUFBazlDLDJCQUFBLFdBQTBFLE9BQUF4NEMsRUFBQUMsRUFBQXBGLEVBQUFDLEVBQUFtSCxLQUFvQixJQUFBKzJDLEdBQUEsS0FBQXYxQixHQUFBLEtBQUF3MUIsR0FBQSxFQUFBQyxRQUFBLEVBQUE3M0IsSUFBQSxFQUFBODNCLEdBQUEsS0FBQXoxQixHQUFBLEVBQUFrMUIsR0FBQSxFQUFBUSxJQUFBLEVBQUFDLEdBQUEsS0FBQS8zQixJQUFBLEVBQUFnNEIsSUFBQSxFQUFBQyxHQUFBLEtBQUFDLEdBQUFsK0MsRUFBQW0rQyxlQUFBQyxHQUFBLFlBQUFGLEdBQUEsTUFBQUcsR0FBQUQsR0FBQVosR0FBQSxHQUFBRCxHQUFBLEVBQUFlLEdBQUEsS0FBOEosU0FBQUMsS0FBY0gsR0FBQSxhQUFBcCtDLEVBQUFtK0MsZUFBQUQsSUFBQSxNQUNyYSxTQUFBTSxHQUFBOTVDLEVBQUFDLEdBQWlCLE9BQUFnNUMsR0FBQSxDQUFXLEdBQUFoNUMsRUFBQWc1QyxHQUFBLE9BQWUsT0FBQUMsSUFBQTU5QyxFQUFBNnJDLHdCQUFBK1IsSUFBeUNELEdBQUFoNUMsRUFBS0QsRUFBQTFFLEVBQUFtK0MsZUFBQUQsR0FBc0JOLEdBQUE1OUMsRUFBQTJyQywwQkFBQThTLEdBQUEsQ0FBbUNDLFFBQUEsZUFBQS81QyxHQUFBRCxJQUE4QixTQUFBczRDLEdBQUF0NEMsRUFBQUMsRUFBQXBGLEVBQUFDLEVBQUFtSCxHQUF1QmpDLEVBQUFvcEMsZUFBQXR1QyxFQUFtQixJQUFBbUgsR0FBQWkyQyxLQUFBLEVBQUFqMkMsSUFBQWpDLEVBQUFpNkMsY0FBQXJULEdBQWdILFNBQUE1bUMsRUFBQUMsRUFBQXBGLEdBQW1CbUYsRUFBQW8zQyw0QkFBQXY4QyxFQUFnQ21GLEVBQUEwM0MsYUFBQXozQyxFQUFpQjQ1QyxLQUFLRixHQUFBRCxHQUFNUSxHQUFBbDZDLEVBQUFuRixJQUEvTG1CLEtBQUEsS0FBQWdFLEVBQUFDLEVBQUFwRixHQUFBb0gsS0FBQWpDLEVBQUFvM0MsNEJBQUF2OEMsRUFBQW1GLEVBQUEwM0MsYUFBQXozQyxHQUMxTixTQUFBNnFDLEtBQWMsT0FBQXpwQixHQUFBczRCLElBQWVRLEtBQUssSUFBQXoyQixJQUFBLElBQUFBLEtBQUFtMkIsS0FBQUYsR0FBQUQsSUFBMkJDLElBQVUsU0FBQXBFLEdBQUF2MUMsRUFBQUMsR0FBaUIsT0FBQUQsRUFBQW82QyxtQkFBQXA2QyxFQUFBb3BDLGVBQUFucEMsRUFBQSxPQUFBd2pCLElBQUF1MUIsR0FBQXYxQixHQUFBempCLElBQUFvNkMsa0JBQUFwNkMsSUFBQXlqQixNQUFBMjJCLGtCQUFBcDZDLEdBQUFvNkMsa0JBQUFwQixJQUFBLzRDLEVBQUFELEVBQUFvcEMsaUJBQUFwcEMsRUFBQW9wQyxlQUFBbnBDLEdBQWtMb2hCLEtBQUFDLEdBQUFnNEIsS0FBQUgsR0FBQW41QyxFQUFBMGpCLEdBQUEsV0FBQTIyQixHQUFBcjZDLEVBQUEsNkJBQUFDLEVBQUFzM0MsR0FBQSxlQUFBdUMsR0FBQTk1QyxFQUFBQyxJQUMxUSxTQUFBazZDLEtBQWMsSUFBQW42QyxFQUFBLEVBQUFDLEVBQUEsS0FBZSxVQUFBd2pCLEdBQUEsUUFBQTVvQixFQUFBNG9CLEdBQUEzb0IsRUFBQWsrQyxHQUE2QixPQUFBbCtDLEdBQVMsQ0FBRSxJQUFBbUgsRUFBQW5ILEVBQUFzdUMsZUFBdUIsT0FBQW5uQyxFQUFBLENBQTZDLElBQW5DLE9BQUFwSCxHQUFBLE9BQUE0b0IsS0FBQXRGLEVBQUEsT0FBbUNyakIsTUFBQXMvQyxrQkFBQSxDQUE0QnBCLEdBQUF2MUIsR0FBQTNvQixFQUFBcy9DLGtCQUFBLEtBQThCLE1BQU0sR0FBQXQvQyxJQUFBaytDLE1BQUEvMkMsRUFBQW5ILEVBQUFzL0Msa0JBQUEzMkIsR0FBQTIyQixrQkFBQW40QyxFQUFBbkgsRUFBQXMvQyxrQkFBQSxTQUF1RixJQUFBdC9DLElBQUEyb0IsR0FBQSxFQUFlQSxHQUFBNW9CLEdBQUl1L0Msa0JBQUFwQixHQUF1QmwrQyxFQUFBcy9DLGtCQUFBLEtBQXlCLE1BQU12L0MsRUFBQXUvQyxrQkFBQXQvQyxFQUFBcy9DLGtCQUFBdC9DLEVBQUFzL0Msa0JBQUEsS0FBc0V0L0MsRUFBQUQsRUFBQXUvQyxzQkFBc0IsQ0FBb0IsR0FBZm40QyxFQUFBakMsTUFBQWlDLEVBQUFoQyxFQUFBbkYsR0FBZUEsSUFBQTJvQixHQUFBLE1BQWUsZ0JBQ3hlempCLEVBQUEsTUFBUW5GLEVBQUFDLEVBQUlBLElBQUFzL0MsbUJBQXVCakIsR0FBQWw1QyxFQUFLeWpCLEdBQUExakIsRUFBSSxJQUFBczZDLElBQUEsRUFBVSxTQUFBcEMsS0FBYyxRQUFBb0MsTUFBQWgvQyxFQUFBaS9DLHlCQUFBRCxJQUFBLEdBQStDLFNBQUFQLEtBQWMsSUFBSSxJQUFBN0IsTUFBQSxPQUFBYyxHQUFBLENBQXFCYSxLQUFLLElBQUE3NUMsRUFBQWc1QyxHQUFTLEdBQUcsSUFBQS80QyxFQUFBRCxFQUFBb3BDLGVBQXVCLElBQUFucEMsR0FBQXk1QyxJQUFBejVDLElBQUFELEVBQUF3cUMsMkJBQUFrUCxJQUFnRDE1QyxJQUFBbzZDLHdCQUFzQnA2QyxJQUFBZzVDLElBQWN6QixHQUFBLE1BQVMsUUFBUStDLElBQUEsR0FDdlMsU0FBQS9DLEdBQUF2M0MsRUFBQUMsR0FBc0IsR0FBTGs2QyxLQUFLbDZDLEVBQUEsSUFBQTQ1QyxLQUFBRixHQUFBRCxHQUFvQixPQUFBUCxJQUFBLElBQUF6MUIsSUFBQTFqQixHQUFBMGpCLE1BQUE0MkIsSUFBQVosR0FBQWgyQixLQUFvQzIyQixHQUFBbEIsR0FBQXoxQixHQUFBZzJCLEdBQUFoMkIsSUFBQXkyQixLQUFBTixLQUFBRixHQUFBRCxRQUErQixLQUFVLE9BQUFQLElBQUEsSUFBQXoxQixJQUFBMWpCLEdBQUEwakIsSUFBdUIyMkIsR0FBQWxCLEdBQUF6MUIsSUFBQSxHQUFBeTJCLEtBQWlFLEdBQS9DbDZDLElBQUFnNUMsR0FBQSxFQUFBQyxHQUFBLE1BQWtCLElBQUF4MUIsSUFBQW8yQixHQUFBWCxHQUFBejFCLElBQWdCbTFCLEdBQUEsRUFBS2UsR0FBQSxLQUFRLE9BQUFMLEdBQUEsSUFBQXY1QyxFQUFBdTVDLE1BQUEsS0FBQXQ1QyxFQUFBLEVBQWtDQSxFQUFBRCxFQUFBcEQsT0FBV3FELElBQUEsQ0FBSyxJQUFBcEYsRUFBQW1GLEVBQUFDLEdBQVcsSUFBSXBGLEVBQUEyL0MsY0FBZ0IsTUFBQTEvQyxHQUFTcytDLFNBQUEsRUFBQUMsR0FBQXYrQyxJQUFrQixHQUFBcytDLEdBQUEsTUFBQXA1QyxFQUFBcTVDLE1BQUEsS0FBQUQsSUFBQSxFQUFBcDVDLEVBQWtDLFNBQUFrNkMsR0FBQWw2QyxFQUFBQyxHQUFpQm9oQixJQUFBbEQsRUFBQSxPQUFrQmc3QixHQUFBbjVDLEVBQUswakIsR0FBQXpqQixFQUFJbzZDLEdBQUFyNkMsRUFBQUMsR0FBQSxHQUFXczNDLEdBQUEsZUFDcFosU0FBQThDLEdBQUFyNkMsRUFBQUMsRUFBQXBGLEdBQTBDLEdBQXZCd21CLElBQUFsRCxFQUFBLE9BQWtCa0QsSUFBQSxFQUFLeG1CLEVBQUEsQ0FBTSxJQUFBQyxFQUFBa0YsRUFBQTAzQyxhQUFxQixPQUFBNThDLEVBQUEyL0MsR0FBQXo2QyxFQUFBbEYsRUFBQW1GLElBQUFELEVBQUEwM0MsYUFBQSxXQUFBNThDLEVBQUFrRixFQUFBaTZDLGlCQUFBajZDLEVBQUFpNkMsZUFBQSxFQUFBblQsR0FBQWhzQyxJQUFBbTlDLEdBQUFqNEMsRUFBQW5GLEdBQUEsUUFBQUMsRUFBQWtGLEVBQUEwM0MsZ0JBQUFRLEtBQUFsNEMsRUFBQTAzQyxhQUFBNThDLEVBQUEyL0MsR0FBQXo2QyxFQUFBbEYsRUFBQW1GLFVBQW1LLFFBQUFuRixFQUFBa0YsRUFBQTAzQyxjQUFBK0MsR0FBQXo2QyxFQUFBbEYsRUFBQW1GLElBQUFELEVBQUEwM0MsYUFBQSxXQUFBNThDLEVBQUFrRixFQUFBaTZDLGlCQUFBajZDLEVBQUFpNkMsZUFBQSxFQUFBblQsR0FBQWhzQyxJQUFBbTlDLEdBQUFqNEMsRUFBQW5GLEdBQUEsUUFBQUMsRUFBQWtGLEVBQUEwM0MsZUFBQStDLEdBQUF6NkMsRUFBQWxGLEVBQUFtRixJQUFpS29oQixJQUFBLEVBQ3pZLFNBQUFvNUIsR0FBQXo2QyxFQUFBQyxFQUFBcEYsR0FBbUIsSUFBQUMsRUFBQWtGLEVBQUEwNkMsV0FBbUIsVUFBQTUvQyxLQUFBNi9DLGlCQUFBOS9DLElBQUEsT0FBQTArQyxNQUFBLENBQUF6K0MsR0FBQXkrQyxHQUFBdDJDLEtBQUFuSSxLQUFBOC9DLFFBQStHLE9BQXBDNTZDLEVBQUEwM0MsYUFBQXozQyxPQUFpQkQsRUFBQW9wQyxlQUFBLEdBQTBCcHBDLEVBQUEwM0MsYUFBQSxLQUFvQjEzQyxJQUFBNDVDLEdBQUFmLE1BQUFlLEdBQUE1NUMsRUFBQTY0QyxHQUFBLEdBQXdCdjlDLEVBQUFrOEMseUJBQUFsOEMsRUFBQWs5QywyQkFBQSxXQUFtRXJCLEdBQUFuM0MsRUFBQUMsS0FBVSxTQUFBNDFDLEdBQUE3MUMsR0FBZSxPQUFBbTVDLElBQUFoN0IsRUFBQSxPQUEwQmc3QixHQUFBL1AsZUFBQSxFQUFvQmdRLFNBQUEsRUFBQUMsR0FBQXI1QyxHQUFpQixTQUFBNjZDLEdBQUE3NkMsRUFBQUMsR0FBaUIsSUFBQXBGLEVBQUF5bUIsR0FBUUEsSUFBQSxFQUFLLElBQUksT0FBQXRoQixFQUFBQyxHQUFZLFNBQVFxaEIsR0FBQXptQixJQUFBd21CLElBQUFrMkIsR0FBQSxnQkFDelosU0FBQXVELEdBQUE5NkMsRUFBQUMsR0FBaUIsR0FBQXFoQixLQUFBZzRCLEdBQUEsQ0FBV0EsSUFBQSxFQUFNLElBQUksT0FBQXQ1QyxFQUFBQyxHQUFZLFFBQVFxNUMsSUFBQSxHQUFPLE9BQUF0NUMsRUFBQUMsR0FBWSxTQUFBODZDLEdBQUEvNkMsRUFBQUMsRUFBQXBGLEdBQW1CeW1CLElBQUFELElBQUEsSUFBQXUzQixLQUFBckIsR0FBQXFCLElBQUEsR0FBQUEsR0FBQSxHQUErQixJQUFBOTlDLEVBQUF3bUIsR0FBUUEsSUFBQSxFQUFLLElBQUksT0FBQWhtQixFQUFBazhDLHlCQUFBbDhDLEVBQUFtOUMsOEJBQUEsV0FBNkUsT0FBQXo0QyxFQUFBQyxFQUFBcEYsS0FBZ0IsU0FBUXltQixHQUFBeG1CLElBQUF1bUIsSUFBQWsyQixHQUFBLGdCQUNyUCxTQUFBeUQsR0FBQWg3QyxFQUFBQyxFQUFBcEYsRUFBQUMsRUFBQW1ILEdBQXVCLElBQUFnUyxFQUFBaFUsRUFBQTBmLFFBQWdCM2YsRUFBQSxHQUFBbkYsRUFBQSxDQUFnQ29GLEVBQUEsQ0FBRyxJQUFBMDJCLEdBQTNCOTdCLElBQUFnd0Msc0JBQTJCLElBQUFod0MsRUFBQXdyQixLQUFBbEksRUFBQSxPQUFxQyxJQUFBdkYsRUFBQS9kLEVBQVEsR0FBRyxPQUFBK2QsRUFBQXlOLEtBQWMsT0FBQXpOLElBQUFpTixVQUFBOWEsUUFBNkIsTUFBQTlLLEVBQVEsVUFBQTJmLEdBQUFoSCxFQUFBckcsTUFBQSxDQUFxQnFHLElBQUFpTixVQUFBdWlCLDBDQUF3RCxNQUFBbm9DLEdBQVMyWSxJQUFBOE4sYUFBVyxPQUFBOU4sR0FBZ0J1RixFQUFBLE9BQVN2RixPQUFBLEVBQVMsT0FBQS9kLEVBQUF3ckIsSUFBQSxDQUFjLElBQUEzSCxFQUFBN2pCLEVBQUEwWCxLQUFhLEdBQUFxTixHQUFBbEIsR0FBQSxDQUFTN2pCLEVBQUFvdEMsR0FBQXB0QyxFQUFBNmpCLEVBQUE5RixHQUFZLE1BQUE1WSxHQUFTbkYsRUFBQStkLE9BQUkvZCxFQUFBNHNDLEdBQ3hWLE9BRGtXLE9BQUF4bkMsRUFBQThLLFFBQUE5SyxFQUFBOEssUUFBQWxRLEVBQUFvRixFQUFBd3hDLGVBQUE1MkMsRUFBZ0RvRixFQUFBZ0MsR0FBSUEsRUFBQThvQyxHQUFBandDLElBQVFtd0MsUUFBQSxDQUFXLzVCLFFBQUFsUixHQUErQixRQUFwQkMsT0FBQSxJQUFBQSxFQUFBLEtBQUFBLEtBQW9CZ0MsRUFBQVcsU0FBQTNDLEdBQzdkaXJDLEtBQUtDLEdBQUFsM0IsRUFBQWhTLEdBQVFtcEMsR0FBQW4zQixFQUFBblosR0FBUUEsRUFBUyxTQUFBbWdELEdBQUFqN0MsRUFBQUMsRUFBQXBGLEVBQUFDLEdBQXFCLElBQUFtSCxFQUFBaEMsRUFBQTBmLFFBQWlDLE9BQUFxN0IsR0FBQWg3QyxFQUFBQyxFQUFBcEYsRUFBVm9ILEVBQUErb0MsR0FBdkJGLEtBQXVCN29DLEdBQVVuSCxHQUFxQixTQUFBb2dELEdBQUFsN0MsR0FBMkIsS0FBWkEsSUFBQTJmLFNBQVl4TyxNQUFBLFlBQXdCLE9BQUFuUixFQUFBbVIsTUFBQWtWLEtBQW9CLE9BQWdDLGVBQUFybUIsRUFBQW1SLE1BQUEwVSxXQUVoTixTQUFBczFCLEdBQUFuN0MsR0FBZSxJQUFBQyxFQUFBLDhCQUFBNnFDLEtBQUEsWUFBcUQ3cUMsR0FBQW8yQyxLQUFBcDJDLEVBQUFvMkMsR0FBQSxHQUFnQnQ1QyxLQUFBNDlDLGdCQUFBdEUsR0FBQXAyQyxFQUEwQmxELEtBQUFxK0MsTUFBQXA3QyxFQUFhakQsS0FBQXMrQyxXQUFBdCtDLEtBQUF1K0MsTUFBQSxLQUFnQ3YrQyxLQUFBdytDLGFBQUF4K0MsS0FBQXkrQyxjQUFBLEVBQXVDeitDLEtBQUEwK0MsVUFBQSxLQUFvQjErQyxLQUFBNjlDLFFBQUEsRUFHdkMsU0FBQWMsS0FBYzMrQyxLQUFBcytDLFdBQUEsS0FBcUJ0K0MsS0FBQTQrQyxZQUFBLEVBQW1CNStDLEtBQUE2K0MsVUFBQTcrQyxLQUFBNitDLFVBQUE1L0MsS0FBQWUsTUFFck8sU0FBQTgrQyxHQUFBNzdDLEVBQUFDLEVBQUFwRixHQUEwQ21GLEVBQUEsQ0FBRzJmLFFBQTFCMWYsRUFBQTRmLEdBQUEsWUFBQTVmLEVBQUEsS0FBMEJ1OEIsY0FBQXg4QixFQUFBNHBDLGdCQUFBLEtBQUF3TyxVQUFBLEtBQUFwTyxvQkFBQSxFQUFBQyxrQkFBQSxFQUFBSSxzQkFBQSxFQUFBQyxvQkFBQSxFQUFBRixpQkFBQSxFQUFBTCxVQUFBLEVBQUFxTiw0QkFBQSxFQUFBTSxhQUFBLEtBQUF1QyxlQUFBLEVBQUFsdkMsUUFBQSxLQUFBMG1DLGVBQUEsS0FBQTl6QixRQUFBOWlCLEVBQUEydkMsMkJBQUEsRUFBQXBCLGVBQUEsRUFBQXNSLFdBQUEsS0FBQU4sa0JBQUEsTUFBdVhyOUMsS0FBQSsrQyxjQUFBNzdDLEVBQUE0bEIsVUFBQTdsQixFQUVySyxTQUFBKzdDLEdBQUEvN0MsR0FBZSxTQUFBQSxHQUFBLElBQUFBLEVBQUFndUIsVUFBQSxJQUFBaHVCLEVBQUFndUIsVUFBQSxLQUFBaHVCLEVBQUFndUIsV0FBQSxJQUFBaHVCLEVBQUFndUIsVUFBQSxpQ0FBQWh1QixFQUFBaWlDLFlBRTlRLFNBQUErWixHQUFBaDhDLEVBQUFDLEVBQUFwRixFQUFBQyxFQUFBbUgsR0FBdUIsSUFBQWdTLEVBQUFwWixFQUFBazZDLG9CQUE0QixHQUFBOWdDLEVBQUEsQ0FBTSxzQkFBQWhTLEVBQUEsQ0FBMEIsSUFBQTJXLEVBQUEzVyxFQUFRQSxFQUFBLFdBQWEsSUFBQWpDLEVBQUFrN0MsR0FBQWpuQyxFQUFBNm5DLGVBQTBCbGpDLEVBQUFqZSxLQUFBcUYsSUFBVyxNQUFBQSxFQUFBaVUsRUFBQWdvQyxrQ0FBQWo4QyxFQUFBQyxFQUFBZ0MsR0FBQWdTLEVBQUFwSCxPQUFBNU0sRUFBQWdDLE9BQWlFLENBQXFDLEdBQWhDZ1MsRUFBQXBaLEVBQUFrNkMsb0JBRG5OLFNBQUEvMEMsRUFBQUMsR0FBd0ksR0FBdkhBLFlBQUFELEVBQUEsSUFBQUEsRUFBQWd1QixTQUFBaHVCLEVBQUFvK0IsZ0JBQUFwK0IsRUFBQXE5QixXQUFBLFdBQUFwOUIsRUFBQSt0QixXQUFBL3RCLEVBQUFpOEMsYUFBQSxxQkFBdUhqOEMsRUFBQSxRQUFBcEYsRUFBZ0JBLEVBQUFtRixFQUFBZ2lDLFdBQWNoaUMsRUFBQTJoQyxZQUFBOW1DLEdBQWtCLFdBQUFnaEQsR0FBQTc3QyxHQUFBLEVBQUFDLEdBQzJCazhDLENBQUF0aEQsRUFBQUMsR0FBZ0MsbUJBQUFtSCxFQUFBLENBQTBCLElBQUF5YyxFQUFBemMsRUFBUUEsRUFBQSxXQUFhLElBQUFqQyxFQUFBazdDLEdBQUFqbkMsRUFBQTZuQyxlQUEwQnA5QixFQUFBL2pCLEtBQUFxRixJQUFXODZDLEdBQUEsV0FBYyxNQUFBOTZDLEVBQUFpVSxFQUFBZ29DLGtDQUFBajhDLEVBQUFDLEVBQUFnQyxHQUFBZ1MsRUFBQXBILE9BQUE1TSxFQUFBZ0MsS0FBbUUsT0FBQWk1QyxHQUFBam5DLEVBQUE2bkMsZUFDeFosU0FBQU0sR0FBQXA4QyxFQUFBQyxHQUFpQixJQUFBcEYsRUFBQSxFQUFBOEIsVUFBQUMsYUFBQSxJQUFBRCxVQUFBLEdBQUFBLFVBQUEsUUFBd0YsT0FBdEJvL0MsR0FBQTk3QyxJQUFBa2UsRUFBQSxPQVorSixTQUFBbmUsRUFBQUMsRUFBQXBGLEdBQW1CLElBQUFDLEVBQUEsRUFBQTZCLFVBQUFDLGFBQUEsSUFBQUQsVUFBQSxHQUFBQSxVQUFBLFFBQWtFLE9BQU9rVyxTQUFBbWMsR0FBQWp6QixJQUFBLE1BQUFqQixFQUFBLFFBQUFBLEVBQUFnUyxTQUFBOU0sRUFBQXc4QixjQUFBdjhCLEVBQUE0cEMsZUFBQWh2QyxHQVlyT3doRCxDQUFBcjhDLEVBQUFDLEVBQUEsS0FBQXBGLEdBWHpHcXhCLEdBQUEsU0FBQWxzQixFQUFBQyxFQUFBcEYsR0FBbUIsT0FBQW9GLEdBQVUsWUFBOEIsR0FBOUI4eEIsR0FBQS94QixFQUFBbkYsR0FBcUJvRixFQUFBcEYsRUFBQUUsS0FBUyxVQUFBRixFQUFBMFgsTUFBQSxNQUFBdFMsRUFBQSxDQUE4QixJQUFBcEYsRUFBQW1GLEVBQVFuRixFQUFBdXJCLFlBQWF2ckIsSUFBQXVyQixXQUEyRixJQUEzRXZyQixJQUFBeWhELGlCQUFBLGNBQUF0aEMsS0FBQUMsVUFBQSxHQUFBaGIsR0FBQSxtQkFBMkVBLEVBQUEsRUFBUUEsRUFBQXBGLEVBQUErQixPQUFXcUQsSUFBQSxDQUFLLElBQUFuRixFQUFBRCxFQUFBb0YsR0FBVyxHQUFBbkYsSUFBQWtGLEdBQUFsRixFQUFBeWhELE9BQUF2OEMsRUFBQXU4QyxLQUFBLENBQTJCLElBQUF0NkMsRUFBQXVrQixFQUFBMXJCLEdBQVltSCxHQUFBa2MsRUFBQSxNQUFpQndRLEdBQUE3ekIsR0FBTWkzQixHQUFBajNCLEVBQUFtSCxLQUFVLE1BQU0sZUFBQXkrQixHQUFBMWdDLEVBQUFuRixHQUF3QixNQUFNLG9CQUFBb0YsRUFBQXBGLEVBQUFZLFFBQUEya0MsR0FBQXBnQyxJQUFBbkYsRUFBQXE2QyxTQUFBajFDLEdBQUEsS0FDbkhrN0MsR0FBQS8rQyxVQUFBeVEsT0FBQSxTQUFBN00sR0FBZ0NqRCxLQUFBNjlDLFFBQUF6OEIsRUFBQSxPQUE0QnBoQixLQUFBdytDLGNBQUEsRUFBcUJ4K0MsS0FBQTArQyxVQUFBejdDLEVBQWlCLElBQUFDLEVBQUFsRCxLQUFBcStDLE1BQUFVLGNBQUFqaEQsRUFBQWtDLEtBQUE0OUMsZ0JBQUE3L0MsRUFBQSxJQUFBNGdELEdBQTBGLE9BQTNCVixHQUFBaDdDLEVBQUFDLEVBQUEsS0FBQXBGLEVBQUFDLEVBQUE4Z0QsV0FBMkI5Z0QsR0FDamFxZ0QsR0FBQS8rQyxVQUFBMjFDLEtBQUEsU0FBQS94QyxHQUE4QixHQUFBakQsS0FBQXkrQyxhQUFBeDdDLFFBQXlCLENBQUssSUFBQUMsRUFBQWxELEtBQUFzK0MsV0FBc0IsT0FBQXA3QyxNQUFBbEQsS0FBQXMrQyxXQUFBLElBQWlDcDdDLEVBQUFnRCxLQUFBakQsS0FDbkhtN0MsR0FBQS8rQyxVQUFBb2dELE9BQUEsV0FBK0IsSUFBQXg4QyxFQUFBakQsS0FBQXErQyxNQUFBVSxjQUFBNzdDLEVBQUFELEVBQUEwNkMsV0FBb0YsR0FBdEMzOUMsS0FBQTY5QyxRQUFBLE9BQUEzNkMsR0FBQWtlLEVBQUEsT0FBc0NwaEIsS0FBQXcrQyxhQUFBLENBQXNCLElBQUExZ0QsRUFBQWtDLEtBQUE0OUMsZ0JBQTJCLEdBQUExNkMsSUFBQWxELEtBQUEsQ0FBYUEsS0FBQXcrQyxlQUFBMWdELEVBQUFrQyxLQUFBNDlDLGdCQUFBMTZDLEVBQUEwNkMsZ0JBQUE1OUMsS0FBQThQLE9BQUE5UCxLQUFBMCtDLFlBQTBGLFFBQUEzZ0QsRUFBQSxLQUFBbUgsRUFBQWhDLEVBQW1CZ0MsSUFBQWxGLE1BQVNqQyxFQUFBbUgsTUFBQXE1QyxNQUFlLE9BQUF4Z0QsR0FBQXFqQixFQUFBLE9BQXlCcmpCLEVBQUF3Z0QsTUFBQXI1QyxFQUFBcTVDLE1BQWdCditDLEtBQUF1K0MsTUFBQXI3QyxFQUFhRCxFQUFBMDZDLFdBQUEzOUMsS0FBa0JBLEtBQUE2OUMsUUFBQSxFQUFlVixHQUFBbDZDLEVBQUFuRixHQUFRb0YsRUFBQWxELEtBQUF1K0MsTUFBYXYrQyxLQUFBdStDLE1BQUEsS0FBaUMsUUFBakJyN0MsRUFBQUQsRUFBQTA2QyxXQUFBejZDLElBQWlCQSxFQUFBczdDLGNBQUF0N0MsRUFBQTRNLE9BQUE1TSxFQUFBdzdDLGdCQUFnRDErQyxLQUFBdStDLE1BQ25mLEtBQUF2K0MsS0FBQTY5QyxRQUFBLEdBQXFCTyxHQUFBLytDLFVBQUFvK0MsWUFBQSxXQUFvQyxJQUFBejlDLEtBQUF5K0MsYUFBQSxDQUF1QnorQyxLQUFBeStDLGNBQUEsRUFBcUIsSUFBQXg3QyxFQUFBakQsS0FBQXMrQyxXQUFzQixVQUFBcjdDLEVBQUEsUUFBQUMsRUFBQSxFQUF3QkEsRUFBQUQsRUFBQXBELE9BQVdxRCxLQUFBLEVBQUFELEVBQUFDLFFBQWdIeTdDLEdBQUF0L0MsVUFBQTIxQyxLQUFBLFNBQUEveEMsR0FBOEIsR0FBQWpELEtBQUE0K0MsV0FBQTM3QyxRQUF1QixDQUFLLElBQUFDLEVBQUFsRCxLQUFBcytDLFdBQXNCLE9BQUFwN0MsTUFBQWxELEtBQUFzK0MsV0FBQSxJQUFpQ3A3QyxFQUFBZ0QsS0FBQWpELEtBQy9YMDdDLEdBQUF0L0MsVUFBQXcvQyxVQUFBLFdBQWtDLElBQUE3K0MsS0FBQTQrQyxXQUFBLENBQXFCNStDLEtBQUE0K0MsWUFBQSxFQUFtQixJQUFBMzdDLEVBQUFqRCxLQUFBcytDLFdBQXNCLFVBQUFyN0MsRUFBQSxRQUFBQyxFQUFBLEVBQXdCQSxFQUFBRCxFQUFBcEQsT0FBV3FELElBQUEsQ0FBSyxJQUFBcEYsRUFBQW1GLEVBQUFDLEdBQVcsbUJBQUFwRixHQUFBc2pCLEVBQUEsTUFBQXRqQixHQUF3Q0EsT0FFM0xnaEQsR0FBQXovQyxVQUFBeVEsT0FBQSxTQUFBN00sRUFBQUMsR0FBa0MsSUFBQXBGLEVBQUFrQyxLQUFBKytDLGNBQUFoaEQsRUFBQSxJQUFBNGdELEdBQW1HLE9BQTdDLFFBQXBCejdDLE9BQUEsSUFBQUEsRUFBQSxLQUFBQSxJQUFvQm5GLEVBQUFpM0MsS0FBQTl4QyxHQUFvQmc3QyxHQUFBajdDLEVBQUFuRixFQUFBLEtBQUFDLEVBQUE4Z0QsV0FBeUI5Z0QsR0FBVStnRCxHQUFBei9DLFVBQUFxZ0QsUUFBQSxTQUFBejhDLEdBQWlDLElBQUFDLEVBQUFsRCxLQUFBKytDLGNBQUFqaEQsRUFBQSxJQUFBNmdELEdBQXNHLE9BQWhELFFBQXBCMTdDLE9BQUEsSUFBQUEsRUFBQSxLQUFBQSxJQUFvQm5GLEVBQUFrM0MsS0FBQS94QyxHQUFvQmk3QyxHQUFBLEtBQUFoN0MsRUFBQSxLQUFBcEYsRUFBQStnRCxXQUE0Qi9nRCxHQUFVZ2hELEdBQUF6L0MsVUFBQTYvQyxrQ0FBQSxTQUFBajhDLEVBQUFDLEVBQUFwRixHQUErRCxJQUFBQyxFQUFBaUMsS0FBQSsrQyxjQUFBNzVDLEVBQUEsSUFBQXk1QyxHQUFnRyxPQUExQyxRQUFwQjdnRCxPQUFBLElBQUFBLEVBQUEsS0FBQUEsSUFBb0JvSCxFQUFBOHZDLEtBQUFsM0MsR0FBb0JvZ0QsR0FBQWg3QyxFQUFBbkYsRUFBQWtGLEVBQUFpQyxFQUFBMjVDLFdBQXNCMzVDLEdBQy9iNDVDLEdBQUF6L0MsVUFBQXNnRCxZQUFBLFdBQW9DLElBQUExOEMsRUFBQSxJQUFBbTdDLEdBQUFwK0MsTUFBQWtELEVBQUFELEVBQUEyNkMsZ0JBQUE5L0MsRUFBQWtDLEtBQUErK0MsY0FBQWhoRCxFQUFBRCxFQUFBNi9DLFdBQTJFLFVBQUE1L0MsRUFBQUQsRUFBQTYvQyxXQUFBMTZDLElBQUFzN0MsTUFBQSxTQUF3QyxDQUFLLElBQUF6Z0QsRUFBQSxLQUFXLE9BQUFDLEtBQUE2L0MsaUJBQUExNkMsR0FBK0JwRixFQUFBQyxNQUFBd2dELE1BQWV0N0MsRUFBQXM3QyxNQUFBeGdELEVBQVUsT0FBQUQsTUFBQXlnRCxNQUFBdDdDLEdBQXNCLE9BQUFBLEdBQXNKd3NCLEdBQUFxdUIsR0FBTXB1QixHQUFBc3VCLEdBQU1ydUIsR0FBQSxXQUFjckwsSUFBQSxJQUFBdTNCLEtBQUFyQixHQUFBcUIsSUFBQSxHQUFBQSxHQUFBLElBSXJhLElBQUErRCxHQUFBLENBQVFDLGFBQUFSLEdBQUFTLFlBQUEsU0FBQTc4QyxHQUF3QyxTQUFBQSxFQUFBLFlBQXVCLE9BQUFBLEVBQUFndUIsU0FBQSxPQUFBaHVCLEVBQTJCLElBQUFDLEVBQUFELEVBQUE2cUMsb0JBQTRJLFlBQWhILElBQUE1cUMsSUFBQSxtQkFBQUQsRUFBQTZNLE9BQUFzUixFQUFBLE9BQUFBLEVBQUEsTUFBQWpqQixPQUFBa0MsS0FBQTRDLEtBQW9GQSxFQUFBLFFBQVJBLEVBQUE4MkIsR0FBQTcyQixJQUFRLEtBQUFELEVBQUE2bEIsV0FBcUNsSSxRQUFBLFNBQUEzZCxFQUFBQyxFQUFBcEYsR0FBK0MsT0FBdEJraEQsR0FBQTk3QyxJQUFBa2UsRUFBQSxPQUFzQjY5QixHQUFBLEtBQUFoOEMsRUFBQUMsR0FBQSxFQUFBcEYsSUFBeUJnUyxPQUFBLFNBQUE3TSxFQUFBQyxFQUFBcEYsR0FBOEMsT0FBdEJraEQsR0FBQTk3QyxJQUFBa2UsRUFBQSxPQUFzQjY5QixHQUFBLEtBQUFoOEMsRUFBQUMsR0FBQSxFQUFBcEYsSUFBeUJpaUQsb0NBQUEsU0FBQTk4QyxFQUFBQyxFQUFBcEYsRUFBQUMsR0FDdlgsT0FEOGFpaEQsR0FBQWxoRCxJQUFBc2pCLEVBQUEsUUFBc0IsTUFBQW5lLFFBQUEsSUFBQUEsRUFBQTZxQyxzQkFDbmQxc0IsRUFBQSxNQUFlNjlCLEdBQUFoOEMsRUFBQUMsRUFBQXBGLEdBQUEsRUFBQUMsSUFBc0JpaUQsdUJBQUEsU0FBQS84QyxHQUF5RCxPQUFyQis3QyxHQUFBLzdDLElBQUFtZSxFQUFBLFFBQXFCbmUsRUFBQSswQyxzQkFBQStGLEdBQUEsV0FBNENrQixHQUFBLFVBQUFoOEMsR0FBQSxhQUE2QkEsRUFBQSswQyxvQkFBQSxVQUE2QixJQUFTaUksc0JBQUEsV0FBa0MsT0FBQVosR0FBQXQvQyxXQUFBLEVBQUFILFlBQWtDc2dELHdCQUFBcEMsR0FBQXFDLDRCQUFBbkMsR0FBQW9DLFVBQUEsU0FBQW45QyxFQUFBQyxHQUFtRm9oQixJQUFBbEQsRUFBQSxPQUFrQixJQUFBdGpCLEVBQUF5bUIsR0FBUUEsSUFBQSxFQUFLLElBQUksT0FBQXkzQixHQUFBLzRDLEVBQUFDLEdBQWUsUUFBUXFoQixHQUFBem1CLEVBQUEwOEMsR0FBQSxpQkFBdUI2RixvQkFDbFAsU0FBQXA5QyxFQUFBQyxHQUE2RCxPQUE1Qzg3QyxHQUFBLzdDLElBQUFtZSxFQUFBLDZCQUE0QyxJQUFBMDlCLEdBQUE3N0MsR0FBQSxRQUFBQyxJQUFBLElBQUFBLEVBQUEwZCxVQURxTDAvQix5QkFBQSxTQUFBcjlDLEdBQTZELElBQUFDLEVBQ2xmcWhCLEdBQUVBLElBQUEsRUFBSyxJQUFJeTNCLEdBQUEvNEMsR0FBTSxTQUFRc2hCLEdBQUFyaEIsSUFBQW9oQixJQUFBazJCLEdBQUEsaUJBQTZCajBCLG1EQUFBLENBQXFEZzZCLE9BQUEsQ0FBQWgzQixFQUFBQyxFQUFBQyxFQUFBZixFQUFBRSx5QkFBQXRCLEVBQUE0QyxFQUFBLFNBQUFqbkIsR0FBK0RrbEIsRUFBQWxsQixFQUFBZ25CLElBQVNzRixHQUFBQyxHQUFBcVEsR0FBQTdXLE1BQ25MLFNBQUEvbEIsR0FBYSxJQUFBQyxFQUFBRCxFQUFBdTlDLHlCQXhKYixTQUFBdjlDLEdBQWUsdUJBQUF5WSwrQkFBQSxTQUFnRSxJQUFBeFksRUFBQXdZLCtCQUFxQyxHQUFBeFksRUFBQXU5QyxhQUFBdjlDLEVBQUF3OUMsY0FBQSxTQUEyQyxJQUFJLElBQUE1aUQsRUFBQW9GLEVBQUF5OUMsT0FBQTE5QyxHQUFrQnNvQyxHQUFBRSxHQUFBLFNBQUF4b0MsR0FBa0IsT0FBQUMsRUFBQTA5QyxrQkFBQTlpRCxFQUFBbUYsS0FBa0N1b0MsR0FBQUMsR0FBQSxTQUFBeG9DLEdBQWtCLE9BQUFDLEVBQUEyOUMscUJBQUEvaUQsRUFBQW1GLEtBQXFDLE1BQUFsRixNQXdKblAraUQsQ0FBQTVoRCxFQUFBLEdBQWMrRCxFQUFBLENBQUk4OUMsY0FBQSxLQUFBQyxxQkFBQWx2QixHQUFBdEwsdUJBQUF5NkIsd0JBQUEsU0FBQWgrQyxHQUE4RyxlQUFSQSxFQUFBODJCLEdBQUE5MkIsSUFBUSxLQUFBQSxFQUFBNmxCLFdBQWlDMDNCLHdCQUFBLFNBQUF2OUMsR0FBcUMsT0FBQUMsSUFBQUQsR0FBQSxTQUFuUCxDQUEwUSxDQUFHdTlDLHdCQUFBcDNCLEVBQUE4M0IsV0FBQSxFQUFBOTZCLFFBQUEsU0FBQSs2QixvQkFBQSxjQUEyRixJQUFBQyxHQUFBLENBQVFyaEMsUUFBQTYvQixJQUFXeUIsR0FBQUQsSUFBQXhCLElBQUF3QixHQUFlNWpELEVBQUFELFFBQUE4akQsR0FBQXRoQyxTQUFBc2hDLGlDQ3pRMVk3akQsRUFBQUQsUUFBbUJGLEVBQVEsbUNDSDNCLFNBQUF5aEI7Ozs7Ozs7OztBQVNhM2dCLE9BQUFDLGVBQUFiLEVBQUEsY0FBNENtQixPQUFBLElBQVcsSUFBQVgsRUFBQSxLQUFBbUgsR0FBQSxFQUFBMlcsRUFBQSxFQUFBdGEsR0FBQSxFQUFBN0QsR0FBQSxFQUFBRyxHQUFBLEVBQUFxQixHQUFBLEVBQXdDLFNBQUFLLElBQWEsSUFBQTFCLEVBQUEsQ0FBTyxJQUFBb0YsRUFBQWxGLEVBQUFzdUMsZUFBdUJudEMsRUFBQThoQixJQUFBOWhCLEdBQUEsRUFBV1gsRUFBQUksRUFBQXNFLElBQ2xLLFNBQUFnZSxJQUFhLElBQUFoZSxFQUFBbEYsRUFBQW1GLEVBQUFuRixFQUFBd2IsS0FBaUIsR0FBQXhiLElBQUFtRixFQUFBbkYsRUFBQSxTQUFnQixDQUFLLElBQUFELEVBQUFDLEVBQUF1akQsU0FBaUJ2akQsRUFBQUQsRUFBQXliLEtBQUFyVyxFQUFXQSxFQUFBbytDLFNBQUF4akQsRUFBYW1GLEVBQUFzVyxLQUFBdFcsRUFBQXErQyxTQUFBLEtBQXVCeGpELEVBQUFtRixFQUFBNEMsU0FBYTNDLEVBQUFELEVBQUFvcEMsZUFBbUJwcEMsSUFBQXMrQyxjQUFrQixJQUFBcnFDLEVBQUEyRSxFQUFBMEgsRUFBQTdsQixFQUFZbWUsRUFBQTVZLEVBQUl2RixFQUFBd0YsRUFBSSxJQUFJLElBQUF5ZSxFQUFBN2pCLElBQVUsUUFBUStkLEVBQUEzRSxFQUFBeFosRUFBQTZsQixFQUFRLHNCQUFBNUIsRUFBQSxHQUFBQSxFQUFBLENBQStCOWIsU0FBQThiLEVBQUE0L0IsY0FBQXQrQyxFQUFBb3BDLGVBQUFucEMsRUFBQXFXLEtBQUEsS0FBQStuQyxTQUFBLE1BQW9FLE9BQUF2akQsSUFBQTRqQixFQUFBcEksS0FBQW9JLEVBQUEyL0IsU0FBQTMvQixNQUFnQyxDQUFLN2pCLEVBQUEsS0FBT21GLEVBQUFsRixFQUFJLEdBQUcsR0FBQWtGLEVBQUFvcEMsZ0JBQUFucEMsRUFBQSxDQUF3QnBGLEVBQUFtRixFQUFJLE1BQU1BLElBQUFzVyxXQUFTdFcsSUFBQWxGLEdBQWEsT0FBQUQsSUFBQUMsRUFBQUQsSUFBQUMsTUFBQTRqQixFQUFBcGlCLE1BQThCMkQsRUFBQXBGLEVBQUF3akQsVUFBYS9uQyxLQUFBemIsRUFBQXdqRCxTQUFBMy9CLEVBQW9CQSxFQUFBcEksS0FBQXpiLEVBQVM2akIsRUFBQTIvQixTQUM3ZXArQyxHQUFHLFNBQUFnZSxJQUFhLFFBQUEzZixHQUFBLE9BQUF4RCxHQUFBLElBQUFBLEVBQUF3akQsY0FBQSxDQUEwQzFqRCxHQUFBLEVBQUssSUFBSSxHQUFBb2pCLFVBQU8sT0FBQWxqQixHQUFBLElBQUFBLEVBQUF3akQsZUFBcUMsUUFBUTFqRCxHQUFBLFNBQUFFLEVBQUF3QixJQUFBTCxHQUFBLElBQXlCLFNBQUFQLEVBQUFzRSxHQUFjcEYsR0FBQSxFQUFLLElBQUFxRixFQUFBZ0MsRUFBUUEsRUFBQWpDLEVBQUksSUFBSSxHQUFBQSxFQUFBLEtBQVUsT0FBQWxGLEdBQVMsQ0FBRSxJQUFBRCxFQUFBUCxFQUFBbS9DLGVBQTZCLEtBQUEzK0MsRUFBQXN1QyxnQkFBQXZ1QyxHQUFvRSxNQUE1QyxHQUFBbWpCLFVBQU8sT0FBQWxqQixLQUFBc3VDLGdCQUFBdnVDLFFBQWdELFVBQUFDLEVBQWtCLEdBQUFrakIsVUFBTyxPQUFBbGpCLElBQUFvakIsS0FBdUIsUUFBUXRqQixHQUFBLEVBQUFxSCxFQUFBaEMsRUFBQSxPQUFBbkYsRUFBQXdCLElBQUFMLEdBQUEsRUFBQWdpQixLQUM1VyxJQUFBM00sRUFBQTBOLEVBQUFiLEVBQUE0TCxLQUFBM0wsRUFBQSxtQkFBQXlvQiwyQkFBQSxFQUFBeG9CLEVBQUEsbUJBQUEwb0IsK0JBQUEsRUFBQXZvQixFQUFBLG1CQUFBKy9CLGlEQUFBLEVBQUE5L0IsRUFBQSxtQkFBQSsvQiwrQ0FBQSxFQUF5USxTQUFBdi9CLEVBQUFqZixHQUFjc1IsRUFBQWtOLEVBQUEsU0FBQXZlLEdBQWdCb2UsRUFBQVcsR0FBS2hmLEVBQUFDLEtBQU8rZSxFQUFBWixFQUFBLFdBQWVLLEVBQUFuTixHQUFLdFIsRUFBQTFGLEVBQUFtL0MsaUJBQTBCLEtBQ2pXLG9CQUFBZ0YsYUFBQSxtQkFBQUEsWUFBQXowQixJQUFBLENBQXVFLElBQUE1SyxFQUFBcS9CLFlBQWtCbmtELEVBQUFtL0MsYUFBQSxXQUFnQyxPQUFBcjZCLEVBQUE0SyxZQUFnQjF2QixFQUFBbS9DLGFBQUEsV0FBcUMsT0FBQXQ3QixFQUFBNkwsT0FBZ0IsSUFBQTF1QixFQUFBeWlCLEVBQUFHLEVBQUFtQixFQUFBLEtBQzlMLEdBRCtNLG9CQUFBemIsT0FBQXliLEVBQUF6YixZQUFBLElBQUFpWSxJQUFBd0QsRUFBQXhELEdBQy9Nd0QsS0FBQXEvQixXQUFBLENBQW9CLElBQUFsL0IsRUFBQUgsRUFBQXEvQixXQUFtQnBqRCxFQUFBa2tCLEVBQUEsR0FBT3pCLEVBQUF5QixFQUFBLEdBQU90QixFQUFBc0IsRUFBQSxHQUFPbGxCLEVBQUFtL0MsYUFBQWo2QixFQUFBLFFBQTBCLHVCQUFBNWIsUUFBQSxtQkFBQSs2QyxlQUFBLENBQXlFLElBQUFqL0IsRUFBQSxLQUFBRSxFQUFBLFNBQUE1ZixHQUF5QixVQUFBMGYsRUFBQSxJQUFnQkEsRUFBQTFmLEdBQUssUUFBUTBmLEVBQUEsT0FBU3BrQixFQUFBLFNBQUEwRSxHQUFjLE9BQUEwZixFQUFBbW5CLFdBQUF2ckMsRUFBQSxFQUFBMEUsSUFBQTBmLEVBQUExZixFQUFBNm1DLFdBQUFqbkIsRUFBQSxRQUFxRDdCLEVBQUEsV0FBYTJCLEVBQUEsTUFBUXhCLEVBQUEsV0FBYSxjQUFVLENBQUssb0JBQUF2RixVQUFBLG1CQUFBNkYsR0FBQTdGLFFBQUF6RSxNQUFBLDJJQUNsVixtQkFBQXVLLEdBQUE5RixRQUFBekUsTUFBQSwySUFBZ0wsSUFBQTJMLEVBQUEsS0FBQUMsR0FBQSxFQUFBRyxHQUFBLEVBQUFFLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxFQUFBLEVBQUFJLEVBQUEsR0FBQUUsRUFBQSxHQUE2Q3pDLEVBQUEsV0FBYSxPQUFBbUMsR0FBQS9sQixFQUFBbS9DLGdCQUFrQyxJQUFBNzRCLEVBQUEsSUFBQSs5QixlQUFBaitCLEVBQUFFLEVBQUFnK0IsTUFBbUNoK0IsRUFBQWkrQixNQUFBQyxVQUFBLFdBQTZCaC9CLEdBQUEsRUFBSyxJQUFBOWYsRUFBQTZmLEVBQUE1ZixFQUFBZ2dCLEVBQVlKLEVBQUEsS0FBT0ksR0FBQSxFQUFLLElBQUFwbEIsRUFBQVAsRUFBQW0vQyxlQUFBeGxDLEdBQUEsRUFBa0MsTUFBQW9NLEVBQUF4bEIsRUFBQSxXQUFBb0YsTUFBQXBGLEdBQTJELE9BQXZCc2xCLE9BQUEsRUFBQWxCLEVBQUFrQyxJQUFldEIsRUFBQTdmLE9BQUlpZ0IsRUFBQWhnQixHQUF2RGdVLEdBQUEsRUFBa0UsVUFBQWpVLEVBQUEsQ0FBYW9nQixHQUFBLEVBQUssSUFBSXBnQixFQUFBaVUsR0FBSyxRQUFRbU0sR0FBQSxLQUNoZixJQUFBZSxFQUFBLFNBQUFuaEIsR0FBa0IsVUFBQTZmLEVBQUEsQ0FBYVosRUFBQWtDLEdBQUssSUFBQWxoQixFQUFBRCxFQUFBcWdCLEVBQUFNLEVBQVkxZ0IsRUFBQTBnQixHQUFBRixFQUFBRSxHQUFBLEVBQUExZ0IsTUFBQSxHQUFBMGdCLEVBQUExZ0IsRUFBQXdnQixJQUFBeGdCLEdBQUF3Z0IsRUFBQXhnQixFQUFvQ29nQixFQUFBcmdCLEVBQUEyZ0IsRUFBTWIsT0FBQSxFQUFBWSxFQUFBcStCLGlCQUFBLFNBQWdDNStCLEdBQUEsR0FBVzdrQixFQUFBLFNBQUEwRSxFQUFBQyxHQUFnQjRmLEVBQUE3ZixFQUFJaWdCLEVBQUFoZ0IsRUFBSW1nQixHQUFBLEVBQUFuZ0IsRUFBQXlnQixFQUFBcStCLGlCQUFBLEdBQUE1K0IsT0FBQSxFQUFBbEIsRUFBQWtDLEtBQTZDcEQsRUFBQSxXQUFhOEIsRUFBQSxLQUFPQyxHQUFBLEVBQUtHLEdBQUEsR0FBTTNsQixFQUFBaytDLDJCQUFBLEVBQXFDbCtDLEVBQUFtK0MsOEJBQUEsRUFBd0NuK0MsRUFBQW05Qyx3QkFBQSxFQUFrQ245QyxFQUFBcStDLHNCQUFBLEVBQWdDcitDLEVBQUFvK0MscUJBQUEsRUFDeFhwK0MsRUFBQWs5Qyx5QkFBQSxTQUFBeDNDLEVBQUFDLEdBQStDLE9BQUFELEdBQVUseUNBQXlDLFFBQUFBLEVBQUEsRUFBWSxJQUFBbkYsRUFBQStkLEVBQUEzRSxFQUFBM1YsRUFBWXNhLEVBQUE1WSxFQUFJMUIsRUFBQWhFLEVBQUFtL0MsZUFBeUIsSUFBSSxPQUFBeDVDLElBQVcsUUFBUTJZLEVBQUEvZCxFQUFBeUQsRUFBQTJWLEVBQUFnSyxNQUFjM2pCLEVBQUEwa0QsY0FBQSxTQUFBaC9DLEdBQWtDLE9BQUE0WSxHQUFVLHlCQUFBM1ksRUFBQSxFQUE2QixNQUFNLFFBQUFBLEVBQUEyWSxFQUFZLElBQUEvZCxFQUFBK2QsRUFBQTNFLEVBQUEzVixFQUFZc2EsRUFBQTNZLEVBQUkzQixFQUFBaEUsRUFBQW0vQyxlQUF5QixJQUFJLE9BQUF6NUMsSUFBVyxRQUFRNFksRUFBQS9kLEVBQUF5RCxFQUFBMlYsRUFBQWdLLE1BQ3ZWM2pCLEVBQUEyc0MsMEJBQUEsU0FBQWpuQyxFQUFBQyxHQUFnRCxJQUFBcEYsR0FBQSxJQUFBeUQsSUFBQWhFLEVBQUFtL0MsZUFBc0Msb0JBQUF4NUMsR0FBQSxPQUFBQSxHQUFBLGlCQUFBQSxFQUFBKzVDLFFBQUEvNUMsRUFBQXBGLEVBQUFvRixFQUFBKzVDLGFBQTRFLE9BQUFwaEMsR0FBZSxPQUFBM1ksRUFBQXBGLEdBQUEsRUFBYyxNQUFNLE9BQUFvRixFQUFBcEYsRUFBQSxJQUFlLE1BQU0sT0FBQW9GLEVBQUFwRixFQUFBLFdBQXNCLE1BQU0sT0FBQW9GLEVBQUFwRixFQUFBLElBQWUsTUFBTSxRQUFBb0YsRUFBQXBGLEVBQUEsSUFBd0YsR0FBeEVtRixFQUFBLENBQUc0QyxTQUFBNUMsRUFBQXMrQyxjQUFBMWxDLEVBQUF3d0IsZUFBQW5wQyxFQUFBcVcsS0FBQSxLQUFBK25DLFNBQUEsTUFBcUUsT0FBQXZqRCxJQUFBa0YsRUFBQXNXLEtBQUF0VyxFQUFBcStDLFNBQUFyK0MsRUFBQTFELFFBQXNDLENBQUt6QixFQUFBLEtBQU8sSUFBQW9aLEVBQUFuWixFQUFRLEdBQUcsR0FBQW1aLEVBQUFtMUIsZUFBQW5wQyxFQUFBLENBQXVCcEYsRUFBQW9aLEVBQUksTUFBTUEsSUFBQXFDLFdBQVNyQyxJQUFBblosR0FBYSxPQUFBRCxJQUFBQyxFQUFBRCxJQUFBQyxNQUFBa0YsRUFBQTFELE1BQ3ZkMkQsRUFBQXBGLEVBQUF3akQsVUFBYS9uQyxLQUFBemIsRUFBQXdqRCxTQUFBcitDLEVBQW9CQSxFQUFBc1csS0FBQXpiLEVBQVNtRixFQUFBcStDLFNBQUFwK0MsRUFBYSxPQUFBRCxHQUFVMUYsRUFBQTZzQyx3QkFBQSxTQUFBbm5DLEdBQTRDLElBQUFDLEVBQUFELEVBQUFzVyxLQUFhLFVBQUFyVyxFQUFBLENBQWEsR0FBQUEsSUFBQUQsRUFBQWxGLEVBQUEsU0FBZ0IsQ0FBS2tGLElBQUFsRixNQUFBbUYsR0FBYSxJQUFBcEYsRUFBQW1GLEVBQUFxK0MsU0FBaUJ4akQsRUFBQXliLEtBQUFyVyxFQUFTQSxFQUFBbytDLFNBQUF4akQsRUFBYW1GLEVBQUFzVyxLQUFBdFcsRUFBQXErQyxTQUFBLE9BQXlCL2pELEVBQUEya0Qsc0JBQUEsU0FBQWovQyxHQUEwQyxJQUFBQyxFQUFBMlksRUFBUSxrQkFBa0IsSUFBQS9kLEVBQUErZCxFQUFBM0UsRUFBQTNWLEVBQVlzYSxFQUFBM1ksRUFBSTNCLEVBQUFoRSxFQUFBbS9DLGVBQXlCLElBQUksT0FBQXo1QyxFQUFBbEQsTUFBQUMsS0FBQUosV0FBK0IsUUFBUWljLEVBQUEvZCxFQUFBeUQsRUFBQTJWLEVBQUFnSyxPQUFlM2pCLEVBQUFpK0MsaUNBQUEsV0FBb0QsT0FBQTMvQixHQUNwY3RlLEVBQUFpZ0QscUJBQUEsV0FBd0MsT0FBQXQ0QyxJQUFBLE9BQUFuSCxLQUFBc3VDLGVBQUEzdUMsR0FBQXlqQixNQUErQzVqQixFQUFBNGtELDJCQUFBLFdBQThDLE9BQUFwa0QsR0FBQXdCLEtBQWVoQyxFQUFBNmtELHdCQUFBLGFBQTZDN2tELEVBQUE4a0QsOEJBQUEsV0FBaUQsT0FBQXRrRCx5TENwQmxQLElBQUFvaUIsRUFBQUMsRUFBQS9pQixFQUFBLElBQ0FpbEQsRUFBQWpsRCxFQUFBLEdBQ0FrbEQsRUFBQW5pQyxFQUFBL2lCLEVBQUEsS0FDQW1sRCxFQUFBcGlDLEVBQUEvaUIsRUFBQSxLQVdBRSxFQUFBLFFBVEEsV0FDRSxPQUNFNGlCLEVBQUEsUUFBQXBaLGNBQUN1N0MsRUFBQTEwQyxPQUFNLEtBQ0x1UyxFQUFBLFFBQUFwWixjQUFDdTdDLEVBQUE3MEMsTUFBSyxDQUFDb0UsT0FBSyxFQUFDL04sS0FBSyxJQUFJZ1AsVUFBV3l2QyxFQUFBLFVBQ2pDcGlDLEVBQUEsUUFBQXBaLGNBQUN1N0MsRUFBQTcwQyxNQUFLLENBQUMzSixLQUFLLFNBQVNnUCxVQUFXMHZDLEVBQUEsMENDUHRDamxELEVBQUFzQixZQUFBLEVBRUEsSUFBQTRqRCxFQUFhcGxELEVBQVEsR0FNckJxbEQsR0FKQTdpQyxFQUFBNGlDLEdBSUE1aUMsRUFGaUJ4aUIsRUFBUSxLQU16QnNsRCxFQUFBOWlDLEVBRld4aUIsRUFBUSxLQU1uQndpQixFQUZleGlCLEVBQVEsS0FJdkIsU0FBQXdpQixFQUFBL2MsR0FBc0MsT0FBQUEsS0FBQWpFLFdBQUFpRSxFQUFBLENBQXVDaWQsUUFBQWpkLEdBRTdFLFNBQUE4L0MsRUFBQUMsRUFBQUMsR0FBaUQsS0FBQUQsYUFBQUMsR0FBMEMsVUFBQXpwQyxVQUFBLHFDQUUzRixTQUFBMHBDLEVBQUFueUMsRUFBQWhULEdBQWlELElBQUFnVCxFQUFhLFVBQUFveUMsZUFBQSw2REFBeUYsT0FBQXBsRCxHQUFBLGlCQUFBQSxHQUFBLG1CQUFBQSxFQUFBZ1QsRUFBQWhULEVBRXZKLFNBQUFxbEQsRUFBQXppRCxFQUFBQyxHQUEwQyxzQkFBQUEsR0FBQSxPQUFBQSxFQUErRCxVQUFBNFksVUFBQSxrRUFBQTVZLEdBQXVHRCxFQUFBbkIsVUFBQWxCLE9BQUFZLE9BQUEwQixLQUFBcEIsVUFBQSxDQUF5RXFCLFlBQUEsQ0FBZWhDLE1BQUE4QixFQUFBbkMsWUFBQSxFQUFBd2MsVUFBQSxFQUFBRCxjQUFBLEtBQTZFbmEsSUFBQXRDLE9BQUEra0QsZUFBQS9rRCxPQUFBK2tELGVBQUExaUQsRUFBQUMsR0FBQUQsRUFBQUcsVUFBQUYsR0FFclgsSUFBQTBpRCxFQUFBLFdBc0tBNWxELEVBQUF3aUIsUUEvSEEsU0FBQTBVLEVBQUEydUIsR0FDQSxJQUFBQyxFQUFBQyxFQUVBQyxFQUFBLDZCQUFBWixFQUFBNWlDLFdBQUEsS0FFQWpSLEVBQUEsU0FBQTAwQyxHQUdBLFNBQUExMEMsSUFDQSxJQUFBMjBDLEVBQUF0MEMsRUFwQ0F6USxFQUNBZ2xELEVBcUNBZCxFQUFBNWlELEtBQUE4TyxHQUVBLFFBQUF6SSxFQUFBekcsVUFBQUMsT0FBQXlHLEVBQUFuRCxNQUFBa0QsR0FBQUUsRUFBQSxFQUFxRUEsRUFBQUYsRUFBYUUsSUFDbEZELEVBQUFDLEdBQUEzRyxVQUFBMkcsR0FHQSxPQUFBazlDLEVBQUF0MEMsRUFBQTR6QyxFQUFBL2lELEtBQUF3akQsRUFBQTVsRCxLQUFBbUMsTUFBQXlqRCxFQUFBLENBQUF4akQsTUFBQW1DLE9BQUFtRSxLQUFBNkksRUFBQXcwQyxTQTVDQWpsRCxFQTRDQXlRLEVBQUE3SCxNQUFBNUksTUEzQ0FnbEQsRUFBQSxHQUNBLENBQ0FFLEdBQUEsU0FBQUMsR0FDQUgsRUFBQXg5QyxLQUFBMjlDLElBRUFDLElBQUEsU0FBQUQsR0FDQUgsSUFBQXY5QyxPQUFBLFNBQUF3YixHQUNBLE9BQUFBLElBQUFraUMsS0FHQXZsRCxJQUFBLFdBQ0EsT0FBQUksR0FFQTZ5QixJQUFBLFNBQUF3eUIsRUFBQUMsR0FDQXRsRCxFQUFBcWxELEVBQ0FMLEVBQUFsOUMsUUFBQSxTQUFBcTlDLEdBQ0EsT0FBQUEsRUFBQW5sRCxFQUFBc2xELFFBMkJBakIsRUFBQTV6QyxFQUFBczBDLEdBb0NBLE9BL0NBUixFQUFBbjBDLEVBQUEwMEMsR0FjQTEwQyxFQUFBelAsVUFBQThyQyxnQkFBQSxXQUNBLElBQUE1aUMsRUFFQSxPQUFBQSxFQUFBLElBQXNCZzdDLEdBQUF2akQsS0FBQTJqRCxRQUFBcDdDLEdBR3RCdUcsRUFBQXpQLFVBQUF1dkMsMEJBQUEsU0FBQXFWLEdBQ0EsR0FBQWprRCxLQUFBc0gsTUFBQTVJLFFBQUF1bEQsRUFBQXZsRCxNQUFBLENBQ0EsSUFBQXdsRCxFQUFBbGtELEtBQUFzSCxNQUFBNUksTUFDQXFsRCxFQUFBRSxFQUFBdmxELE1BQ0FzbEQsT0FBQSxJQWpFQTVpQyxFQW1FQThpQyxNQW5FQTdpQyxFQW1FQTBpQyxHQWpFQSxJQUFBM2lDLEdBQUEsRUFBQUEsR0FBQSxFQUFBQyxFQUVBRCxNQUFBQyxNQWdFQTJpQyxFQUFBLEdBRUFBLEVBQUEsbUJBQUFaLElBQUFjLEVBQUFILEdBQUFaLEVBT0EsSUFGQWEsR0FBQSxJQUdBaGtELEtBQUEyakQsUUFBQXB5QixJQUFBMHlCLEVBQUF2bEQsTUFBQXNsRCxJQTlFQSxJQUFBNWlDLEVBQUFDLEdBb0ZBdlMsRUFBQXpQLFVBQUF5USxPQUFBLFdBQ0EsT0FBQTlQLEtBQUFzSCxNQUFBeUksVUFHQWpCLEVBaERBLENBaURHMnpDLEVBQUF4eUMsV0FFSG5CLEVBQUFpRyxvQkFBQXN1QyxFQUFBLElBQTBERSxHQUFBYixFQUFBM2lDLFFBQUE1Z0IsT0FBQWdsRCxXQUFBZCxHQUUxRCxJQUFBcjBDLEVBQUEsU0FBQW8xQyxHQUdBLFNBQUFwMUMsSUFDQSxJQUFBcTFDLEVBQUFDLEVBRUExQixFQUFBNWlELEtBQUFnUCxHQUVBLFFBQUF1MUMsRUFBQTNrRCxVQUFBQyxPQUFBeUcsRUFBQW5ELE1BQUFvaEQsR0FBQUMsRUFBQSxFQUF3RUEsRUFBQUQsRUFBZUMsSUFDdkZsK0MsRUFBQWsrQyxHQUFBNWtELFVBQUE0a0QsR0FHQSxPQUFBSCxFQUFBQyxFQUFBdkIsRUFBQS9pRCxLQUFBb2tELEVBQUF4bUQsS0FBQW1DLE1BQUFxa0QsRUFBQSxDQUFBcGtELE1BQUFtQyxPQUFBbUUsS0FBQWcrQyxFQUFBMy9DLE1BQUEsQ0FDQWpHLE1BQUE0bEQsRUFBQTl5QixZQUNPOHlCLEVBQUFoMEMsU0FBQSxTQUFBeXpDLEVBQUFDLEdBRVAsS0FEQSxFQUFBTSxFQUFBalAsY0FDQTJPLElBQ0FNLEVBQUF4N0MsU0FBQSxDQUEyQnBLLE1BQUE0bEQsRUFBQTl5QixjQUVwQnV4QixFQUFBdUIsRUFBQUQsR0FzQ1AsT0F4REFwQixFQUFBajBDLEVBQUFvMUMsR0FxQkFwMUMsRUFBQTNQLFVBQUF1dkMsMEJBQUEsU0FBQXFWLEdBQ0EsSUFBQTVPLEVBQUE0TyxFQUFBNU8sYUFFQXIxQyxLQUFBcTFDLHFCQUFBOE4sRUFDQTlOLEdBR0FybUMsRUFBQTNQLFVBQUF1USxrQkFBQSxXQUNBNVAsS0FBQWdPLFFBQUF1MUMsSUFDQXZqRCxLQUFBZ08sUUFBQXUxQyxHQUFBSyxHQUFBNWpELEtBQUFzUSxVQUVBLElBQUEra0MsRUFBQXIxQyxLQUFBc0gsTUFBQSt0QyxhQUVBcjFDLEtBQUFxMUMscUJBQUE4TixFQUNBOU4sR0FHQXJtQyxFQUFBM1AsVUFBQXdRLHFCQUFBLFdBQ0E3UCxLQUFBZ08sUUFBQXUxQyxJQUNBdmpELEtBQUFnTyxRQUFBdTFDLEdBQUFPLElBQUE5akQsS0FBQXNRLFdBSUF0QixFQUFBM1AsVUFBQW15QixTQUFBLFdBQ0EsT0FBQXh4QixLQUFBZ08sUUFBQXUxQyxHQUNBdmpELEtBQUFnTyxRQUFBdTFDLEdBQUFqbEQsTUFFQW0yQixHQUlBemxCLEVBQUEzUCxVQUFBeVEsT0FBQSxXQUNBLE9BcEhBQyxFQW9IQS9QLEtBQUFzSCxNQUFBeUksU0FuSEE1TSxNQUFBQyxRQUFBMk0sS0FBQSxHQUFBQSxHQW1IQS9QLEtBQUEyRSxNQUFBakcsT0FwSEEsSUFBQXFSLEdBdUhBZixFQXpEQSxDQTBER3l6QyxFQUFBeHlDLFdBS0gsT0FIQWpCLEVBQUFpRyxlQUFBcXVDLEVBQUEsSUFBcURDLEdBQUFiLEVBQUEzaUMsUUFBQTVnQixPQUFBbWtELEdBR3JELENBQ0F4MEMsV0FDQUUsYUFLQXhSLEVBQUFELFVBQUEsc0NDMUxBLElBQUFrbkQsRUFBMkJwbkQsRUFBUSxJQUVuQyxTQUFBcW5ELEtBQ0EsU0FBQUMsS0FDQUEsRUFBQUMsa0JBQUFGLEVBRUFsbkQsRUFBQUQsUUFBQSxXQUNBLFNBQUFzbkQsRUFBQXY5QyxFQUFBdzlDLEVBQUFDLEVBQUF4Z0QsRUFBQXlnRCxFQUFBQyxHQUNBLEdBQUFBLElBQUFSLEVBQUEsQ0FJQSxJQUFBOW9DLEVBQUEsSUFBQTNhLE1BQ0EsbUxBS0EsTUFEQTJhLEVBQUEzZCxLQUFBLHNCQUNBMmQsR0FHQSxTQUFBdXBDLElBQ0EsT0FBQUwsRUFGQUEsRUFBQVYsV0FBQVUsRUFNQSxJQUFBTSxFQUFBLENBQ0FDLE1BQUFQLEVBQ0FRLEtBQUFSLEVBQ0FwaEMsS0FBQW9oQyxFQUNBeDBCLE9BQUF3MEIsRUFDQTFsRCxPQUFBMGxELEVBQ0FTLE9BQUFULEVBQ0FVLE9BQUFWLEVBRUFXLElBQUFYLEVBQ0FZLFFBQUFQLEVBQ0Evd0MsUUFBQTB3QyxFQUNBbFosWUFBQWtaLEVBQ0FhLFdBQUFSLEVBQ0Exa0IsS0FBQXFrQixFQUNBYyxTQUFBVCxFQUNBVSxNQUFBVixFQUNBVyxVQUFBWCxFQUNBWSxNQUFBWixFQUNBcnpDLE1BQUFxekMsRUFFQWEsZUFBQXBCLEVBQ0FDLGtCQUFBRixHQUtBLE9BRkFTLEVBQUFhLFVBQUFiLEVBRUFBLGlDQ25EQTNuRCxFQUFBRCxRQUZBLDhFQ1RBLFNBQUF1aEIsR0FHQSxJQUFBOWYsRUFBQSx1QkFFQXhCLEVBQUFELFFBQUEsV0FDQSxPQUFBdWhCLEVBQUE5ZixJQUFBOGYsRUFBQTlmLElBQUEsdURDSUEsSUFTQWluRCxFQVRvQjVvRCxFQUFRLElBbUQ1QkcsRUFBQUQsUUFBQTBvRCxnQ0NsREEsU0FBQUMsRUFBQW5yQyxHQUNBLGtCQUNBLE9BQUFBLEdBU0EsSUFBQTJwQyxFQUFBLGFBRUFBLEVBQUF5QixZQUFBRCxFQUNBeEIsRUFBQTBCLGlCQUFBRixHQUFBLEdBQ0F4QixFQUFBMkIsZ0JBQUFILEdBQUEsR0FDQXhCLEVBQUE0QixnQkFBQUosRUFBQSxNQUNBeEIsRUFBQTZCLGdCQUFBLFdBQ0EsT0FBQXZtRCxNQUVBMGtELEVBQUE4QixvQkFBQSxTQUFBenJDLEdBQ0EsT0FBQUEsR0FHQXZkLEVBQUFELFFBQUFtbkQsaUJDbkNBbG5ELEVBQUFELFFBQUE0RixNQUFBQyxTQUFBLFNBQUFxakQsR0FDQSx3QkFBQXRvRCxPQUFBa0IsVUFBQXVKLFNBQUFoTCxLQUFBNm9EOzs7Ozs7OztHQ1FhdG9ELE9BQUFDLGVBQUFiLEVBQUEsY0FBNENtQixPQUFBLElBQ3pELElBQUF3RSxFQUFBLG1CQUFBMUUsZUFBQXVpQixJQUFBampCLEVBQUFvRixFQUFBMUUsT0FBQXVpQixJQUFBLHVCQUFBaGpCLEVBQUFtRixFQUFBMUUsT0FBQXVpQixJQUFBLHNCQUFBN2IsRUFBQWhDLEVBQUExRSxPQUFBdWlCLElBQUEsd0JBQUE3SixFQUFBaFUsRUFBQTFFLE9BQUF1aUIsSUFBQSwyQkFBQWxGLEVBQUEzWSxFQUFBMUUsT0FBQXVpQixJQUFBLHdCQUFBWSxFQUFBemUsRUFBQTFFLE9BQUF1aUIsSUFBQSx3QkFBQXhmLEVBQUEyQixFQUFBMUUsT0FBQXVpQixJQUFBLHVCQUFBcmpCLEVBQUF3RixFQUFBMUUsT0FBQXVpQixJQUFBLDBCQUFBbGpCLEVBQUFxRixFQUFBMUUsT0FBQXVpQixJQUFBLCtCQUFBN2hCLEVBQUFnRSxFQUFBMUUsT0FBQXVpQixJQUFBLDJCQUFBeGhCLEVBQUEyRCxFQUFBMUUsT0FBQXVpQixJQUFBLHdCQUFBQyxFQUFBOWQsRUFBQTFFLE9BQUF1aUIsSUFBQSxjQUNBLE1BQUF4aUIsRUFBQTJFLEVBQUExRSxPQUFBdWlCLElBQUEsb0JBQXlDLFNBQUFwaUIsRUFBQXNFLEdBQWMsb0JBQUFBLEdBQUEsT0FBQUEsRUFBQSxDQUFrQyxJQUFBZ2UsRUFBQWhlLEVBQUE2UyxTQUFpQixPQUFBbUwsR0FBVSxLQUFBbmpCLEVBQUEsT0FBQW1GLElBQUF1UyxNQUEwQixLQUFBOVgsRUFBQSxLQUFBRyxFQUFBLEtBQUFxSCxFQUFBLEtBQUEyVyxFQUFBLEtBQUEzRSxFQUFBLEtBQUEzWCxFQUFBLE9BQUEwRCxFQUFtRCxlQUFBQSxPQUFBNlMsVUFBa0MsS0FBQXZVLEVBQUEsS0FBQXJDLEVBQUEsS0FBQXlpQixFQUFBLE9BQUExZSxFQUE4QixlQUFBZ2UsR0FBa0IsS0FBQTFpQixFQUFBLEtBQUF5aUIsRUFBQSxLQUFBampCLEVBQUEsT0FBQWtqQixJQUFnQyxTQUFBQyxFQUFBamUsR0FBYyxPQUFBdEUsRUFBQXNFLEtBQUFwRixFQUFnQk4sRUFBQW1wRCxPQUFBL25ELEVBQWlCcEIsRUFBQW9wRCxVQUFBanBELEVBQW9CSCxFQUFBcXBELGVBQUEvb0QsRUFBeUJOLEVBQUFzcEQsZ0JBQUF0bEQsRUFBMEJoRSxFQUFBdXBELGdCQUFBbmxDLEVBQTBCcGtCLEVBQUF3cEQsUUFBQWpwRCxFQUFrQlAsRUFBQTRZLFdBQUFqWCxFQUNyZDNCLEVBQUF5b0IsU0FBQTlnQixFQUFtQjNILEVBQUF5cEQsS0FBQXpvRCxFQUFlaEIsRUFBQTBwRCxLQUFBam1DLEVBQWV6akIsRUFBQTJwRCxPQUFBbnBELEVBQWlCUixFQUFBNHBELFNBQUF0ckMsRUFBbUJ0ZSxFQUFBMG9CLFdBQUEvTyxFQUFxQjNaLEVBQUEyb0IsU0FBQTNtQixFQUFtQmhDLEVBQUE2cEQsbUJBQUEsU0FBQW5rRCxHQUF1Qyx1QkFBQUEsR0FBQSxtQkFBQUEsT0FBQWlDLEdBQUFqQyxJQUFBcEYsR0FBQW9GLElBQUE0WSxHQUFBNVksSUFBQWlVLEdBQUFqVSxJQUFBMUQsR0FBQSxpQkFBQTBELEdBQUEsT0FBQUEsTUFBQTZTLFdBQUF2WCxHQUFBMEUsRUFBQTZTLFdBQUFrTCxHQUFBL2QsRUFBQTZTLFdBQUE2TCxHQUFBMWUsRUFBQTZTLFdBQUF2VSxHQUFBMEIsRUFBQTZTLFdBQUE1VyxJQUFzTTNCLEVBQUE4cEQsWUFBQSxTQUFBcGtELEdBQWdDLE9BQUFpZSxFQUFBamUsSUFBQXRFLEVBQUFzRSxLQUFBdkYsR0FBdUJILEVBQUErcEQsaUJBQUFwbUMsRUFBMkIzakIsRUFBQWdxRCxrQkFBQSxTQUFBdGtELEdBQXNDLE9BQUF0RSxFQUFBc0UsS0FBQTFCLEdBQ2xlaEUsRUFBQWlxRCxrQkFBQSxTQUFBdmtELEdBQXNDLE9BQUF0RSxFQUFBc0UsS0FBQTBlLEdBQWlCcGtCLEVBQUFrcUQsVUFBQSxTQUFBeGtELEdBQThCLHVCQUFBQSxHQUFBLE9BQUFBLEtBQUE2UyxXQUFBaFksR0FBcURQLEVBQUFtcUQsYUFBQSxTQUFBemtELEdBQWlDLE9BQUF0RSxFQUFBc0UsS0FBQS9ELEdBQWlCM0IsRUFBQW9xRCxXQUFBLFNBQUExa0QsR0FBK0IsT0FBQXRFLEVBQUFzRSxLQUFBaUMsR0FBaUIzSCxFQUFBcXFELE9BQUEsU0FBQTNrRCxHQUEyQixPQUFBdEUsRUFBQXNFLEtBQUExRSxHQUFpQmhCLEVBQUEyWSxPQUFBLFNBQUFqVCxHQUEyQixPQUFBdEUsRUFBQXNFLEtBQUErZCxHQUFpQnpqQixFQUFBc3FELFNBQUEsU0FBQTVrRCxHQUE2QixPQUFBdEUsRUFBQXNFLEtBQUFsRixHQUFpQlIsRUFBQXVxRCxXQUFBLFNBQUE3a0QsR0FBK0IsT0FBQXRFLEVBQUFzRSxLQUFBNFksR0FBaUJ0ZSxFQUFBd3FELGFBQUEsU0FBQTlrRCxHQUFpQyxPQUFBdEUsRUFBQXNFLEtBQUFpVSxHQUNuYzNaLEVBQUF5cUQsV0FBQSxTQUFBL2tELEdBQStCLE9BQUF0RSxFQUFBc0UsS0FBQTFELHNLQ2QvQixJQUFBNGdCLEVBQUFDLEVBQUEvaUIsRUFBQSxJQVdBRSxFQUFBLFFBVEEsV0FDRSxPQUNFNGlCLEVBQUEsUUFBQXBaLGNBQUEsV0FDRW9aLEVBQUEsUUFBQXBaLGNBQUEsMEJBQ0FvWixFQUFBLFFBQUFwWixjQUFBLFVBQVFvd0MsUUFBUyxXQUFNLE9BQUF2N0IsUUFBUXFzQyxJQUFSLFdBQW9CLDZDQ05qRDVxRCxFQUFBa0IsRUFBQTBCLEdBQUE1QyxFQUFBVSxFQUFBa0MsRUFBQSxrQ0FBQTRnQixJQUFBeGpCLEVBQUFVLEVBQUFrQyxFQUFBLCtCQUFBaW9ELElBQUE3cUQsRUFBQVUsRUFBQWtDLEVBQUEseUJBQUFrb0QsSUFBQTlxRCxFQUFBVSxFQUFBa0MsRUFBQSw0QkFBQW1vRCxJQUFBLElBQUFDLEVBQUFockQsRUFBQSxHQUFBaXJELEVBQUFqckQsRUFBQSxHQUFBa3JELEVBQUFsckQsRUFBQTZCLEVBQUFvcEQsR0FBQUUsRUFBQW5yRCxFQUFBLEdBQUFBLEVBQUFVLEVBQUFrQyxFQUFBLGlDQUFBdW9ELEVBQUEsZUFBQW5yRCxFQUFBVSxFQUFBa0MsRUFBQSwyQkFBQXVvRCxFQUFBLFNBQUFuckQsRUFBQVUsRUFBQWtDLEVBQUEsNkJBQUF1b0QsRUFBQSxXQUFBbnJELEVBQUFVLEVBQUFrQyxFQUFBLDBCQUFBdW9ELEVBQUEsUUFBQW5yRCxFQUFBVSxFQUFBa0MsRUFBQSwyQkFBQXVvRCxFQUFBLFNBQUFuckQsRUFBQVUsRUFBQWtDLEVBQUEsaUNBQUF1b0QsRUFBQSxlQUFBbnJELEVBQUFVLEVBQUFrQyxFQUFBLDJCQUFBdW9ELEVBQUEsU0FBQW5yRCxFQUFBVSxFQUFBa0MsRUFBQSxpQ0FBQXVvRCxFQUFBLGVBQUFuckQsRUFBQVUsRUFBQWtDLEVBQUEsOEJBQUF1b0QsRUFBQSxZQUFBbnJELEVBQUFVLEVBQUFrQyxFQUFBLCtCQUFBdW9ELEVBQUEsYUFBQW5yRCxFQUFBVSxFQUFBa0MsRUFBQSxvQ0FBQXVvRCxFQUFBLHNCQUFBQyxFQUFBcHJELEVBQUEsR0FBQXFyRCxHQUFBcnJELEVBQUEsR0FBQUEsRUFBQSxJQUFBc3JELEVBQUF0ckQsRUFBQSxHQUFBdXJELEVBQUF2ckQsRUFBQSxHQWVBd2pCLEVBRUEsU0FBQTNSLEdBR0EsU0FBQTJSLElBR0EsSUFGQSxJQUFBMVIsRUFFQTlJLEVBQUF6RyxVQUFBQyxPQUFBeUcsRUFBQSxJQUFBbkQsTUFBQWtELEdBQUFFLEVBQUEsRUFBdUVBLEVBQUFGLEVBQWFFLElBQ3BGRCxFQUFBQyxHQUFBM0csVUFBQTJHLEdBS0EsT0FGQTRJLEVBQUFELEVBQUF0UixLQUFBbUMsTUFBQW1QLEVBQUEsQ0FBQWxQLE1BQUFtQyxPQUFBbUUsS0FBQXRHLE1BQ0FxSCxRQUFvQmxKLE9BQUFzcUQsRUFBQSxFQUFBdHFELENBQW9CZ1IsRUFBQTdILE9BQ3hDNkgsRUFZQSxPQXZCRWhSLE9BQUFrcUQsRUFBQSxFQUFBbHFELENBQWMwaUIsRUFBQTNSLEdBY2hCMlIsRUFBQXhoQixVQUVBeVEsT0FBQSxXQUNBLE9BQVd5NEMsRUFBQXRsRCxFQUFLOEQsY0FBZXloRCxFQUFBLE9BQU0sQ0FDckNuaEQsUUFBQXJILEtBQUFxSCxRQUNBMEksU0FBQS9QLEtBQUFzSCxNQUFBeUksWUFJQThRLEVBeEJBLENBeUJFMG5DLEVBQUF0bEQsRUFBS2dOLFdBb0JQLElBQUFpNEMsRUFFQSxTQUFBaDVDLEdBR0EsU0FBQWc1QyxJQUdBLElBRkEsSUFBQS80QyxFQUVBOUksRUFBQXpHLFVBQUFDLE9BQUF5RyxFQUFBLElBQUFuRCxNQUFBa0QsR0FBQUUsRUFBQSxFQUF1RUEsRUFBQUYsRUFBYUUsSUFDcEZELEVBQUFDLEdBQUEzRyxVQUFBMkcsR0FLQSxPQUZBNEksRUFBQUQsRUFBQXRSLEtBQUFtQyxNQUFBbVAsRUFBQSxDQUFBbFAsTUFBQW1DLE9BQUFtRSxLQUFBdEcsTUFDQXFILFFBQW9CbEosT0FBQXNxRCxFQUFBLEVBQUF0cUQsQ0FBaUJnUixFQUFBN0gsT0FDckM2SCxFQVlBLE9BdkJFaFIsT0FBQWtxRCxFQUFBLEVBQUFscUQsQ0FBYytwRCxFQUFBaDVDLEdBY2hCZzVDLEVBQUE3b0QsVUFFQXlRLE9BQUEsV0FDQSxPQUFXeTRDLEVBQUF0bEQsRUFBSzhELGNBQWV5aEQsRUFBQSxPQUFNLENBQ3JDbmhELFFBQUFySCxLQUFBcUgsUUFDQTBJLFNBQUEvUCxLQUFBc0gsTUFBQXlJLFlBSUFtNEMsRUF4QkEsQ0F5QkVLLEVBQUF0bEQsRUFBS2dOLFdBdUJQLElBQUFrNEMsRUFFQSxTQUFBajVDLEdBR0EsU0FBQWk1QyxJQUNBLE9BQUFqNUMsRUFBQW5QLE1BQUFDLEtBQUFKLFlBQUFJLEtBSEU3QixPQUFBa3FELEVBQUEsRUFBQWxxRCxDQUFjZ3FELEVBQUFqNUMsR0FNaEIsSUFBQVMsRUFBQXc0QyxFQUFBOW9ELFVBd0NBLE9BdENBc1EsRUFBQWs1QyxZQUFBLFNBQUE1L0MsRUFBQTVCLElBQ0FySCxLQUFBc0gsTUFBQTZ2QyxTQUFBbjNDLEtBQUFzSCxNQUFBNnZDLFFBQUFsdUMsR0FFQUEsRUFBQStpQixrQkFDQSxJQUFBL2lCLEVBQUE2dUIsUUFDQTkzQixLQUFBc0gsTUFBQTNILFFBQUEsVUFBQUssS0FBQXNILE1BQUEzSCxRQXhCQSxTQUFBc0osR0FDQSxTQUFBQSxFQUFBK2xCLFNBQUEvbEIsRUFBQThsQixRQUFBOWxCLEVBQUE2bEIsU0FBQTdsQixFQUFBNHVCLFVBd0JBaXhCLENBQUE3L0MsTUFFQUEsRUFBQXVqQixrQkFDQXhzQixLQUFBc0gsTUFBQW9ELFFBQUFyRCxFQUFBcUQsUUFBQXJELEVBQUFuQixNQUNBbEcsS0FBQXNILE1BQUE1RixNQUlBaU8sRUFBQUcsT0FBQSxXQUNBLElBQUFYLEVBQUFuUCxLQUVBNlMsRUFBQTdTLEtBQUFzSCxNQUNBeWhELEVBQUFsMkMsRUFBQWsyQyxTQUVBcm5ELEdBREFtUixFQUFBbkksUUFDQW1JLEVBQUFuUixJQUNBd1MsRUFBZS9WLE9BQUF3cUQsRUFBQSxFQUFBeHFELENBQTZCMFUsRUFBQSw2QkFHNUMsT0FBVzAxQyxFQUFBdGxELEVBQUs4RCxjQUFleWhELEVBQUEsZ0JBQWV4NUMsU0FBQSxjQUFBaEIsR0FDOUNBLEdBQTRIN1AsT0FBQXlxRCxFQUFBLEVBQUF6cUQsRUFBUyxHQUNySSxJQUFBb0csRUFBQSxpQkFBQTdDLEVBQThDdkQsT0FBQXNxRCxFQUFBLEVBQUF0cUQsQ0FBY3VELEVBQUEsVUFBQXNNLEVBQUF6SixVQUFBN0MsRUFDNUQ0SSxFQUFBL0YsRUFBQXlKLEVBQUEzRyxRQUFBMkMsV0FBQXpGLEdBQUEsR0FDQSxPQUFhZ2tELEVBQUF0bEQsRUFBSzhELGNBQUEsSUFBb0I1SSxPQUFBdXFELEVBQUEsRUFBQXZxRCxDQUFRLEdBQUcrVixFQUFBLENBQ2pEaWpDLFFBQUEsU0FBQWx1QyxHQUNBLE9BQUFrRyxFQUFBMDVDLFlBQUE1L0MsRUFBQStFLEVBQUEzRyxVQUVBaUQsT0FDQXFLLElBQUFvMEMsUUFLQVosRUEvQ0EsQ0FnREVJLEVBQUF0bEQsRUFBS2dOLFdBOEJQLFNBQUFtNEMsRUFBQTcvQyxHQUNBLElBQUF5Z0QsRUFBQXpnRCxFQUFBLGdCQUNBMGdELE9BQUEsSUFBQUQsRUFBQSxPQUFBQSxFQUNBRSxFQUFBM2dELEVBQUE0Z0QsZ0JBQ0FBLE9BQUEsSUFBQUQsRUFBQSxTQUFBQSxFQUNBRSxFQUFBN2dELEVBQUE2Z0QsWUFDQUMsRUFBQTlnRCxFQUFBK2dELFVBQ0F6M0MsRUFBQXRKLEVBQUFzSixNQUNBMDNDLEVBQUFoaEQsRUFBQXZDLFNBQ0F6QixFQUFBZ0UsRUFBQWhFLFNBQ0F3TixFQUFBeEosRUFBQXdKLE9BQ0F5M0MsRUFBQWpoRCxFQUFBdWlCLE1BQ0FwcEIsRUFBQTZHLEVBQUE3RyxHQUNBd1MsRUFBYS9WLE9BQUF3cUQsRUFBQSxFQUFBeHFELENBQTZCb0ssRUFBQSxrSEFFMUN6RSxFQUFBLGlCQUFBcEMsSUFBQVIsU0FBQVEsRUFFQStuRCxFQUFBM2xELEtBQUE0RyxRQUFBLDZCQUF1RCxRQUN2RCxPQUFTNjlDLEVBQUF0bEQsRUFBSzhELGNBQWV5aEQsRUFBQSxNQUFLLENBQ2xDMWtELEtBQUEybEQsRUFDQTUzQyxRQUNBRSxTQUNBeE4sV0FDQXdMLFNBQUEsU0FBQXVJLEdBQ0EsSUFBQS9ULEVBQUErVCxFQUFBL1QsU0FDQXlMLEVBQUFzSSxFQUFBdEksTUFDQWhLLEtBQUF1akQsSUFBQXY1QyxFQUFBekwsR0FBQXlMLEdBQ0FzNUMsRUFBQXRqRCxFQXpDQSxXQUNBLFFBQUFLLEVBQUF6RyxVQUFBQyxPQUFBNnBELEVBQUEsSUFBQXZtRCxNQUFBa0QsR0FBQUUsRUFBQSxFQUEyRUEsRUFBQUYsRUFBYUUsSUFDeEZtakQsRUFBQW5qRCxHQUFBM0csVUFBQTJHLEdBR0EsT0FBQW1qRCxFQUFBdmpELE9BQUEsU0FBQTFJLEdBQ0EsT0FBQUEsSUFDR2lGLEtBQUEsS0FrQ0hpbkQsQ0FBQU4sRUFBQUYsR0FBQUUsRUFDQXYrQixFQUFBOWtCLEVBQTZCN0gsT0FBQXVxRCxFQUFBLEVBQUF2cUQsQ0FBUSxHQUFHcXJELEVBQUFKLEdBQUFJLEVBQ3hDLE9BQWFqQixFQUFBdGxELEVBQUs4RCxjQUFBb2hELEVBQXFCaHFELE9BQUF1cUQsRUFBQSxFQUFBdnFELENBQVEsQ0FDL0N5ckQsZUFBQTVqRCxHQUFBaWpELEdBQUEsS0FDQUssWUFDQXgrQixRQUNBcHBCLE1BQ093Uyx1QkNsT1AxVyxFQUFBRCxRQUFBLFNBQUFzc0QsR0FDQSxJQUFBQSxFQUFBQyxnQkFBQSxDQUNBLElBQUF0c0QsRUFBQVcsT0FBQVksT0FBQThxRCxHQUVBcnNELEVBQUF1UyxXQUFBdlMsRUFBQXVTLFNBQUEsSUFDQTVSLE9BQUFDLGVBQUFaLEVBQUEsVUFDQWEsWUFBQSxFQUNBQyxJQUFBLFdBQ0EsT0FBQWQsRUFBQUUsS0FHQVMsT0FBQUMsZUFBQVosRUFBQSxNQUNBYSxZQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBZCxFQUFBQyxLQUdBVSxPQUFBQyxlQUFBWixFQUFBLFdBQ0FhLFlBQUEsSUFFQWIsRUFBQXNzRCxnQkFBQSxFQUVBLE9BQUF0c0QsaUNDdEJBLFNBQUF1c0QsRUFBQUMsR0FDQSxnQkFBQXpoRCxHQUNBLElBQUF5USxFQUFBelEsRUFBQXlRLFNBQ0FILEVBQUF0USxFQUFBc1EsU0FDQSxnQkFBQVUsR0FDQSxnQkFBQTVULEdBQ0EseUJBQUFBLEVBQ0FBLEVBQUFxVCxFQUFBSCxFQUFBbXhDLEdBR0F6d0MsRUFBQTVULE1BVkF0SSxFQUFBa0IsRUFBQTBCLEdBZ0JBLElBQUFncUQsRUFBQUYsSUFDQUUsRUFBQUMsa0JBQUFILEVBRWU5cEQsRUFBQSw2S0NuQmYsSUFBQXVnQixFQUFBbmpCLEVBQUEsSUFDQThzRCxFQUFBL3BDLEVBQUEvaUIsRUFBQSxLQUVNdWMsRUFBVzRHLEVBQUFqSixnQkFBZ0IsQ0FDL0I2eUMsTUFBT0QsRUFBQSxVQUdUNXNELEVBQUEsUUFBZXFjLGlGQ1BmLElBQUF5d0MsRUFBQWh0RCxFQUFBLElBV0FFLEVBQUEsUUFUcUIsU0FBQ29ILEVBQVlnQixHQUNoQyxZQURvQixJQUFBaEIsTUFBQSxJQUNaZ0IsRUFBTzZQLE1BQ2IsS0FBSzYwQyxFQUFBQyxZQUNILE9BQU8za0QsRUFBT3VvQyxRQUFRdHdCLEtBQ3hCLFFBQ0UsT0FBT2paLG1GQ0hBcEgsRUFBQStzRCxZQUFjLDhGQ0hwQkMsRUFBd0JDLEVBQUF2bkQsRUFBSytjLGNBQUEsTUNJcEMsSUFBSXlxQyxFQUpKLFNBQUE1a0QsR0FDQUEsS0FTTzZrRCxFQUFBLFdBQ1AsT0FBU0QsR0NSVEUsRUFBQSxLQUNBQyxFQUFBLENBQ0FDLE9BQUEsY0F1Q0EsSUFBQUMsRUFFQSxXQUNBLFNBQUFBLEVBQUE3dkMsRUFBQTh2QyxHQUNBL3FELEtBQUFpYixRQUNBamIsS0FBQStxRCxZQUNBL3FELEtBQUF3WixZQUFBLEtBQ0F4WixLQUFBdUYsVUFBQXFsRCxFQUNBNXFELEtBQUFnckQsb0JBQUFockQsS0FBQWdyRCxvQkFBQS9yRCxLQUFBZSxNQUdBLElBQUEyUCxFQUFBbTdDLEVBQUF6ckQsVUFxQ0EsT0FuQ0FzUSxFQUFBczdDLGFBQUEsU0FBQWhsRCxHQUVBLE9BREFqRyxLQUFBa3JELGVBQ0FsckQsS0FBQXVGLFVBQUF1VCxVQUFBN1MsSUFHQTBKLEVBQUF3N0MsaUJBQUEsV0FDQW5yRCxLQUFBdUYsVUFBQXNsRCxVQUdBbDdDLEVBQUFxN0Msb0JBQUEsV0FDQWhyRCxLQUFBb3JELGVBQ0FwckQsS0FBQW9yRCxpQkFJQXo3QyxFQUFBb0osYUFBQSxXQUNBLE9BQUFzeUMsUUFBQXJyRCxLQUFBd1osY0FHQTdKLEVBQUF1N0MsYUFBQSxXQXBFQSxJQUNBSSxFQUdBMW9DLEVBQ0FySixFQWdFQXZaLEtBQUF3WixjQUNBeFosS0FBQXdaLFlBQUF4WixLQUFBK3FELFVBQUEvcUQsS0FBQStxRCxVQUFBRSxhQUFBanJELEtBQUFnckQscUJBQUFockQsS0FBQWliLE1BQUFuQyxVQUFBOVksS0FBQWdyRCxxQkFDQWhyRCxLQUFBdUYsV0F0RUErbEQsRUFBY1osSUFHZDluQyxFQUFBLEdBQ0FySixFQUFBLEdBQ0EsQ0FDQWd5QyxNQUFBLFdBQ0FoeUMsRUFBQW94QyxFQUNBL25DLEVBQUErbkMsR0FFQUUsT0FBQSxXQUNBLElBQUF0bEQsRUFBQXFkLEVBQUFySixFQUNBK3hDLEVBQUEsV0FDQSxRQUFBN3RELEVBQUEsRUFBdUJBLEVBQUE4SCxFQUFBMUYsT0FBc0JwQyxJQUM3QzhILEVBQUE5SCxRQUlBYSxJQUFBLFdBQ0EsT0FBQWliLEdBRUFULFVBQUEsU0FBQTdTLEdBQ0EsSUFBQThTLEdBQUEsRUFHQSxPQUZBUSxJQUFBcUosSUFBQXJKLEVBQUFxSixFQUFBdmUsU0FDQWtWLEVBQUFyVCxLQUFBRCxHQUNBLFdBQ0E4UyxHQUFBNkosSUFBQStuQyxJQUNBNXhDLEdBQUEsRUFDQVEsSUFBQXFKLElBQUFySixFQUFBcUosRUFBQXZlLFNBQ0FrVixFQUFBbk0sT0FBQW1NLEVBQUFqWixRQUFBMkYsR0FBQSxVQTZDQTBKLEVBQUE2N0MsZUFBQSxXQUNBeHJELEtBQUF3WixjQUNBeFosS0FBQXdaLGNBQ0F4WixLQUFBd1osWUFBQSxLQUNBeFosS0FBQXVGLFVBQUFnbUQsUUFDQXZyRCxLQUFBdUYsVUFBQXFsRCxJQUlBRSxFQTlDQSxHQ3hDSVcsRUFFSixTQUFBakksR0FHQSxTQUFBMTBDLEVBQUF4SCxHQUNBLElBQUE2SCxFQUVBQSxFQUFBcTBDLEVBQUE1bEQsS0FBQW9DLEtBQUFzSCxJQUFBdEgsS0FDQSxJQUFBaWIsRUFBQTNULEVBQUEyVCxNQUNBOUwsRUFBQXU4QyxrQkFBQXY4QyxFQUFBdThDLGtCQUFBenNELEtDakJlLFNBQUEyUixHQUNmLFlBQUFBLEVBQ0EsVUFBQW95QyxlQUFBLDZEQUdBLE9BQUFweUMsRURZMkQrNkMsQ0FBc0J4OEMsSUFDakYsSUFBQXk4QyxFQUFBLElBQTJCZCxFQUFZN3ZDLEdBT3ZDLE9BTkEyd0MsRUFBQVIsY0FBQWo4QyxFQUFBdThDLGtCQUNBdjhDLEVBQUF4SyxNQUFBLENBQ0FzVyxRQUNBMndDLGdCQUVBejhDLEVBQUEwOEMsY0FBQTV3QyxFQUFBcEMsV0FDQTFKLEVBZkVoUixPQUFBMnRELEVBQUEsRUFBQTN0RCxDQUFjMlEsRUFBQTAwQyxHQWtCaEIsSUFBQTd6QyxFQUFBYixFQUFBelAsVUF3Q0EsT0F0Q0FzUSxFQUFBQyxrQkFBQSxXQUNBNVAsS0FBQW9QLFlBQUEsRUFDQXBQLEtBQUEyRSxNQUFBaW5ELGFBQUFWLGVBRUFsckQsS0FBQTZyRCxnQkFBQTdyRCxLQUFBc0gsTUFBQTJULE1BQUFwQyxZQUNBN1ksS0FBQTJFLE1BQUFpbkQsYUFBQVQsb0JBSUF4N0MsRUFBQUUscUJBQUEsV0FDQTdQLEtBQUF3WixhQUFBeFosS0FBQXdaLGNBQ0F4WixLQUFBMkUsTUFBQWluRCxhQUFBSixpQkFDQXhyRCxLQUFBb1AsWUFBQSxHQUdBTyxFQUFBUyxtQkFBQSxTQUFBQyxHQUNBLEdBQUFyUSxLQUFBc0gsTUFBQTJULFFBQUE1SyxFQUFBNEssTUFBQSxDQUNBamIsS0FBQTJFLE1BQUFpbkQsYUFBQUosaUJBQ0EsSUFBQUksRUFBQSxJQUE2QmQsRUFBWTlxRCxLQUFBc0gsTUFBQTJULE9BQ3pDMndDLEVBQUFSLGNBQUFwckQsS0FBQTByRCxrQkFDQTFyRCxLQUFBOEksU0FBQSxDQUNBbVMsTUFBQWpiLEtBQUFzSCxNQUFBMlQsTUFDQTJ3QyxtQkFLQWo4QyxFQUFBKzdDLGtCQUFBLFdBQ0ExckQsS0FBQTJFLE1BQUFpbkQsYUFBQVQsb0JBR0F4N0MsRUFBQUcsT0FBQSxXQUNBLElBQUFpOEMsRUFBQS9yRCxLQUFBc0gsTUFBQTBHLFNBQXdDdThDLEVBQ3hDLE9BQVdDLEVBQUF2bkQsRUFBSzhELGNBQUFnbEQsRUFBQWo5QyxTQUFBLENBQ2hCcFEsTUFBQXNCLEtBQUEyRSxPQUNLM0UsS0FBQXNILE1BQUF5SSxXQUdMakIsRUEzREEsQ0E0REVrOUMsRUFBQSxXQUVGUCxFQUFRbDJDLFVBQUEsQ0FDUjBGLE1BQVNneEMsRUFBQWhwRCxFQUFTNmlELE1BQUEsQ0FDbEJodEMsVUFBZW16QyxFQUFBaHBELEVBQVN3Z0IsS0FBQTBnQyxXQUN4Qm5yQyxTQUFjaXpDLEVBQUFocEQsRUFBU3dnQixLQUFBMGdDLFdBQ3ZCdHJDLFNBQWNvekMsRUFBQWhwRCxFQUFTd2dCLEtBQUEwZ0MsYUFFdkJuMkMsUUFBV2krQyxFQUFBaHBELEVBQVM5RCxPQUNwQjRRLFNBQVlrOEMsRUFBQWhwRCxFQUFTdWlELEtBRU4sSUFBQTBHLEVBQUEsd0RFdkVmQyxFQUFBLEdBQ0FDLEVBQUEsWUFVQSxTQUFBQyxFQUFBMW5ELEVBQUFnQixHQUNBLElBQUEybUQsRUFBQTNuRCxFQUFBLEdBQ0EsT0FBQWdCLEVBQUF1b0MsUUFBQW9lLEVBQUEsR0FHQSxJQUFBQyxFQUFBLFdBQ0EsZ0JBUUFDLEVBQUEsb0JBQUEzbEQsT0FBZ0VtbEQsRUFBQSxnQkFBa0JBLEVBQUEsVUFDbkUsU0FBQVMsRUFlZkMsRUFDQW5rRCxRQUNBLElBQUFBLElBQ0FBLEVBQUEsSUFHQSxJQUFBK1AsRUFBQS9QLEVBQ0Fva0QsRUFBQXIwQyxFQUFBczBDLGVBQ0FBLE9BQUEsSUFBQUQsRUFBQSxTQUFBM3VELEdBQ0EseUJBQUFBLEVBQUEsS0FDRzJ1RCxFQUNIRSxFQUFBdjBDLEVBQUFqRixXQUNBQSxPQUFBLElBQUF3NUMsRUFBQSxrQkFBQUEsRUFDQUMsRUFBQXgwQyxFQUFBeTBDLGdCQUNBQSxPQUFBLElBQUFELE9BQUFsckQsRUFBQWtyRCxFQUNBRSxFQUFBMTBDLEVBQUEyMEMseUJBQ0FBLE9BQUEsSUFBQUQsS0FDQUUsRUFBQTUwQyxFQUFBNjBDLFNBQ0FBLE9BQUEsSUFBQUQsRUFBQSxRQUFBQSxFQUNBRSxFQUFBOTBDLEVBQUErMEMsUUFDQUEsT0FBQSxJQUFBRCxLQUNBRSxFQUFBaDFDLEVBQUEyTSxXQUNBQSxPQUFBLElBQUFxb0MsS0FDQUMsRUFBQWoxQyxFQUFBdEssUUFDQUEsT0FBQSxJQUFBdS9DLEVBQTJDaEQsRUFBaUJnRCxFQUM1REMsRUFBdUJydkQsT0FBQXN2RCxFQUFBLEVBQUF0dkQsQ0FBNkJtYSxFQUFBLDBIQUVsRG8xQyxTQUFTOXJELElBQUFtckQsRUFBQSw0R0FDVFcsS0FBU0wsRUFBQSw0RkFFVEssSUFBUyxVQUFBUCxFQUFBLDJZQUNYLElBQUFwQixFQUFBLzlDLEVBQ0EsZ0JBQUE0RyxHQUtBLElBQUErNEMsRUFBQS80QyxFQUFBN0YsYUFBQTZGLEVBQUE1VyxNQUFBLFlBQ0ErUSxFQUFBNjlDLEVBQUFlLEdBRUFDLEVBQWlDenZELE9BQUE2RyxFQUFBLEVBQUE3RyxDQUFRLEdBQUdxdkQsRUFBQSxDQUM1Q1osaUJBQ0F2NUMsYUFDQTA1QyxrQkFDQUUsMkJBQ0FFLFdBQ0FwK0MsY0FDQTQrQyx1QkFDQS80QyxxQkFHQWk1QyxFQUFBTCxFQUFBSyxLQVNBLElBQUFDLEVBQUFELEVBQWlDN0IsRUFBQSxRQUFPLFNBQUFubUQsR0FDeEMsT0FBQUEsS0FHQSxTQUFBa29ELEVBQUF6bUQsR0FDQSxJQUFBMG1ELEVBQXFCN3ZELE9BQUE2dEQsRUFBQSxRQUFBN3RELENBQU8sV0FRNUIsT0FKQW1KLEVBQUEwRyxRQUNBMUcsRUFBQTJtRCxhQUMyQjl2RCxPQUFBc3ZELEVBQUEsRUFBQXR2RCxDQUE2Qm1KLEVBQUEsOEJBR2pELENBQUFBLElBQ1A0bUQsRUFBQUYsRUFBQSxHQUNBQyxFQUFBRCxFQUFBLEdBQ0FHLEVBQUFILEVBQUEsR0FFQUksRUFBeUJqd0QsT0FBQTZ0RCxFQUFBLFFBQUE3dEQsQ0FBTyxXQUdoQyxPQUFBK3ZELEtBQUFsL0MsVUFBd0Q3USxPQUFBa3dELEVBQUEsa0JBQUFsd0QsQ0FBa0Jxc0QsRUFBQXZuRCxFQUFLOEQsY0FBQW1uRCxFQUFBbC9DLFNBQUEsT0FBQWsvQyxFQUFBbkMsR0FDeEUsQ0FBQW1DLEVBQUFuQyxJQUVQdUMsRUFBeUJud0QsT0FBQTZ0RCxFQUFBLFdBQUE3dEQsQ0FBVWl3RCxHQUVuQ0csRUFBQWxELFFBQUEvakQsRUFBQTJULE9BQ0F1ekMsRUFBQW5ELFFBQUFpRCxJQUFBakQsUUFBQWlELEVBQUFyekMsT0FDTXl5QyxJQUFTYSxHQUFBQyxFQUFBLDZDQUFBei9DLEVBQUEsNEpBQUFBLEVBQUEsd0JBQ2YsSUFBQWtNLEVBQUEzVCxFQUFBMlQsT0FBQXF6QyxFQUFBcnpDLE1BQ0F3ekMsRUFBK0J0d0QsT0FBQTZ0RCxFQUFBLFFBQUE3dEQsQ0FBTyxXQUd0QyxPQXpDQSxTQUFBOGMsR0FDQSxPQUFBeXhDLEVBQUF6eEMsRUFBQWpDLFNBQUE0MEMsR0F3Q0FjLENBQUF6ekMsSUFDTyxDQUFBQSxJQUVQMHpDLEVBQXNCeHdELE9BQUE2dEQsRUFBQSxRQUFBN3RELENBQU8sV0FDN0IsSUFBQTh1RCxFQUFBLE9BQUFiLEVBR0EsSUFBQVIsRUFBQSxJQUErQmQsRUFBWTd2QyxFQUFBc3pDLEVBQUEsS0FBQUQsRUFBQTFDLGNBSzNDVCxFQUFBUyxFQUFBVCxpQkFBQWxzRCxLQUFBMnNELEdBQ0EsT0FBQUEsRUFBQVQsSUFDTyxDQUFBbHdDLEVBQUFzekMsRUFBQUQsSUFDUDFDLEVBQUErQyxFQUFBLEdBQ0F4RCxFQUFBd0QsRUFBQSxHQUlBQyxFQUFtQ3p3RCxPQUFBNnRELEVBQUEsUUFBQTd0RCxDQUFPLFdBQzFDLE9BQUFvd0QsRUFJQUQsRUFLZW53RCxPQUFBNkcsRUFBQSxFQUFBN0csQ0FBUSxHQUFHbXdELEVBQUEsQ0FDMUIxQyxrQkFFTyxDQUFBMkMsRUFBQUQsRUFBQTFDLElBR1BpRCxFQUF3QjF3RCxPQUFBNnRELEVBQUEsV0FBQTd0RCxDQUFVa3VELEVBQUFGLEVBQUFJLEdBRWxDdUMsRUFEQUQsRUFBQSxHQUNBLEdBQ0FFLEVBQUFGLEVBQUEsR0FHQSxHQUFBQyxLQUFBMzNDLE1BQ0EsTUFBQTIzQyxFQUFBMzNDLE1BSUEsSUFBQTYzQyxFQUEyQjd3RCxPQUFBNnRELEVBQUEsT0FBQTd0RCxHQUMzQjh3RCxFQUE2Qjl3RCxPQUFBNnRELEVBQUEsT0FBQTd0RCxDQUFNZ3dELEdBQ25DZSxFQUFzQy93RCxPQUFBNnRELEVBQUEsT0FBQTd0RCxHQUN0Q2d4RCxFQUE4Qmh4RCxPQUFBNnRELEVBQUEsT0FBQTd0RCxFQUFNLEdBQ3BDaXhELEVBQUF0QixFQUFBLFdBT0EsT0FBQW9CLEVBQUF0c0MsU0FBQXVyQyxJQUFBYyxFQUFBcnNDLFFBQ0Fzc0MsRUFBQXRzQyxRQU9BNnJDLEVBQUF4ekMsRUFBQXBDLFdBQUFzMUMsSUFDTyxDQUFBbHpDLEVBQUE2ekMsRUFBQVgsSUFJUDNCLEVBQUEsV0FFQXlDLEVBQUFyc0MsUUFBQXVyQyxFQUNBYSxFQUFBcHNDLFFBQUF3c0MsRUFDQUQsRUFBQXZzQyxTQUFBLEVBRUFzc0MsRUFBQXRzQyxVQUNBc3NDLEVBQUF0c0MsUUFBQSxLQUNBdW9DLE9BSUFxQixFQUFBLFdBRUEsR0FBQVMsRUFBQSxDQUVBLElBQUFvQyxHQUFBLEVBQ0FDLEVBQUEsS0FFQUMsRUFBQSxXQUNBLElBQUFGLEVBQUEsQ0FNQSxJQUNBRyxFQUFBcjRDLEVBREFzNEMsRUFBQXgwQyxFQUFBcEMsV0FHQSxJQUdBMjJDLEVBQUFmLEVBQUFnQixFQUFBUixFQUFBcnNDLFNBQ1csTUFBQTFkLEdBQ1hpUyxFQUFBalMsRUFDQW9xRCxFQUFBcHFELEVBR0FpUyxJQUNBbTRDLEVBQUEsTUFJQUUsSUFBQVIsRUFBQXBzQyxRQUNBdXNDLEVBQUF2c0MsU0FDQXVvQyxLQU9BNkQsRUFBQXBzQyxRQUFBNHNDLEVBQ0FOLEVBQUF0c0MsUUFBQTRzQyxFQUNBTCxFQUFBdnNDLFNBQUEsRUFFQW1zQyxFQUFBLENBQ0F2NUMsS0FBQSxnQkFDQTA0QixRQUFBLENBQ0F1aEIsbUJBQ0F0NEMsY0FPQXkwQyxFQUFBUixjQUFBbUUsRUFDQTNELEVBQUFWLGVBR0FxRSxJQWdCQSxPQWRBLFdBSUEsR0FIQUYsR0FBQSxFQUNBekQsRUFBQUosaUJBRUE4RCxFQU1BLE1BQUFBLEtBS08sQ0FBQXIwQyxFQUFBMndDLEVBQUE2QyxJQUdQLElBQUFpQixFQUFxQ3Z4RCxPQUFBNnRELEVBQUEsUUFBQTd0RCxDQUFPLFdBQzVDLE9BQWVxc0QsRUFBQXZuRCxFQUFLOEQsY0FBQTZOLEVBQWlDelcsT0FBQTZHLEVBQUEsRUFBQTdHLENBQVEsR0FBR2l4RCxFQUFBLENBQ2hFejZDLElBQUFzNUMsTUFFTyxDQUFBQSxFQUFBcjVDLEVBQUF3NkMsSUFlUCxPQVowQmp4RCxPQUFBNnRELEVBQUEsUUFBQTd0RCxDQUFPLFdBQ2pDLE9BQUE4dUQsRUFJaUJ6QyxFQUFBdm5ELEVBQUs4RCxjQUFBcW5ELEVBQUF0L0MsU0FBQSxDQUN0QnBRLE1BQUFrd0QsR0FDV2MsR0FHWEEsR0FDTyxDQUFBdEIsRUFBQXNCLEVBQUFkLElBS1AsSUFBQWUsRUFBQTlCLEVBQXlCckQsRUFBQXZuRCxFQUFLMlAsS0FBQW03QyxLQUk5QixHQUhBNEIsRUFBQS82QyxtQkFDQSs2QyxFQUFBNWdELGNBRUFrVyxFQUFBLENBQ0EsSUFBQTJxQyxFQUFzQnBGLEVBQUF2bkQsRUFBS2dpQixXQUFBLFNBQUEzZCxFQUFBcU4sR0FDM0IsT0FBZTYxQyxFQUFBdm5ELEVBQUs4RCxjQUFBNG9ELEVBQXdCeHhELE9BQUE2RyxFQUFBLEVBQUE3RyxDQUFRLEdBQUdtSixFQUFBLENBQ3ZEMm1ELGFBQUF0NUMsT0FLQSxPQUZBaTdDLEVBQUE3Z0QsY0FDQTZnRCxFQUFBaDdDLG1CQUNhaTdDLElBQVlELEVBQUFoN0MsR0FHekIsT0FBV2k3QyxJQUFZRixFQUFBLzZDLElDeFZ2QixJQUFBazdDLEVBQUEzeEQsT0FBQWtCLFVBQUFDLGVBRUEsU0FBQTZwQyxFQUFBL25CLEVBQUFDLEdBQ0EsT0FBQUQsSUFBQUMsRUFDQSxJQUFBRCxHQUFBLElBQUFDLEdBQUEsRUFBQUQsR0FBQSxFQUFBQyxFQUVBRCxNQUFBQyxLQUllLFNBQUEwdUMsRUFBQUMsRUFBQUMsR0FDZixHQUFBOW1CLEVBQUE2bUIsRUFBQUMsR0FBQSxTQUVBLG9CQUFBRCxHQUFBLE9BQUFBLEdBQUEsaUJBQUFDLEdBQUEsT0FBQUEsRUFDQSxTQUdBLElBQUFDLEVBQUEveEQsT0FBQWtDLEtBQUEydkQsR0FDQUcsRUFBQWh5RCxPQUFBa0MsS0FBQTR2RCxHQUNBLEdBQUFDLEVBQUFyd0QsU0FBQXN3RCxFQUFBdHdELE9BQUEsU0FFQSxRQUFBcEMsRUFBQSxFQUFpQkEsRUFBQXl5RCxFQUFBcndELE9BQWtCcEMsSUFDbkMsSUFBQXF5RCxFQUFBbHlELEtBQUFxeUQsRUFBQUMsRUFBQXp5RCxNQUFBMHJDLEVBQUE2bUIsRUFBQUUsRUFBQXp5RCxJQUFBd3lELEVBQUFDLEVBQUF6eUQsS0FDQSxTQUlBLHFCQzFCTyxTQUFBMnlELEVBQUFDLEdBQ1AsZ0JBQUFyM0MsRUFBQXRILEdBQ0EsSUFBQTQrQyxFQUFBRCxFQUFBcjNDLEVBQUF0SCxHQUVBLFNBQUE2K0MsSUFDQSxPQUFBRCxFQUlBLE9BREFDLEVBQUFDLG1CQUFBLEVBQ0FELEdBVU8sU0FBQUUsRUFBQUMsR0FDUCxjQUFBQSxFQUFBRix3QkFBQTV1RCxJQUFBOHVELEVBQUFGLGtCQUFBbkYsUUFBQXFGLEVBQUFGLG1CQUFBLElBQUFFLEVBQUE3d0QsT0FjTyxTQUFBOHdELEVBQUFELEVBQUFyOUMsR0FDUCxnQkFBQTJGLEVBQUF6USxHQUNBQSxFQUFBd0csWUFBQSxJQUVBNmhELEVBQUEsU0FBQUMsRUFBQUMsR0FDQSxPQUFBRixFQUFBSixrQkFBQUksRUFBQUYsV0FBQUcsRUFBQUMsR0FBQUYsRUFBQUYsV0FBQUcsSUFxQkEsT0FqQkFELEVBQUFKLG1CQUFBLEVBRUFJLEVBQUFGLFdBQUEsU0FBQUcsRUFBQUMsR0FDQUYsRUFBQUYsYUFDQUUsRUFBQUosa0JBQUFDLEVBQUFDLEdBQ0EsSUFBQXBwRCxFQUFBc3BELEVBQUFDLEVBQUFDLEdBU0EsTUFQQSxtQkFBQXhwRCxJQUNBc3BELEVBQUFGLFdBQUFwcEQsRUFDQXNwRCxFQUFBSixrQkFBQUMsRUFBQW5wRCxHQUNBQSxFQUFBc3BELEVBQUFDLEVBQUFDLElBSUF4cEQsR0FHQXNwRCxHQzVDZSxJQUFBRyxFQUFBLENBZlIsU0FBQUMsR0FDUCx5QkFBQUEsRUFBb0RMLEVBQWtCSyxRQUFBcHZELEdBRS9ELFNBQUFvdkQsR0FDUCxPQUFBQSxPQUlHcHZELEVBSjRCd3VELEVBQXNCLFNBQUFwM0MsR0FDckQsT0FDQUEsZUFJTyxTQUFBZzRDLEdBQ1AsT0FBQUEsR0FBQSxpQkFBQUEsRUFBd0VaLEVBQXNCLFNBQUFwM0MsR0FDOUYsT0FBVzdhLE9BQUE4eUQsRUFBQSxtQkFBQTl5RCxDQUFrQjZ5RCxFQUFBaDRDLFVBQzFCcFgsSUNOWSxJQUFBc3ZELEVBQUEsQ0FSUixTQUFBQyxHQUNQLHlCQUFBQSxFQUFpRFIsRUFBa0JRLFFBQUF2dkQsR0FFNUQsU0FBQXV2RCxHQUNQLE9BQUFBLE9BRUd2dkQsRUFGeUJ3dUQsRUFBc0IsV0FDbEQsYUNKTyxTQUFBZ0IsRUFBQUMsRUFBQUMsRUFBQVIsR0FDUCxPQUFTM3lELE9BQUE2RyxFQUFBLEVBQUE3RyxDQUFRLEdBQUcyeUQsRUFBQU8sRUFBQUMsR0FnQ0wsSUFBQUMsRUFBQSxDQVJSLFNBQUFDLEdBQ1AseUJBQUFBLEVBdkJPLFNBQUFBLEdBQ1AsZ0JBQUF4NEMsRUFBQXpRLEdBQ0FBLEVBQUF3RyxZQUFBLElBSUEwaUQsRUFIQTVELEVBQUF0bEQsRUFBQXNsRCxLQUNBNkQsRUFBQW5wRCxFQUFBbXBELG9CQUNBQyxHQUFBLEVBRUEsZ0JBQUFOLEVBQUFDLEVBQUFSLEdBQ0EsSUFBQWMsRUFBQUosRUFBQUgsRUFBQUMsRUFBQVIsR0FVQSxPQVJBYSxFQUNBOUQsR0FBQTZELEVBQUFFLEVBQUFILE9BQUFHLElBRUFELEdBQUEsRUFDQUYsRUFBQUcsR0FJQUgsSUFLQUksQ0FBQUwsUUFBQTV2RCxHQUVPLFNBQUE0dkQsR0FDUCxPQUFBQSxPQUVHNXZELEVBRkgsV0FDQSxPQUFBd3ZELEtDOUJPLFNBQUFVLEVBQUFYLEVBQUFILEVBQUFRLEVBQUF4NEMsR0FDUCxnQkFBQXJVLEVBQUFtc0QsR0FDQSxPQUFBVSxFQUFBTCxFQUFBeHNELEVBQUFtc0QsR0FBQUUsRUFBQWg0QyxFQUFBODNDLE9BR08sU0FBQWlCLEVBQUFaLEVBQUFILEVBQUFRLEVBQUF4NEMsRUFBQXpRLEdBQ1AsSUFJQTVELEVBQ0Ftc0QsRUFDQU8sRUFDQUMsRUFDQUcsRUFSQU8sRUFBQXpwRCxFQUFBeXBELGVBQ0FDLEVBQUExcEQsRUFBQTBwRCxpQkFDQUMsRUFBQTNwRCxFQUFBMnBELG1CQUNBQyxHQUFBLEVBdUNBLFNBQUFDLEVBQUFycEQsRUFBQXNwRCxHQUNBLElBUkFDLEVBQ0FDLEVBT0FDLEdBQUFQLEVBQUFJLEVBQUF2QixHQUNBMkIsR0FBQVQsRUFBQWpwRCxFQUFBcEUsR0FHQSxPQUZBQSxFQUFBb0UsRUFDQStuRCxFQUFBdUIsRUFDQUcsR0FBQUMsR0ExQkFwQixFQUFBRixFQUFBeHNELEVBQUFtc0QsR0FDQUUsRUFBQVIsb0JBQUFjLEVBQUFOLEVBQUFoNEMsRUFBQTgzQyxJQUNBVyxFQUFBRCxFQUFBSCxFQUFBQyxFQUFBUixJQXlCQTBCLEdBcEJBckIsRUFBQVgsb0JBQUFhLEVBQUFGLEVBQUF4c0QsRUFBQW1zRCxJQUNBRSxFQUFBUixvQkFBQWMsRUFBQU4sRUFBQWg0QyxFQUFBODNDLElBQ0FXLEVBQUFELEVBQUFILEVBQUFDLEVBQUFSLElBbUJBMkIsR0FkQUgsRUFBQW5CLEVBQUF4c0QsRUFBQW1zRCxHQUNBeUIsR0FBQUwsRUFBQUksRUFBQWpCLEdBQ0FBLEVBQUFpQixFQUNBQyxJQUFBZCxFQUFBRCxFQUFBSCxFQUFBQyxFQUFBUixJQUNBVyxHQVdBQSxFQUdBLGdCQUFBMW9ELEVBQUFzcEQsR0FDQSxPQUFBRixFQUFBQyxFQUFBcnBELEVBQUFzcEQsSUF6Q0FoQixFQUFBRixFQUZBeHNELEVBMkNBb0UsRUExQ0ErbkQsRUEwQ0F1QixHQXhDQWYsRUFBQU4sRUFBQWg0QyxFQUFBODNDLEdBQ0FXLEVBQUFELEVBQUFILEVBQUFDLEVBQUFSLEdBQ0FxQixHQUFBLEVBQ0FWLElBNkNlLFNBQUFpQixFQUFBMTVDLEVBQUFWLEdBQ2YsSUFBQXE2QyxFQUFBcjZDLEVBQUFxNkMsb0JBQ0FDLEVBQUF0NkMsRUFBQXM2Qyx1QkFDQUMsRUFBQXY2QyxFQUFBdTZDLGVBQ0FuaEQsRUFBZ0J2VCxPQUFBc3ZELEVBQUEsRUFBQXR2RCxDQUE2Qm1hLEVBQUEsbUVBRTdDNjRDLEVBQUF3QixFQUFBMzVDLEVBQUF0SCxHQUNBcy9DLEVBQUE0QixFQUFBNTVDLEVBQUF0SCxHQUNBOC9DLEVBQUFxQixFQUFBNzVDLEVBQUF0SCxHQU9BLE9BREFBLEVBQUFtOEMsS0FBQWtFLEVBQUFELEdBQ0FYLEVBQUFILEVBQUFRLEVBQUF4NEMsRUFBQXRILEdDNURBLFNBQUExQixFQUFBK0ssRUFBQSszQyxFQUFBOTBELEdBQ0EsUUFBQVAsRUFBQXExRCxFQUFBanpELE9BQUEsRUFBb0NwQyxHQUFBLEVBQVFBLElBQUEsQ0FDNUMsSUFBQWdGLEVBQUFxd0QsRUFBQXIxRCxHQUFBc2QsR0FDQSxHQUFBdFksRUFBQSxPQUFBQSxFQUdBLGdCQUFBdVcsRUFBQXRILEdBQ0EsVUFBQTFRLE1BQUEsZ0NBQUErWixFQUFBLFFBQUEvYyxFQUFBLHVDQUFBMFQsRUFBQWk4QyxxQkFBQSxNQUlBLFNBQUFvRixFQUFBOXZELEVBQUFDLEdBQ0EsT0FBQUQsSUFBQUMsRUE0RGUsSUF2RFJ1Z0QsRUFDUGw3QyxFQUNBeXFELEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEdBQ0FDLEdBQ0E5RyxHWDlDTytHLEdXMEZRQyxJQXJEZlYsR0FEQXpxRCxPQUFBLElBQUFrN0MsRUFBQSxHQUFrQ0EsR0FDbEN3UCxXQUNBQSxPQUFBLElBQUFELEVBQWdEdkcsRUFBZXVHLEVBQy9ERSxFQUFBM3FELEVBQUE0cUQseUJBQ0FBLE9BQUEsSUFBQUQsRUFBb0VoQyxFQUErQmdDLEVBQ25HRSxFQUFBN3FELEVBQUE4cUQsNEJBQ0FBLE9BQUEsSUFBQUQsRUFBdUVyQyxFQUFrQ3FDLEVBQ3pHRSxFQUFBL3FELEVBQUFnckQsb0JBQ0FBLFFBQUEsSUFBQUQsRUFBK0QvQixFQUEwQitCLEVBQ3pGRSxHQUFBanJELEVBQUFta0QsZ0JBQ0FBLFFBQUEsSUFBQThHLEdBQTBEZCxFQUFzQmMsR0FFaEYsU0FBQXJDLEVBQUFILEVBQUFRLEVBQUFsNUMsUUFDQSxJQUFBQSxJQUNBQSxFQUFBLElBR0EsSUFBQXE3QyxFQUFBcjdDLEVBQ0FzN0MsRUFBQUQsRUFBQTlGLEtBQ0FBLE9BQUEsSUFBQStGLEtBQ0FDLEVBQUFGLEVBQUEzQixlQUNBQSxPQUFBLElBQUE2QixFQUFBZCxFQUFBYyxFQUNBQyxFQUFBSCxFQUFBMUIsaUJBQ0FBLE9BQUEsSUFBQTZCLEVBQThEL0QsRUFBWStELEVBQzFFQyxFQUFBSixFQUFBekIsbUJBQ0FBLE9BQUEsSUFBQTZCLEVBQWdFaEUsRUFBWWdFLEVBQzVFQyxFQUFBTCxFQUFBakMsb0JBQ0FBLE9BQUEsSUFBQXNDLEVBQWlFakUsRUFBWWlFLEVBQzdFQyxFQUF1QjkxRCxPQUFBc3ZELEVBQUEsRUFBQXR2RCxDQUE2QncxRCxFQUFBLHlGQUVwRGhCLEVBQUEzaUQsRUFBQW1oRCxFQUFBZ0MsRUFBQSxtQkFDQVAsRUFBQTVpRCxFQUFBZ2hELEVBQUFxQyxFQUFBLHNCQUNBUixFQUFBN2lELEVBQUF3aEQsRUFBQStCLEdBQUEsY0FDQSxPQUFBTixFQUFBdkcsR0FBdUN2dUQsT0FBQTZHLEVBQUEsRUFBQTdHLENBQVEsQ0FFL0NrVixXQUFBLFVBRUF1NUMsZUFBQSxTQUFBNXVELEdBQ0EsaUJBQUFBLEVBQUEsS0FHQWl2RCx5QkFBQTVCLFFBQUE4RixHQUVBd0Isc0JBQ0FDLHlCQUNBQyxpQkFDQWhGLE9BQ0FtRSxpQkFDQUMsbUJBQ0FDLHFCQUNBUix1QkFDS3VDLGVDOUZMNTJELEVBQUFVLEVBQUFrQyxFQUFBLDZCQUFBaXNELElBQUE3dUQsRUFBQVUsRUFBQWtDLEVBQUEsb0NBQUF3c0QsSUFBQXB2RCxFQUFBVSxFQUFBa0MsRUFBQSxzQ0FBQXNxRCxJQUFBbHRELEVBQUFVLEVBQUFrQyxFQUFBLDRCQUFBeXpELEtBQUFyMkQsRUFBQVUsRUFBQWtDLEVBQUEsMEJBQUFpMEQsR0FBQSwwQlpPT1QsR1lERVMsR0FBQSx3QlpFQXpKLEVBQUtnSixpQ2FOZCxJQUFBeDBELEVBQVc1QixFQUFRLElBQ25CODJELEVBQWU5MkQsRUFBUSxJQU12QnVMLEVBQUF6SyxPQUFBa0IsVUFBQXVKLFNBUUEsU0FBQXhGLEVBQUFzYyxHQUNBLHlCQUFBOVcsRUFBQWhMLEtBQUE4aEIsR0EyRUEsU0FBQTAwQyxFQUFBMTBDLEdBQ0EsY0FBQUEsR0FBQSxpQkFBQUEsRUF1Q0EsU0FBQTIwQyxFQUFBMzBDLEdBQ0EsNEJBQUE5VyxFQUFBaEwsS0FBQThoQixHQW9FQSxTQUFBbFosRUFBQTFELEVBQUFpRCxHQUVBLEdBQUFqRCxRQVVBLEdBTEEsaUJBQUFBLElBRUFBLEVBQUEsQ0FBQUEsSUFHQU0sRUFBQU4sR0FFQSxRQUFBckYsRUFBQSxFQUFBQyxFQUFBb0YsRUFBQWpELE9BQW1DcEMsRUFBQUMsRUFBT0QsSUFDMUNzSSxFQUFBbkksS0FBQSxLQUFBa0YsRUFBQXJGLEtBQUFxRixRQUlBLFFBQUE5RCxLQUFBOEQsRUFDQTNFLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQWtGLEVBQUE5RCxJQUNBK0csRUFBQW5JLEtBQUEsS0FBQWtGLEVBQUE5RCxLQUFBOEQsR0EwREF0RixFQUFBRCxRQUFBLENBQ0E2RixVQUNBa3hELGNBaFFBLFNBQUE1MEMsR0FDQSwrQkFBQTlXLEVBQUFoTCxLQUFBOGhCLElBZ1FBeTBDLFdBQ0FJLFdBeFBBLFNBQUE3MEMsR0FDQSwwQkFBQTgwQyxVQUFBOTBDLGFBQUE4MEMsVUF3UEFDLGtCQS9PQSxTQUFBLzBDLEdBT0EsTUFMQSxvQkFBQWcxQyx5QkFBQSxPQUNBQSxZQUFBQyxPQUFBajFDLEdBRUEsR0FBQUEsRUFBQSxRQUFBQSxFQUFBazFDLGtCQUFBRixhQTJPQUcsU0FoT0EsU0FBQW4xQyxHQUNBLHVCQUFBQSxHQWdPQW8xQyxTQXZOQSxTQUFBcDFDLEdBQ0EsdUJBQUFBLEdBdU5BMDBDLFdBQ0FXLFlBL01BLFNBQUFyMUMsR0FDQSxnQkFBQUEsR0ErTUFzMUMsT0E1TEEsU0FBQXQxQyxHQUNBLHdCQUFBOVcsRUFBQWhMLEtBQUE4aEIsSUE0TEF1MUMsT0FuTEEsU0FBQXYxQyxHQUNBLHdCQUFBOVcsRUFBQWhMLEtBQUE4aEIsSUFtTEF3MUMsT0ExS0EsU0FBQXgxQyxHQUNBLHdCQUFBOVcsRUFBQWhMLEtBQUE4aEIsSUEwS0EyMEMsYUFDQWMsU0F4SkEsU0FBQXoxQyxHQUNBLE9BQUEwMEMsRUFBQTEwQyxJQUFBMjBDLEVBQUEzMEMsRUFBQTAxQyxPQXdKQUMsa0JBL0lBLFNBQUEzMUMsR0FDQSwwQkFBQTQxQyxpQkFBQTUxQyxhQUFBNDFDLGlCQStJQUMscUJBckhBLFdBQ0EsMkJBQUE1dEQsV0FBQSxnQkFBQUEsVUFBQTZ0RCxVQUlBLG9CQUFBM3VELFFBQ0Esb0JBQUFDLFVBZ0hBTixVQUNBaXZELE1BckRBLFNBQUFBLElBQ0EsSUFBQWh6RCxFQUFBLEdBQ0EsU0FBQWl6RCxFQUFBaDJDLEVBQUExZ0IsR0FDQSxpQkFBQXlELEVBQUF6RCxJQUFBLGlCQUFBMGdCLEVBQ0FqZCxFQUFBekQsR0FBQXkyRCxFQUFBaHpELEVBQUF6RCxHQUFBMGdCLEdBRUFqZCxFQUFBekQsR0FBQTBnQixFQUlBLFFBQUFqaUIsRUFBQSxFQUFBQyxFQUFBa0MsVUFBQUMsT0FBdUNwQyxFQUFBQyxFQUFPRCxJQUM5QytJLEVBQUE1RyxVQUFBbkMsR0FBQWk0RCxHQUVBLE9BQUFqekQsR0F5Q0EwcUIsT0E5QkEsU0FBQWxxQixFQUFBQyxFQUFBeXlELEdBUUEsT0FQQW52RCxFQUFBdEQsRUFBQSxTQUFBd2MsRUFBQTFnQixHQUVBaUUsRUFBQWpFLEdBREEyMkQsR0FBQSxtQkFBQWoyQyxFQUNBemdCLEVBQUF5Z0IsRUFBQWkyQyxHQUVBajJDLElBR0F6YyxHQXVCQStrQyxLQTFJQSxTQUFBOXJCLEdBQ0EsT0FBQUEsRUFBQXhSLFFBQUEsV0FBQUEsUUFBQSw0Q0NwS0EsU0FBQWtyRCxHQUVBLElBQUFDLEVBQVl4NEQsRUFBUSxJQUNwQnk0RCxFQUEwQno0RCxFQUFRLElBRWxDMDRELEVBQUEsQ0FDQUMsZUFBQSxxQ0FHQSxTQUFBQyxFQUFBQyxFQUFBeDNELElBQ0FtM0QsRUFBQWQsWUFBQW1CLElBQUFMLEVBQUFkLFlBQUFtQixFQUFBLG1CQUNBQSxFQUFBLGdCQUFBeDNELEdBZ0JBLElBWEF5M0QsRUFXQUMsRUFBQSxDQUNBRCxTQVhBLG9CQUFBRSxlQUVBRixFQUFjOTRELEVBQVEsU0FDbkIsSUFBQXU0RCxJQUVITyxFQUFjOTRELEVBQVEsS0FFdEI4NEQsR0FNQUcsaUJBQUEsVUFBQTE0QyxFQUFBczRDLEdBRUEsT0FEQUosRUFBQUksRUFBQSxnQkFDQUwsRUFBQXRCLFdBQUEzMkMsSUFDQWk0QyxFQUFBdkIsY0FBQTEyQyxJQUNBaTRDLEVBQUExQixTQUFBdjJDLElBQ0FpNEMsRUFBQVYsU0FBQXYzQyxJQUNBaTRDLEVBQUFaLE9BQUFyM0MsSUFDQWk0QyxFQUFBWCxPQUFBdDNDLEdBRUFBLEVBRUFpNEMsRUFBQXBCLGtCQUFBNzJDLEdBQ0FBLEVBQUFnM0MsT0FFQWlCLEVBQUFSLGtCQUFBejNDLElBQ0FxNEMsRUFBQUMsRUFBQSxtREFDQXQ0QyxFQUFBaFYsWUFFQWl0RCxFQUFBekIsU0FBQXgyQyxJQUNBcTRDLEVBQUFDLEVBQUEsa0NBQ0FqNEMsS0FBQUMsVUFBQU4sSUFFQUEsSUFHQTI0QyxrQkFBQSxVQUFBMzRDLEdBRUEsb0JBQUFBLEVBQ0EsSUFDQUEsRUFBQUssS0FBQWhDLE1BQUEyQixHQUNPLE1BQUExWSxJQUVQLE9BQUEwWSxJQU9BcS9CLFFBQUEsRUFFQXVaLGVBQUEsYUFDQUMsZUFBQSxlQUVBQyxrQkFBQSxFQUVBQyxlQUFBLFNBQUFDLEdBQ0EsT0FBQUEsR0FBQSxLQUFBQSxFQUFBLE1BSUFSLEVBQUFGLFFBQUEsQ0FDQVcsT0FBQSxDQUNBQyxPQUFBLHNDQUlBakIsRUFBQXJ2RCxRQUFBLGlDQUFBbUssR0FDQXlsRCxFQUFBRixRQUFBdmxELEdBQUEsS0FHQWtsRCxFQUFBcnZELFFBQUEsZ0NBQUFtSyxHQUNBeWxELEVBQUFGLFFBQUF2bEQsR0FBQWtsRCxFQUFBSixNQUFBTSxLQUdBdjRELEVBQUFELFFBQUE2NEQsbURDN0ZBNTRELEVBQUFELFFBQUEsU0FBQXdJLEVBQUE0dkQsR0FDQSxrQkFFQSxJQURBLElBQUFydkQsRUFBQSxJQUFBbkQsTUFBQXZELFVBQUFDLFFBQ0FwQyxFQUFBLEVBQW1CQSxFQUFBNkksRUFBQXpHLE9BQWlCcEMsSUFDcEM2SSxFQUFBN0ksR0FBQW1DLFVBQUFuQyxHQUVBLE9BQUFzSSxFQUFBaEcsTUFBQTQxRCxFQUFBcnZELG1DQ05BLElBQUF1dkQsRUFBWXg0RCxFQUFRLElBQ3BCMDVELEVBQWExNUQsRUFBUSxJQUNyQjI1RCxFQUFlMzVELEVBQVEsSUFDdkI0NUQsRUFBbUI1NUQsRUFBUSxJQUMzQjY1RCxFQUFzQjc1RCxFQUFRLElBQzlCODVELEVBQWtCOTVELEVBQVEsSUFDMUIrNUQsRUFBQSxvQkFBQXZ3RCxlQUFBdXdELE1BQUF2d0QsT0FBQXV3RCxLQUFBbjRELEtBQUE0SCxTQUF5RnhKLEVBQVEsSUFFakdHLEVBQUFELFFBQUEsU0FBQTg1RCxHQUNBLFdBQUFDLFFBQUEsU0FBQUMsRUFBQUMsR0FDQSxJQUFBQyxFQUFBSixFQUFBejVDLEtBQ0E4NUMsRUFBQUwsRUFBQW5CLFFBRUFMLEVBQUF0QixXQUFBa0QsV0FDQUMsRUFBQSxnQkFHQSxJQUFBQyxFQUFBLElBQUF0QixlQUNBdUIsRUFBQSxxQkFDQUMsR0FBQSxFQWlCQSxHQVhBLG9CQUFBaHhELFNBQ0FBLE9BQUFpeEQsZ0JBQUEsb0JBQUFILEdBQ0FULEVBQUFHLEVBQUE3bkQsT0FDQW1vRCxFQUFBLElBQUE5d0QsT0FBQWl4RCxlQUNBRixFQUFBLFNBQ0FDLEdBQUEsRUFDQUYsRUFBQUksV0FBQSxhQUNBSixFQUFBSyxVQUFBLGNBSUFYLEVBQUFZLEtBQUEsQ0FDQSxJQUFBQyxFQUFBYixFQUFBWSxLQUFBQyxVQUFBLEdBQ0E1bkMsRUFBQSttQyxFQUFBWSxLQUFBM25DLFVBQUEsR0FDQW9uQyxFQUFBUyxjQUFBLFNBQUFmLEVBQUFjLEVBQUEsSUFBQTVuQyxHQStEQSxHQTVEQXFuQyxFQUFBUyxLQUFBZixFQUFBMW1ELE9BQUE4TSxjQUFBdTVDLEVBQUFLLEVBQUE3bkQsSUFBQTZuRCxFQUFBNW5ELE9BQUE0bkQsRUFBQWdCLG1CQUFBLEdBR0FWLEVBQUExYSxRQUFBb2EsRUFBQXBhLFFBR0EwYSxFQUFBQyxHQUFBLFdBQ0EsR0FBQUQsSUFBQSxJQUFBQSxFQUFBVyxZQUFBVCxLQVFBLElBQUFGLEVBQUFmLFFBQUFlLEVBQUFZLGFBQUEsSUFBQVosRUFBQVksWUFBQWo0RCxRQUFBLFdBS0EsSUFBQWs0RCxFQUFBLDBCQUFBYixFQUFBVixFQUFBVSxFQUFBYyx5QkFBQSxLQUVBQyxFQUFBLENBQ0E5NkMsS0FGQXk1QyxFQUFBc0IsY0FBQSxTQUFBdEIsRUFBQXNCLGFBQUFoQixFQUFBZSxTQUFBZixFQUFBaUIsYUFJQWhDLE9BQUEsT0FBQWUsRUFBQWYsT0FBQSxJQUFBZSxFQUFBZixPQUNBaUMsV0FBQSxPQUFBbEIsRUFBQWYsT0FBQSxhQUFBZSxFQUFBa0IsV0FDQTNDLFFBQUFzQyxFQUNBbkIsU0FDQU0sV0FHQVosRUFBQVEsRUFBQUMsRUFBQWtCLEdBR0FmLEVBQUEsT0FJQUEsRUFBQW1CLFFBQUEsV0FHQXRCLEVBQUFMLEVBQUEsZ0JBQUFFLEVBQUEsS0FBQU0sSUFHQUEsRUFBQSxNQUlBQSxFQUFBSyxVQUFBLFdBQ0FSLEVBQUFMLEVBQUEsY0FBQUUsRUFBQXBhLFFBQUEsY0FBQW9hLEVBQUEsZUFDQU0sSUFHQUEsRUFBQSxNQU1BOUIsRUFBQU4sdUJBQUEsQ0FDQSxJQUFBd0QsRUFBb0IxN0QsRUFBUSxJQUc1QjI3RCxHQUFBM0IsRUFBQTRCLGlCQUFBL0IsRUFBQUcsRUFBQTduRCxPQUFBNm5ELEVBQUFiLGVBQ0F1QyxFQUFBRyxLQUFBN0IsRUFBQWIscUJBQ0E1MEQsRUFFQW8zRCxJQUNBdEIsRUFBQUwsRUFBQVosZ0JBQUF1QyxHQXVCQSxHQWxCQSxxQkFBQXJCLEdBQ0E5QixFQUFBcnZELFFBQUFreEQsRUFBQSxTQUFBaDRDLEVBQUExZ0IsUUFDQSxJQUFBeTRELEdBQUEsaUJBQUF6NEQsRUFBQXFyQixxQkFFQXF0QyxFQUFBMTRELEdBR0EyNEQsRUFBQXdCLGlCQUFBbjZELEVBQUEwZ0IsS0FNQTIzQyxFQUFBNEIsa0JBQ0F0QixFQUFBc0IsaUJBQUEsR0FJQTVCLEVBQUFzQixhQUNBLElBQ0FoQixFQUFBZ0IsYUFBQXRCLEVBQUFzQixhQUNPLE1BQUF6ekQsR0FHUCxZQUFBbXlELEVBQUFzQixhQUNBLE1BQUF6ekQsRUFNQSxtQkFBQW15RCxFQUFBK0Isb0JBQ0F6QixFQUFBeHRELGlCQUFBLFdBQUFrdEQsRUFBQStCLG9CQUlBLG1CQUFBL0IsRUFBQWdDLGtCQUFBMUIsRUFBQTJCLFFBQ0EzQixFQUFBMkIsT0FBQW52RCxpQkFBQSxXQUFBa3RELEVBQUFnQyxrQkFHQWhDLEVBQUFrQyxhQUVBbEMsRUFBQWtDLFlBQUFDLFFBQUF4a0IsS0FBQSxTQUFBeWtCLEdBQ0E5QixJQUlBQSxFQUFBK0IsUUFDQWxDLEVBQUFpQyxHQUVBOUIsRUFBQSxhQUlBLzFELElBQUE2MUQsSUFDQUEsRUFBQSxNQUlBRSxFQUFBZ0MsS0FBQWxDLG9DQy9LQSxJQUFBbUMsRUFBbUJ2OEQsRUFBUSxJQVkzQkcsRUFBQUQsUUFBQSxTQUFBd0QsRUFBQXMyRCxFQUFBd0MsRUFBQWxDLEVBQUFlLEdBQ0EsSUFBQXZoRCxFQUFBLElBQUFuVyxNQUFBRCxHQUNBLE9BQUE2NEQsRUFBQXppRCxFQUFBa2dELEVBQUF3QyxFQUFBbEMsRUFBQWUsa0NDZEFsN0QsRUFBQUQsUUFBQSxTQUFBbUIsR0FDQSxTQUFBQSxNQUFBbzdELDJDQ0tBLFNBQUFDLEVBQUFoNUQsR0FDQWYsS0FBQWUsVUFHQWc1RCxFQUFBMTZELFVBQUF1SixTQUFBLFdBQ0EsZ0JBQUE1SSxLQUFBZSxRQUFBLEtBQUFmLEtBQUFlLFFBQUEsS0FHQWc1RCxFQUFBMTZELFVBQUF5NkQsWUFBQSxFQUVBdDhELEVBQUFELFFBQUF3OEQsOFBDbEJBLElBQUE1NUMsRUFBQTY1QyxFQUFBMzhELEVBQUEsSUFDQW9qQixFQUFBcGpCLEVBQUEsSUFFQTQ4RCxFQUFBNThELEVBQUEsSUE4QkFFLEVBQUEsUUFBZWtqQixFQUFBeTVDLFFBSlMsU0FBQ3YxRCxHQUN2QixNQUFPLENBQUV5bEQsTUFBT3psRCxFQUFNeWxELFFBS3RCLENBQUUrUCxXQUFVRixFQUFBRSxZQUZDMTVDLENBdkJmLFNBQW1CblosR0FXakIsT0FWQTZZLEVBQUFxRixVQUFVLFdBQ1JsZSxFQUFNNnlELGNBQ0wsSUFTRGg2QyxFQUFBLFFBQUFwWixjQUFBLFdBQ0VvWixFQUFBLFFBQUFwWixjQUFBLHdDQUNBb1osRUFBQSxRQUFBcFosY0FBQSxVQVJLTyxFQUFNOGlELE1BQU1wOUMsSUFBSSxTQUFBb3RELEdBQ3JCLE9BQU9qNkMsRUFBQSxRQUFBcFosY0FBQSxNQUFJL0gsSUFBS283RCxFQUFLbGdDLElBQUtrZ0MsRUFBS3A4RCx3OUNDakJyQ21SLEVBQUFuUCxzREFBQSxJQUFBcTZELEVBQUFqNkMsRUFBQS9pQixFQUFBLEtBRUFndEQsRUFBQWh0RCxFQUFBLElBRWFFLEVBQUE0OEQsV0FBYSxXQUFNLGdCQUFPbmhELEdBQWtCLE9BQUFzaEQsRUFBQW5yRCxPQUFBLDJFQUMzQyxTQUFNa3JELEVBQUEsUUFBTS83RCxJQUFJLDJEQUF0QmdlLEVBQU1pK0MsRUFBQUMsT0FFWnhoRCxFQUFTLENBQUV4RCxLQUFNNjBDLEVBQUFDLFlBQWFwYyxRQUFTNXhCLGdDQ1B6QzllLEVBQUFELFFBQWlCRixFQUFRLGtDQ0V6QixJQUFBdzRELEVBQVl4NEQsRUFBUSxJQUNwQjRCLEVBQVc1QixFQUFRLElBQ25CbzlELEVBQVlwOUQsRUFBUSxJQUNwQis0RCxFQUFlLzRELEVBQVEsSUFRdkIsU0FBQXE5RCxFQUFBQyxHQUNBLElBQUEzc0QsRUFBQSxJQUFBeXNELEVBQUFFLEdBQ0E5WCxFQUFBNWpELEVBQUF3N0QsRUFBQXA3RCxVQUFBczRELFFBQUEzcEQsR0FRQSxPQUxBNm5ELEVBQUExb0MsT0FBQTAxQixFQUFBNFgsRUFBQXA3RCxVQUFBMk8sR0FHQTZuRCxFQUFBMW9DLE9BQUEwMUIsRUFBQTcwQyxHQUVBNjBDLEVBSUEsSUFBQStYLEVBQUFGLEVBQUF0RSxHQUdBd0UsRUFBQUgsUUFHQUcsRUFBQTc3RCxPQUFBLFNBQUE4N0QsR0FDQSxPQUFBSCxFQUFBN0UsRUFBQUosTUFBQVcsRUFBQXlFLEtBSUFELEVBQUFiLE9BQWUxOEQsRUFBUSxJQUN2QnU5RCxFQUFBRSxZQUFvQno5RCxFQUFRLElBQzVCdTlELEVBQUFHLFNBQWlCMTlELEVBQVEsSUFHekJ1OUQsRUFBQUksSUFBQSxTQUFBQyxHQUNBLE9BQUEzRCxRQUFBMEQsSUFBQUMsSUFFQUwsRUFBQU0sT0FBZTc5RCxFQUFRLElBRXZCRyxFQUFBRCxRQUFBcTlELEVBR0FwOUQsRUFBQUQsUUFBQXdpQixRQUFBNjZDLGlCQ3RDQSxTQUFBekcsRUFBQXJ4RCxHQUNBLFFBQUFBLEVBQUFwQyxhQUFBLG1CQUFBb0MsRUFBQXBDLFlBQUF5ekQsVUFBQXJ4RCxFQUFBcEMsWUFBQXl6RCxTQUFBcnhEOzs7Ozs7O0FBTEF0RixFQUFBRCxRQUFBLFNBQUF1RixHQUNBLGFBQUFBLElBQUFxeEQsRUFBQXJ4RCxJQVFBLFNBQUFBLEdBQ0EseUJBQUFBLEVBQUFxNEQsYUFBQSxtQkFBQXI0RCxFQUFBdUIsT0FBQTh2RCxFQUFBcnhELEVBQUF1QixNQUFBLE1BVEErMkQsQ0FBQXQ0RCxRQUFBdTRELDBDQ1JBLElBQUFqRixFQUFlLzRELEVBQVEsSUFDdkJ3NEQsRUFBWXg0RCxFQUFRLElBQ3BCaStELEVBQXlCaitELEVBQVEsSUFDakNrK0QsRUFBc0JsK0QsRUFBUSxJQU85QixTQUFBbzlELEVBQUFJLEdBQ0E3NkQsS0FBQW8yRCxTQUFBeUUsRUFDQTc2RCxLQUFBdzdELGFBQUEsQ0FDQTdELFFBQUEsSUFBQTJELEVBQ0E1QyxTQUFBLElBQUE0QyxHQVNBYixFQUFBcDdELFVBQUFzNEQsUUFBQSxTQUFBTixHQUdBLGlCQUFBQSxJQUNBQSxFQUFBeEIsRUFBQUosTUFBQSxDQUNBam1ELElBQUE1UCxVQUFBLElBQ0tBLFVBQUEsTUFHTHkzRCxFQUFBeEIsRUFBQUosTUFBQVcsRUFBQSxDQUFrQ3psRCxPQUFBLE9BQWMzUSxLQUFBbzJELFNBQUFpQixJQUNoRDFtRCxPQUFBMG1ELEVBQUExbUQsT0FBQTBaLGNBR0EsSUFBQWpQLEVBQUEsQ0FBQW1nRCxPQUFBMzVELEdBQ0E0M0QsRUFBQWxDLFFBQUFDLFFBQUFGLEdBVUEsSUFSQXIzRCxLQUFBdzdELGFBQUE3RCxRQUFBbnhELFFBQUEsU0FBQWkxRCxHQUNBcmdELEVBQUE1WSxRQUFBaTVELEVBQUFDLFVBQUFELEVBQUFFLFlBR0EzN0QsS0FBQXc3RCxhQUFBOUMsU0FBQWx5RCxRQUFBLFNBQUFpMUQsR0FDQXJnRCxFQUFBbFYsS0FBQXUxRCxFQUFBQyxVQUFBRCxFQUFBRSxZQUdBdmdELEVBQUF2YixRQUNBMjVELElBQUF4a0IsS0FBQTU1QixFQUFBd2dELFFBQUF4Z0QsRUFBQXdnRCxTQUdBLE9BQUFwQyxHQUlBM0QsRUFBQXJ2RCxRQUFBLDJDQUFBbUssR0FFQThwRCxFQUFBcDdELFVBQUFzUixHQUFBLFNBQUFuQixFQUFBNm5ELEdBQ0EsT0FBQXIzRCxLQUFBMjNELFFBQUE5QixFQUFBSixNQUFBNEIsR0FBQSxHQUFnRCxDQUNoRDFtRCxTQUNBbkIsWUFLQXFtRCxFQUFBcnZELFFBQUEsZ0NBQUFtSyxHQUVBOHBELEVBQUFwN0QsVUFBQXNSLEdBQUEsU0FBQW5CLEVBQUFvTyxFQUFBeTVDLEdBQ0EsT0FBQXIzRCxLQUFBMjNELFFBQUE5QixFQUFBSixNQUFBNEIsR0FBQSxHQUFnRCxDQUNoRDFtRCxTQUNBbkIsTUFDQW9PLGFBS0FwZ0IsRUFBQUQsUUFBQWs5RCxpQkM3RUEsSUFPQW9CLEVBQ0FDLEVBUkFsRyxFQUFBcDRELEVBQUFELFFBQUEsR0FVQSxTQUFBdytELElBQ0EsVUFBQS82RCxNQUFBLG1DQUVBLFNBQUFnN0QsSUFDQSxVQUFBaDdELE1BQUEscUNBc0JBLFNBQUFpN0QsRUFBQUMsR0FDQSxHQUFBTCxJQUFBL3hCLFdBRUEsT0FBQUEsV0FBQW95QixFQUFBLEdBR0EsSUFBQUwsSUFBQUUsSUFBQUYsSUFBQS94QixXQUVBLE9BREEreEIsRUFBQS94QixXQUNBQSxXQUFBb3lCLEVBQUEsR0FFQSxJQUVBLE9BQUFMLEVBQUFLLEVBQUEsR0FDSyxNQUFBaDNELEdBQ0wsSUFFQSxPQUFBMjJELEVBQUFqK0QsS0FBQSxLQUFBcytELEVBQUEsR0FDUyxNQUFBaDNELEdBRVQsT0FBQTIyRCxFQUFBaitELEtBQUFvQyxLQUFBazhELEVBQUEsTUF2Q0EsV0FDQSxJQUVBTCxFQURBLG1CQUFBL3hCLFdBQ0FBLFdBRUFpeUIsRUFFSyxNQUFBNzJELEdBQ0wyMkQsRUFBQUUsRUFFQSxJQUVBRCxFQURBLG1CQUFBOXhCLGFBQ0FBLGFBRUFneUIsRUFFSyxNQUFBOTJELEdBQ0w0MkQsRUFBQUUsR0FqQkEsR0F3RUEsSUFFQUcsRUFGQW5xQixFQUFBLEdBQ0FvcUIsR0FBQSxFQUVBQyxHQUFBLEVBRUEsU0FBQUMsSUFDQUYsR0FBQUQsSUFHQUMsR0FBQSxFQUNBRCxFQUFBdDhELE9BQ0FteUMsRUFBQW1xQixFQUFBaDZELE9BQUE2dkMsR0FFQXFxQixHQUFBLEVBRUFycUIsRUFBQW55QyxRQUNBMDhELEtBSUEsU0FBQUEsSUFDQSxJQUFBSCxFQUFBLENBR0EsSUFBQW5mLEVBQUFnZixFQUFBSyxHQUNBRixHQUFBLEVBR0EsSUFEQSxJQUFBSSxFQUFBeHFCLEVBQUFueUMsT0FDQTI4RCxHQUFBLENBR0EsSUFGQUwsRUFBQW5xQixFQUNBQSxFQUFBLEtBQ0FxcUIsRUFBQUcsR0FDQUwsR0FDQUEsRUFBQUUsR0FBQUksTUFHQUosR0FBQSxFQUNBRyxFQUFBeHFCLEVBQUFueUMsT0FFQXM4RCxFQUFBLEtBQ0FDLEdBQUEsRUFuRUEsU0FBQU0sR0FDQSxHQUFBWixJQUFBOXhCLGFBRUEsT0FBQUEsYUFBQTB5QixHQUdBLElBQUFaLElBQUFFLElBQUFGLElBQUE5eEIsYUFFQSxPQURBOHhCLEVBQUE5eEIsYUFDQUEsYUFBQTB5QixHQUVBLElBRUFaLEVBQUFZLEdBQ0ssTUFBQXgzRCxHQUNMLElBRUEsT0FBQTQyRCxFQUFBbCtELEtBQUEsS0FBQTgrRCxHQUNTLE1BQUF4M0QsR0FHVCxPQUFBNDJELEVBQUFsK0QsS0FBQW9DLEtBQUEwOEQsS0FnREFDLENBQUExZixJQWlCQSxTQUFBMmYsRUFBQVYsRUFBQTlXLEdBQ0FwbEQsS0FBQWs4RCxNQUNBbDhELEtBQUFvbEQsUUFZQSxTQUFBOXhDLEtBNUJBc2lELEVBQUFpSCxTQUFBLFNBQUFYLEdBQ0EsSUFBQTUxRCxFQUFBLElBQUFuRCxNQUFBdkQsVUFBQUMsT0FBQSxHQUNBLEdBQUFELFVBQUFDLE9BQUEsRUFDQSxRQUFBcEMsRUFBQSxFQUF1QkEsRUFBQW1DLFVBQUFDLE9BQXNCcEMsSUFDN0M2SSxFQUFBN0ksRUFBQSxHQUFBbUMsVUFBQW5DLEdBR0F1MEMsRUFBQTlyQyxLQUFBLElBQUEwMkQsRUFBQVYsRUFBQTUxRCxJQUNBLElBQUEwckMsRUFBQW55QyxRQUFBdThELEdBQ0FILEVBQUFNLElBU0FLLEVBQUF2OUQsVUFBQW85RCxJQUFBLFdBQ0F6OEQsS0FBQWs4RCxJQUFBbjhELE1BQUEsS0FBQUMsS0FBQW9sRCxRQUVBd1EsRUFBQWtILE1BQUEsVUFDQWxILEVBQUFtSCxTQUFBLEVBQ0FuSCxFQUFBb0gsSUFBQSxHQUNBcEgsRUFBQXFILEtBQUEsR0FDQXJILEVBQUF4dkMsUUFBQSxHQUNBd3ZDLEVBQUFzSCxTQUFBLEdBSUF0SCxFQUFBaFMsR0FBQXR3QyxFQUNBc2lELEVBQUF1SCxZQUFBN3BELEVBQ0FzaUQsRUFBQXdILEtBQUE5cEQsRUFDQXNpRCxFQUFBOVIsSUFBQXh3QyxFQUNBc2lELEVBQUF5SCxlQUFBL3BELEVBQ0FzaUQsRUFBQTBILG1CQUFBaHFELEVBQ0FzaUQsRUFBQTJILEtBQUFqcUQsRUFDQXNpRCxFQUFBNEgsZ0JBQUFscUQsRUFDQXNpRCxFQUFBNkgsb0JBQUFucUQsRUFFQXNpRCxFQUFBcndELFVBQUEsU0FBQXZILEdBQXFDLFVBRXJDNDNELEVBQUE4SCxRQUFBLFNBQUExL0QsR0FDQSxVQUFBZ0QsTUFBQSxxQ0FHQTQwRCxFQUFBK0gsSUFBQSxXQUEyQixXQUMzQi9ILEVBQUFnSSxNQUFBLFNBQUFDLEdBQ0EsVUFBQTc4RCxNQUFBLG1DQUVBNDBELEVBQUFrSSxNQUFBLFdBQTRCLHdDQ3JMNUIsSUFBQWpJLEVBQVl4NEQsRUFBUSxJQUVwQkcsRUFBQUQsUUFBQSxTQUFBMjRELEVBQUE2SCxHQUNBbEksRUFBQXJ2RCxRQUFBMHZELEVBQUEsU0FBQXgzRCxFQUFBVixHQUNBQSxJQUFBKy9ELEdBQUEvL0QsRUFBQXlmLGdCQUFBc2dELEVBQUF0Z0QsZ0JBQ0F5NEMsRUFBQTZILEdBQUFyL0QsU0FDQXczRCxFQUFBbDRELHFDQ05BLElBQUFtNUQsRUFBa0I5NUQsRUFBUSxJQVMxQkcsRUFBQUQsUUFBQSxTQUFBZzZELEVBQUFDLEVBQUFrQixHQUNBLElBQUEvQixFQUFBK0IsRUFBQXJCLE9BQUFWLGVBRUErQixFQUFBOUIsUUFBQUQsTUFBQStCLEVBQUE5QixRQUdBWSxFQUFBTCxFQUNBLG1DQUFBdUIsRUFBQTlCLE9BQ0E4QixFQUFBckIsT0FDQSxLQUNBcUIsRUFBQWYsUUFDQWUsSUFQQW5CLEVBQUFtQixrQ0NIQWw3RCxFQUFBRCxRQUFBLFNBQUE0WixFQUFBa2dELEVBQUF3QyxFQUFBbEMsRUFBQWUsR0FPQSxPQU5BdmhELEVBQUFrZ0QsU0FDQXdDLElBQ0ExaUQsRUFBQTBpRCxRQUVBMWlELEVBQUF3Z0QsVUFDQXhnRCxFQUFBdWhELFdBQ0F2aEQsaUNDakJBLElBQUEwK0MsRUFBWXg0RCxFQUFRLElBRXBCLFNBQUF3Z0IsRUFBQTZCLEdBQ0EsT0FBQTVCLG1CQUFBNEIsR0FDQWhWLFFBQUEsYUFDQUEsUUFBQSxhQUNBQSxRQUFBLFlBQ0FBLFFBQUEsYUFDQUEsUUFBQSxZQUNBQSxRQUFBLGFBQ0FBLFFBQUEsYUFVQWxOLEVBQUFELFFBQUEsU0FBQWlTLEVBQUFDLEVBQUE0b0QsR0FFQSxJQUFBNW9ELEVBQ0EsT0FBQUQsRUFHQSxJQUFBd3VELEVBQ0EsR0FBQTNGLEVBQ0EyRixFQUFBM0YsRUFBQTVvRCxRQUNHLEdBQUFvbUQsRUFBQVIsa0JBQUE1bEQsR0FDSHV1RCxFQUFBdnVELEVBQUE3RyxlQUNHLENBQ0gsSUFBQStWLEVBQUEsR0FFQWszQyxFQUFBcnZELFFBQUFpSixFQUFBLFNBQUFpUSxFQUFBMWdCLEdBQ0EwZ0IsVUFJQW0yQyxFQUFBenlELFFBQUFzYyxHQUNBMWdCLEdBQUEsS0FFQTBnQixFQUFBLENBQUFBLEdBR0FtMkMsRUFBQXJ2RCxRQUFBa1osRUFBQSxTQUFBd0IsR0FDQTIwQyxFQUFBYixPQUFBOXpDLEdBQ0FBLElBQUErOEMsY0FDU3BJLEVBQUF6QixTQUFBbHpDLEtBQ1RBLEVBQUFqRCxLQUFBQyxVQUFBZ0QsSUFFQXZDLEVBQUF6WSxLQUFBMlgsRUFBQTdlLEdBQUEsSUFBQTZlLEVBQUFxRCxTQUlBODhDLEVBQUFyL0MsRUFBQWpjLEtBQUEsS0FPQSxPQUpBczdELElBQ0F4dUQsS0FBQSxJQUFBQSxFQUFBbFAsUUFBQSxjQUFBMDlELEdBR0F4dUQsaUNDOURBLElBQUFxbUQsRUFBWXg0RCxFQUFRLElBSXBCNmdFLEVBQUEsQ0FDQSw2REFDQSxrRUFDQSxnRUFDQSxzQ0FnQkExZ0UsRUFBQUQsUUFBQSxTQUFBMjRELEdBQ0EsSUFDQWwzRCxFQUNBMGdCLEVBQ0FqaUIsRUFIQTBnRSxFQUFBLEdBS0EsT0FBQWpJLEdBRUFMLEVBQUFydkQsUUFBQTB2RCxFQUFBcDBELE1BQUEsZUFBQXM4RCxHQUtBLEdBSkEzZ0UsRUFBQTJnRSxFQUFBOTlELFFBQUEsS0FDQXRCLEVBQUE2MkQsRUFBQTd0QixLQUFBbzJCLEVBQUF6N0QsT0FBQSxFQUFBbEYsSUFBQTRzQixjQUNBM0ssRUFBQW0yQyxFQUFBN3RCLEtBQUFvMkIsRUFBQXo3RCxPQUFBbEYsRUFBQSxJQUVBdUIsRUFBQSxDQUNBLEdBQUFtL0QsRUFBQW4vRCxJQUFBay9ELEVBQUE1OUQsUUFBQXRCLElBQUEsRUFDQSxPQUdBbS9ELEVBQUFuL0QsR0FEQSxlQUFBQSxHQUNBbS9ELEVBQUFuL0QsR0FBQW0vRCxFQUFBbi9ELEdBQUEsSUFBQW1ELE9BQUEsQ0FBQXVkLElBRUF5K0MsRUFBQW4vRCxHQUFBbS9ELEVBQUFuL0QsR0FBQSxLQUFBMGdCLE9BS0F5K0MsR0FuQmlCQSxpQ0M5QmpCLElBQUF0SSxFQUFZeDRELEVBQVEsSUFFcEJHLEVBQUFELFFBQ0FzNEQsRUFBQU4sdUJBSUEsV0FDQSxJQUVBOEksRUFGQUMsRUFBQSxrQkFBQXA2RCxLQUFBeUQsVUFBQUMsV0FDQTIyRCxFQUFBejNELFNBQUFDLGNBQUEsS0FTQSxTQUFBeTNELEVBQUFodkQsR0FDQSxJQUFBbEYsRUFBQWtGLEVBV0EsT0FUQTh1RCxJQUVBQyxFQUFBcHRDLGFBQUEsT0FBQTdtQixHQUNBQSxFQUFBaTBELEVBQUFqMEQsTUFHQWkwRCxFQUFBcHRDLGFBQUEsT0FBQTdtQixHQUdBLENBQ0FBLEtBQUFpMEQsRUFBQWowRCxLQUNBbTBELFNBQUFGLEVBQUFFLFNBQUFGLEVBQUFFLFNBQUEvekQsUUFBQSxZQUNBZzBELEtBQUFILEVBQUFHLEtBQ0FsNkQsT0FBQSs1RCxFQUFBLzVELE9BQUErNUQsRUFBQS81RCxPQUFBa0csUUFBQSxhQUNBakcsS0FBQTg1RCxFQUFBOTVELEtBQUE4NUQsRUFBQTk1RCxLQUFBaUcsUUFBQSxZQUNBaTBELFNBQUFKLEVBQUFJLFNBQ0FDLEtBQUFMLEVBQUFLLEtBQ0ExOUQsU0FBQSxNQUFBcTlELEVBQUFyOUQsU0FBQUMsT0FBQSxHQUNBbzlELEVBQUFyOUQsU0FDQSxJQUFBcTlELEVBQUFyOUQsVUFZQSxPQVJBbTlELEVBQUFHLEVBQUEzM0QsT0FBQXRDLFNBQUErRixNQVFBLFNBQUF1MEQsR0FDQSxJQUFBVixFQUFBdEksRUFBQWhCLFNBQUFnSyxHQUFBTCxFQUFBSyxLQUNBLE9BQUFWLEVBQUFNLFdBQUFKLEVBQUFJLFVBQ0FOLEVBQUFPLE9BQUFMLEVBQUFLLE1BaERBLEdBc0RBLFdBQ0Esd0NDNURBLElBQUFJLEVBQUEsb0VBRUEsU0FBQTU4QyxJQUNBbGlCLEtBQUFlLFFBQUEsdUNBRUFtaEIsRUFBQTdpQixVQUFBLElBQUEyQixNQUNBa2hCLEVBQUE3aUIsVUFBQXc2RCxLQUFBLEVBQ0EzM0MsRUFBQTdpQixVQUFBckIsS0FBQSx3QkF3QkFSLEVBQUFELFFBdEJBLFNBQUFvckMsR0FHQSxJQUZBLElBSUE3OUIsRUFBQTR2QixFQUpBeGUsRUFBQXZDLE9BQUFndkIsR0FDQW8yQixFQUFBLEdBR0FDLEVBQUEsRUFBQWh5RCxFQUFBOHhELEVBSUE1aUQsRUFBQS9hLE9BQUEsRUFBQTY5RCxLQUFBaHlELEVBQUEsSUFBQWd5RCxFQUFBLEdBRUFELEdBQUEveEQsRUFBQTdMLE9BQUEsR0FBQTJKLEdBQUEsRUFBQWswRCxFQUFBLEtBQ0EsQ0FFQSxJQURBdGtDLEVBQUF4ZSxFQUFBc0IsV0FBQXdoRCxHQUFBLE1BQ0EsSUFDQSxVQUFBOThDLEVBRUFwWCxLQUFBLEVBQUE0dkIsRUFFQSxPQUFBcWtDLGlDQzlCQSxJQUFBbEosRUFBWXg0RCxFQUFRLElBRXBCRyxFQUFBRCxRQUNBczRELEVBQUFOLHVCQUlBLENBQ0EwSixNQUFBLFNBQUFqaEUsRUFBQVUsRUFBQXdnRSxFQUFBcDdELEVBQUFxN0QsRUFBQUMsR0FDQSxJQUFBQyxFQUFBLEdBQ0FBLEVBQUFuNUQsS0FBQWxJLEVBQUEsSUFBQThmLG1CQUFBcGYsSUFFQW0zRCxFQUFBZixTQUFBb0ssSUFDQUcsRUFBQW41RCxLQUFBLGVBQUE4bUIsS0FBQWt5QyxHQUFBSSxlQUdBekosRUFBQWhCLFNBQUEvd0QsSUFDQXU3RCxFQUFBbjVELEtBQUEsUUFBQXBDLEdBR0EreEQsRUFBQWhCLFNBQUFzSyxJQUNBRSxFQUFBbjVELEtBQUEsVUFBQWk1RCxJQUdBLElBQUFDLEdBQ0FDLEVBQUFuNUQsS0FBQSxVQUdBWSxTQUFBdTRELFNBQUEzOEQsS0FBQSxPQUdBdzJELEtBQUEsU0FBQWw3RCxHQUNBLElBQUFnUyxFQUFBbEosU0FBQXU0RCxPQUFBcnZELE1BQUEsSUFBQS9MLE9BQUEsYUFBMERqRyxFQUFBLGNBQzFELE9BQUFnUyxFQUFBdXZELG1CQUFBdnZELEVBQUEsVUFHQXd2RCxPQUFBLFNBQUF4aEUsR0FDQWdDLEtBQUFpL0QsTUFBQWpoRSxFQUFBLEdBQUFndkIsS0FBQUMsTUFBQSxTQU9BLENBQ0FneUMsTUFBQSxhQUNBL0YsS0FBQSxXQUE2QixhQUM3QnNHLE9BQUEsNENDL0NBLElBQUEzSixFQUFZeDRELEVBQVEsSUFFcEIsU0FBQWkrRCxJQUNBdDdELEtBQUEwakQsU0FBQSxHQVdBNFgsRUFBQWo4RCxVQUFBb2dFLElBQUEsU0FBQS9ELEVBQUFDLEdBS0EsT0FKQTM3RCxLQUFBMGpELFNBQUF4OUMsS0FBQSxDQUNBdzFELFlBQ0FDLGFBRUEzN0QsS0FBQTBqRCxTQUFBN2pELE9BQUEsR0FRQXk3RCxFQUFBajhELFVBQUFxZ0UsTUFBQSxTQUFBeGxDLEdBQ0FsNkIsS0FBQTBqRCxTQUFBeHBCLEtBQ0FsNkIsS0FBQTBqRCxTQUFBeHBCLEdBQUEsT0FZQW9oQyxFQUFBajhELFVBQUFtSCxRQUFBLFNBQUFULEdBQ0E4dkQsRUFBQXJ2RCxRQUFBeEcsS0FBQTBqRCxTQUFBLFNBQUEvaEMsR0FDQSxPQUFBQSxHQUNBNWIsRUFBQTRiLE1BS0Fua0IsRUFBQUQsUUFBQSs5RCxnQ0NqREEsSUFBQXpGLEVBQVl4NEQsRUFBUSxJQUNwQnNpRSxFQUFvQnRpRSxFQUFRLElBQzVCMDlELEVBQWUxOUQsRUFBUSxJQUN2Qis0RCxFQUFlLzRELEVBQVEsSUFDdkJ1aUUsRUFBb0J2aUUsRUFBUSxJQUM1QndpRSxFQUFrQnhpRSxFQUFRLElBSzFCLFNBQUF5aUUsRUFBQXpJLEdBQ0FBLEVBQUFrQyxhQUNBbEMsRUFBQWtDLFlBQUF3RyxtQkFVQXZpRSxFQUFBRCxRQUFBLFNBQUE4NUQsR0FrQ0EsT0FqQ0F5SSxFQUFBekksR0FHQUEsRUFBQTJJLFVBQUFKLEVBQUF2SSxFQUFBN25ELE9BQ0E2bkQsRUFBQTduRCxJQUFBcXdELEVBQUF4SSxFQUFBMkksUUFBQTNJLEVBQUE3bkQsTUFJQTZuRCxFQUFBbkIsUUFBQW1CLEVBQUFuQixTQUFBLEdBR0FtQixFQUFBejVDLEtBQUEraEQsRUFDQXRJLEVBQUF6NUMsS0FDQXk1QyxFQUFBbkIsUUFDQW1CLEVBQUFmLGtCQUlBZSxFQUFBbkIsUUFBQUwsRUFBQUosTUFDQTRCLEVBQUFuQixRQUFBVyxRQUFBLEdBQ0FRLEVBQUFuQixRQUFBbUIsRUFBQTFtRCxTQUFBLEdBQ0EwbUQsRUFBQW5CLFNBQUEsSUFHQUwsRUFBQXJ2RCxRQUNBLHNEQUNBLFNBQUFtSyxVQUNBMG1ELEVBQUFuQixRQUFBdmxELE1BSUEwbUQsRUFBQWxCLFNBQUFDLEVBQUFELFNBRUFrQixHQUFBcmlCLEtBQUEsU0FBQTBqQixHQVVBLE9BVEFvSCxFQUFBekksR0FHQXFCLEVBQUE5NkMsS0FBQStoRCxFQUNBakgsRUFBQTk2QyxLQUNBODZDLEVBQUF4QyxRQUNBbUIsRUFBQWQsbUJBR0FtQyxHQUNHLFNBQUF1SCxHQWNILE9BYkFsRixFQUFBa0YsS0FDQUgsRUFBQXpJLEdBR0E0SSxLQUFBdkgsV0FDQXVILEVBQUF2SCxTQUFBOTZDLEtBQUEraEQsRUFDQU0sRUFBQXZILFNBQUE5NkMsS0FDQXFpRCxFQUFBdkgsU0FBQXhDLFFBQ0FtQixFQUFBZCxxQkFLQWUsUUFBQUUsT0FBQXlJLG9DQ2pGQSxJQUFBcEssRUFBWXg0RCxFQUFRLElBVXBCRyxFQUFBRCxRQUFBLFNBQUFxZ0IsRUFBQXM0QyxFQUFBZ0ssR0FNQSxPQUpBckssRUFBQXJ2RCxRQUFBMDVELEVBQUEsU0FBQW42RCxHQUNBNlgsRUFBQTdYLEVBQUE2WCxFQUFBczRDLEtBR0F0NEMsaUNDVkFwZ0IsRUFBQUQsUUFBQSxTQUFBaVMsR0FJQSxzQ0FBQXRMLEtBQUFzTCxrQ0NIQWhTLEVBQUFELFFBQUEsU0FBQXlpRSxFQUFBRyxHQUNBLE9BQUFBLEVBQ0FILEVBQUF0MUQsUUFBQSxlQUFBeTFELEVBQUF6MUQsUUFBQSxXQUNBczFELGlDQ1ZBLElBQUFqRyxFQUFhMThELEVBQVEsSUFRckIsU0FBQXk5RCxFQUFBc0YsR0FDQSxzQkFBQUEsRUFDQSxVQUFBL21ELFVBQUEsZ0NBR0EsSUFBQWduRCxFQUNBcmdFLEtBQUF3NUQsUUFBQSxJQUFBbEMsUUFBQSxTQUFBQyxHQUNBOEksRUFBQTlJLElBR0EsSUFBQXg1QyxFQUFBL2QsS0FDQW9nRSxFQUFBLFNBQUFyL0QsR0FDQWdkLEVBQUFraUQsU0FLQWxpRCxFQUFBa2lELE9BQUEsSUFBQWxHLEVBQUFoNUQsR0FDQXMvRCxFQUFBdGlELEVBQUFraUQsV0FPQW5GLEVBQUF6N0QsVUFBQTBnRSxpQkFBQSxXQUNBLEdBQUEvL0QsS0FBQWlnRSxPQUNBLE1BQUFqZ0UsS0FBQWlnRSxRQVFBbkYsRUFBQWg3RCxPQUFBLFdBQ0EsSUFBQTI1RCxFQUlBLE9BQ0ExN0MsTUFKQSxJQUFBKzhDLEVBQUEsU0FBQWg5RCxHQUNBMjdELEVBQUEzN0QsSUFJQTI3RCxXQUlBajhELEVBQUFELFFBQUF1OUQsZ0NDbENBdDlELEVBQUFELFFBQUEsU0FBQXNJLEdBQ0EsZ0JBQUE0Z0QsR0FDQSxPQUFBNWdELEVBQUE5RixNQUFBLEtBQUEwbUQiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDIwKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59IiwidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICBpZiAoY29uZGl0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXggKyBcIjogXCIgKyAobWVzc2FnZSB8fCAnJykpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImZ1bmN0aW9uIGlzQWJzb2x1dGUocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBBYm91dCAxLjV4IGZhc3RlciB0aGFuIHRoZSB0d28tYXJnIHZlcnNpb24gb2YgQXJyYXkjc3BsaWNlKClcbmZ1bmN0aW9uIHNwbGljZU9uZShsaXN0LCBpbmRleCkge1xuICBmb3IgKHZhciBpID0gaW5kZXgsIGsgPSBpICsgMSwgbiA9IGxpc3QubGVuZ3RoOyBrIDwgbjsgaSArPSAxLCBrICs9IDEpIHtcbiAgICBsaXN0W2ldID0gbGlzdFtrXTtcbiAgfVxuXG4gIGxpc3QucG9wKCk7XG59XG5cbi8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgaGVhdmlseSBvbiBub2RlJ3MgdXJsLnBhcnNlXG5mdW5jdGlvbiByZXNvbHZlUGF0aG5hbWUodG8pIHtcbiAgdmFyIGZyb20gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnO1xuXG4gIHZhciB0b1BhcnRzID0gdG8gJiYgdG8uc3BsaXQoJy8nKSB8fCBbXTtcbiAgdmFyIGZyb21QYXJ0cyA9IGZyb20gJiYgZnJvbS5zcGxpdCgnLycpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkge1xuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcuLicpO1xuICB9aWYgKG11c3RFbmRBYnMgJiYgZnJvbVBhcnRzWzBdICE9PSAnJyAmJiAoIWZyb21QYXJ0c1swXSB8fCAhaXNBYnNvbHV0ZShmcm9tUGFydHNbMF0pKSkgZnJvbVBhcnRzLnVuc2hpZnQoJycpO1xuXG4gIHZhciByZXN1bHQgPSBmcm9tUGFydHMuam9pbignLycpO1xuXG4gIGlmIChoYXNUcmFpbGluZ1NsYXNoICYmIHJlc3VsdC5zdWJzdHIoLTEpICE9PSAnLycpIHJlc3VsdCArPSAnLyc7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZVBhdGhuYW1lOyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxuZnVuY3Rpb24gdmFsdWVFcXVhbChhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KGEpKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYikgJiYgYS5sZW5ndGggPT09IGIubGVuZ3RoICYmIGEuZXZlcnkoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChpdGVtLCBiW2luZGV4XSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgYVR5cGUgPSB0eXBlb2YgYSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYSk7XG4gIHZhciBiVHlwZSA9IHR5cGVvZiBiID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihiKTtcblxuICBpZiAoYVR5cGUgIT09IGJUeXBlKSByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGFUeXBlID09PSAnb2JqZWN0Jykge1xuICAgIHZhciBhVmFsdWUgPSBhLnZhbHVlT2YoKTtcbiAgICB2YXIgYlZhbHVlID0gYi52YWx1ZU9mKCk7XG5cbiAgICBpZiAoYVZhbHVlICE9PSBhIHx8IGJWYWx1ZSAhPT0gYikgcmV0dXJuIHZhbHVlRXF1YWwoYVZhbHVlLCBiVmFsdWUpO1xuXG4gICAgdmFyIGFLZXlzID0gT2JqZWN0LmtleXMoYSk7XG4gICAgdmFyIGJLZXlzID0gT2JqZWN0LmtleXMoYik7XG5cbiAgICBpZiAoYUtleXMubGVuZ3RoICE9PSBiS2V5cy5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICAgIHJldHVybiBhS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWVFcXVhbChhW2tleV0sIGJba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbHVlRXF1YWw7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHJlc29sdmVQYXRobmFtZSBmcm9tICdyZXNvbHZlLXBhdGhuYW1lJztcbmltcG9ydCB2YWx1ZUVxdWFsIGZyb20gJ3ZhbHVlLWVxdWFsJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn1cbmZ1bmN0aW9uIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBoYXNCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoJ14nICsgcHJlZml4ICsgJyhcXFxcL3xcXFxcP3wjfCQpJywgJ2knKS50ZXN0KHBhdGgpO1xufVxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcblxuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbiAgcmV0dXJuIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb247XG5cbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59XG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgZXZlbnQuc3RhdGUgPT09IHVuZGVmaW5lZCAmJiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0NyaU9TJykgPT09IC0xO1xufVxuXG52YXIgUG9wU3RhdGVFdmVudCA9ICdwb3BzdGF0ZSc7XG52YXIgSGFzaENoYW5nZUV2ZW50ID0gJ2hhc2hjaGFuZ2UnO1xuXG5mdW5jdGlvbiBnZXRIaXN0b3J5U3RhdGUoKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5LnN0YXRlIHx8IHt9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSUUgMTEgc29tZXRpbWVzIHRocm93cyB3aGVuIGFjY2Vzc2luZyB3aW5kb3cuaGlzdG9yeS5zdGF0ZVxuICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vUmVhY3RUcmFpbmluZy9oaXN0b3J5L3B1bGwvMjg5XG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHVzZXMgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGluY2x1ZGluZ1xuICogcHVzaFN0YXRlLCByZXBsYWNlU3RhdGUsIGFuZCB0aGUgcG9wc3RhdGUgZXZlbnQuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VySGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQnJvd3NlciBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuVXNlSGlzdG9yeSA9IHN1cHBvcnRzSGlzdG9yeSgpO1xuICB2YXIgbmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIgPSAhc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSgpO1xuICB2YXIgX3Byb3BzID0gcHJvcHMsXG4gICAgICBfcHJvcHMkZm9yY2VSZWZyZXNoID0gX3Byb3BzLmZvcmNlUmVmcmVzaCxcbiAgICAgIGZvcmNlUmVmcmVzaCA9IF9wcm9wcyRmb3JjZVJlZnJlc2ggPT09IHZvaWQgMCA/IGZhbHNlIDogX3Byb3BzJGZvcmNlUmVmcmVzaCxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IF9wcm9wcy5rZXlMZW5ndGgsXG4gICAgICBrZXlMZW5ndGggPSBfcHJvcHMka2V5TGVuZ3RoID09PSB2b2lkIDAgPyA2IDogX3Byb3BzJGtleUxlbmd0aDtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbihoaXN0b3J5U3RhdGUpIHtcbiAgICB2YXIgX3JlZiA9IGhpc3RvcnlTdGF0ZSB8fCB7fSxcbiAgICAgICAga2V5ID0gX3JlZi5rZXksXG4gICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZTtcblxuICAgIHZhciBfd2luZG93JGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uLFxuICAgICAgICBwYXRobmFtZSA9IF93aW5kb3ckbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgIHNlYXJjaCA9IF93aW5kb3ckbG9jYXRpb24uc2VhcmNoLFxuICAgICAgICBoYXNoID0gX3dpbmRvdyRsb2NhdGlvbi5oYXNoO1xuICAgIHZhciBwYXRoID0gcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uTWFuYWdlciA9IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCk7XG5cbiAgZnVuY3Rpb24gc2V0U3RhdGUobmV4dFN0YXRlKSB7XG4gICAgX2V4dGVuZHMoaGlzdG9yeSwgbmV4dFN0YXRlKTtcblxuICAgIGhpc3RvcnkubGVuZ3RoID0gZ2xvYmFsSGlzdG9yeS5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcFN0YXRlKGV2ZW50KSB7XG4gICAgLy8gSWdub3JlIGV4dHJhbmVvdXMgcG9wc3RhdGUgZXZlbnRzIGluIFdlYktpdC5cbiAgICBpZiAoaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudChldmVudCkpIHJldHVybjtcbiAgICBoYW5kbGVQb3AoZ2V0RE9NTG9jYXRpb24oZXZlbnQuc3RhdGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUhhc2hDaGFuZ2UoKSB7XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKSk7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldmVydFBvcChsb2NhdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247IC8vIFRPRE86IFdlIGNvdWxkIHByb2JhYmx5IG1ha2UgdGhpcyBtb3JlIHJlbGlhYmxlIGJ5XG4gICAgLy8ga2VlcGluZyBhIGxpc3Qgb2Yga2V5cyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBrZXlzIHdlIGRvbid0IGtub3cuXG5cbiAgICB2YXIgdG9JbmRleCA9IGFsbEtleXMuaW5kZXhPZih0b0xvY2F0aW9uLmtleSk7XG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGZyb21Mb2NhdGlvbi5rZXkpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKGdldEhpc3RvcnlTdGF0ZSgpKTtcbiAgdmFyIGFsbEtleXMgPSBbaW5pdGlhbExvY2F0aW9uLmtleV07IC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICBmdW5jdGlvbiBjcmVhdGVIcmVmKGxvY2F0aW9uKSB7XG4gICAgcmV0dXJuIGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5wdXNoU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcbiAgICAgICAgICBuZXh0S2V5cy5wdXNoKGxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgYWxsS2V5cyA9IG5leHRLZXlzO1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKSA6IHZvaWQgMDtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucmVwbGFjZVN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIGlmIChwcmV2SW5kZXggIT09IC0xKSBhbGxLZXlzW3ByZXZJbmRleF0gPSBsb2NhdGlvbi5rZXk7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShocmVmKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29CYWNrKCkge1xuICAgIGdvKC0xKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvRm9yd2FyZCgpIHtcbiAgICBnbygxKTtcbiAgfVxuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSAmJiBkZWx0YSA9PT0gMSkge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH0gZWxzZSBpZiAobGlzdGVuZXJDb3VudCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuICAgICAgaWYgKG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyKSB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpc0Jsb2NrZWQgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBibG9jayhwcm9tcHQpIHtcbiAgICBpZiAocHJvbXB0ID09PSB2b2lkIDApIHtcbiAgICAgIHByb21wdCA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB1bmJsb2NrID0gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG5cbiAgICBpZiAoIWlzQmxvY2tlZCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgICBpc0Jsb2NrZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaXNCbG9ja2VkKSB7XG4gICAgICAgIGlzQmxvY2tlZCA9IGZhbHNlO1xuICAgICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmJsb2NrKCk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxudmFyIEhhc2hDaGFuZ2VFdmVudCQxID0gJ2hhc2hjaGFuZ2UnO1xudmFyIEhhc2hQYXRoQ29kZXJzID0ge1xuICBoYXNoYmFuZzoge1xuICAgIGVuY29kZVBhdGg6IGZ1bmN0aW9uIGVuY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoIDogJyEvJyArIHN0cmlwTGVhZGluZ1NsYXNoKHBhdGgpO1xuICAgIH0sXG4gICAgZGVjb2RlUGF0aDogZnVuY3Rpb24gZGVjb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGguc3Vic3RyKDEpIDogcGF0aDtcbiAgICB9XG4gIH0sXG4gIG5vc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBzdHJpcExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfSxcbiAgc2xhc2g6IHtcbiAgICBlbmNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH1cbn07XG5cbmZ1bmN0aW9uIGdldEhhc2hQYXRoKCkge1xuICAvLyBXZSBjYW4ndCB1c2Ugd2luZG93LmxvY2F0aW9uLmhhc2ggaGVyZSBiZWNhdXNlIGl0J3Mgbm90XG4gIC8vIGNvbnNpc3RlbnQgYWNyb3NzIGJyb3dzZXJzIC0gRmlyZWZveCB3aWxsIHByZS1kZWNvZGUgaXQhXG4gIHZhciBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIHZhciBoYXNoSW5kZXggPSBocmVmLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyAnJyA6IGhyZWYuc3Vic3RyaW5nKGhhc2hJbmRleCArIDEpO1xufVxuXG5mdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICB3aW5kb3cubG9jYXRpb24uaGFzaCA9IHBhdGg7XG59XG5cbmZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHZhciBoYXNoSW5kZXggPSB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCcjJyk7XG4gIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNsaWNlKDAsIGhhc2hJbmRleCA+PSAwID8gaGFzaEluZGV4IDogMCkgKyAnIycgKyBwYXRoKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhbkdvV2l0aG91dFJlbG9hZCA9IHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoKCk7XG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9IF9wcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdm9pZCAwID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gX3Byb3BzLmhhc2hUeXBlLFxuICAgICAgaGFzaFR5cGUgPSBfcHJvcHMkaGFzaFR5cGUgPT09IHZvaWQgMCA/ICdzbGFzaCcgOiBfcHJvcHMkaGFzaFR5cGU7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oKSB7XG4gICAgdmFyIHBhdGggPSBkZWNvZGVQYXRoKGdldEhhc2hQYXRoKCkpO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIWJhc2VuYW1lIHx8IGhhc0Jhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKSwgJ1lvdSBhcmUgYXR0ZW1wdGluZyB0byB1c2UgYSBiYXNlbmFtZSBvbiBhIHBhZ2Ugd2hvc2UgVVJMIHBhdGggZG9lcyBub3QgYmVnaW4gJyArICd3aXRoIHRoZSBiYXNlbmFtZS4gRXhwZWN0ZWQgcGF0aCBcIicgKyBwYXRoICsgJ1wiIHRvIGJlZ2luIHdpdGggXCInICsgYmFzZW5hbWUgKyAnXCIuJykgOiB2b2lkIDA7XG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG4gICAgcmV0dXJuIGNyZWF0ZUxvY2F0aW9uKHBhdGgpO1xuICB9XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5ub3RpZnlMaXN0ZW5lcnMoaGlzdG9yeS5sb2NhdGlvbiwgaGlzdG9yeS5hY3Rpb24pO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuXG5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICAgIHZhciBuZXh0UGF0aHMgPSBhbGxQYXRocy5zbGljZSgwLCBwcmV2SW5kZXggPT09IC0xID8gMCA6IHByZXZJbmRleCArIDEpO1xuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJykgOiB2b2lkIDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBfcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiaW1wb3J0IGNyZWF0ZUNvbnRleHQgZnJvbSAnY3JlYXRlLXJlYWN0LWNvbnRleHQnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5SGlzdG9yeSwgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsLCBjcmVhdGVQYXRoIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcbmltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSAncGF0aC10by1yZWdleHAnO1xuaW1wb3J0IF9leHRlbmRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlIH0gZnJvbSAncmVhY3QtaXMnO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UnO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5cbi8vIFRPRE86IFJlcGxhY2Ugd2l0aCBSZWFjdC5jcmVhdGVDb250ZXh0IG9uY2Ugd2UgY2FuIGFzc3VtZSBSZWFjdCAxNitcblxudmFyIGNyZWF0ZU5hbWVkQ29udGV4dCA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LlByb3ZpZGVyLmRpc3BsYXlOYW1lID0gbmFtZSArIFwiLlByb3ZpZGVyXCI7XG4gIGNvbnRleHQuQ29uc3VtZXIuZGlzcGxheU5hbWUgPSBuYW1lICsgXCIuQ29uc3VtZXJcIjtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgY29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQoJ1JvdXRlcicpO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBwdXR0aW5nIGhpc3Rvcnkgb24gY29udGV4dC5cbiAqL1xuXG52YXIgUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgUm91dGVyLmNvbXB1dGVSb290TWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlUm9vdE1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIFJvdXRlcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgbG9jYXRpb246IHByb3BzLmhpc3RvcnkubG9jYXRpb25cbiAgICB9OyAvLyBUaGlzIGlzIGEgYml0IG9mIGEgaGFjay4gV2UgaGF2ZSB0byBzdGFydCBsaXN0ZW5pbmcgZm9yIGxvY2F0aW9uXG4gICAgLy8gY2hhbmdlcyBoZXJlIGluIHRoZSBjb25zdHJ1Y3RvciBpbiBjYXNlIHRoZXJlIGFyZSBhbnkgPFJlZGlyZWN0PnNcbiAgICAvLyBvbiB0aGUgaW5pdGlhbCByZW5kZXIuIElmIHRoZXJlIGFyZSwgdGhleSB3aWxsIHJlcGxhY2UvcHVzaCB3aGVuXG4gICAgLy8gdGhleSBtb3VudCBhbmQgc2luY2UgY0RNIGZpcmVzIGluIGNoaWxkcmVuIGJlZm9yZSBwYXJlbnRzLCB3ZSBtYXlcbiAgICAvLyBnZXQgYSBuZXcgbG9jYXRpb24gYmVmb3JlIHRoZSA8Um91dGVyPiBpcyBtb3VudGVkLlxuXG4gICAgX3RoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBudWxsO1xuXG4gICAgaWYgKCFwcm9wcy5zdGF0aWNDb250ZXh0KSB7XG4gICAgICBfdGhpcy51bmxpc3RlbiA9IHByb3BzLmhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgICBpZiAoX3RoaXMuX2lzTW91bnRlZCkge1xuICAgICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLl9wZW5kaW5nTG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5faXNNb3VudGVkID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLl9wZW5kaW5nTG9jYXRpb24pIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBsb2NhdGlvbjogdGhpcy5fcGVuZGluZ0xvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5saXN0ZW4pIHRoaXMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGwsXG4gICAgICB2YWx1ZToge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBNZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciBMaWZlY3ljbGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGlmZWN5Y2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaWZlY3ljbGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IExpZmVjeWNsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIExpZmVjeWNsZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXkgZnJvbSBhIHNjcmVlbi5cbiAqL1xuXG5mdW5jdGlvbiBQcm9tcHQoX3JlZikge1xuICB2YXIgbWVzc2FnZSA9IF9yZWYubWVzc2FnZSxcbiAgICAgIF9yZWYkd2hlbiA9IF9yZWYud2hlbixcbiAgICAgIHdoZW4gPSBfcmVmJHdoZW4gPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHdoZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JCQxKSB7XG4gICAgIWNvbnRleHQkJDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgaWYgKCF3aGVuIHx8IGNvbnRleHQkJDEuc3RhdGljQ29udGV4dCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1ldGhvZCA9IGNvbnRleHQkJDEuaGlzdG9yeS5ibG9jaztcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1lc3NhZ2UgIT09IG1lc3NhZ2UpIHtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgfSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcbiAgUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcbiAgdmFyIGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXRoID0gXCIvXCI7XG4gIH1cblxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcbiAgICBwcmV0dHk6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcbiAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXG4gICAgICBwdXNoID0gX3JlZiRwdXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkcHVzaDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQkJDEpIHtcbiAgICAhY29udGV4dCQkMSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dCQkMS5oaXN0b3J5LFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gY29udGV4dCQkMS5zdGF0aWNDb250ZXh0O1xuICAgIHZhciBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgfSkgOiB0byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG5cbiAgICBpZiAoc3RhdGljQ29udGV4dCkge1xuICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIGlmICghbG9jYXRpb25zQXJlRXF1YWwocHJldlByb3BzLnRvLCBsb2NhdGlvbikpIHtcbiAgICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdG86IHRvXG4gICAgfSk7XG4gIH0pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBmcm9tOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSkuaXNSZXF1aXJlZFxuICB9O1xufVxuXG52YXIgY2FjaGUkMSA9IHt9O1xudmFyIGNhY2hlTGltaXQkMSA9IDEwMDAwO1xudmFyIGNhY2hlQ291bnQkMSA9IDA7XG5cbmZ1bmN0aW9uIGNvbXBpbGVQYXRoJDEocGF0aCwgb3B0aW9ucykge1xuICB2YXIgY2FjaGVLZXkgPSBcIlwiICsgb3B0aW9ucy5lbmQgKyBvcHRpb25zLnN0cmljdCArIG9wdGlvbnMuc2Vuc2l0aXZlO1xuICB2YXIgcGF0aENhY2hlID0gY2FjaGUkMVtjYWNoZUtleV0gfHwgKGNhY2hlJDFbY2FjaGVLZXldID0ge30pO1xuICBpZiAocGF0aENhY2hlW3BhdGhdKSByZXR1cm4gcGF0aENhY2hlW3BhdGhdO1xuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmVnZXhwID0gcGF0aFRvUmVnZXhwKHBhdGgsIGtleXMsIG9wdGlvbnMpO1xuICB2YXIgcmVzdWx0ID0ge1xuICAgIHJlZ2V4cDogcmVnZXhwLFxuICAgIGtleXM6IGtleXNcbiAgfTtcblxuICBpZiAoY2FjaGVDb3VudCQxIDwgY2FjaGVMaW1pdCQxKSB7XG4gICAgcGF0aENhY2hlW3BhdGhdID0gcmVzdWx0O1xuICAgIGNhY2hlQ291bnQkMSsrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogUHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBVUkwgcGF0aG5hbWUgdG8gYSBwYXRoLlxuICovXG5cblxuZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lLCBvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB2b2lkIDApIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIpIG9wdGlvbnMgPSB7XG4gICAgcGF0aDogb3B0aW9uc1xuICB9O1xuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG4gIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKG1hdGNoZWQsIHBhdGgpIHtcbiAgICBpZiAobWF0Y2hlZCkgcmV0dXJuIG1hdGNoZWQ7XG5cbiAgICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgkMShwYXRoLCB7XG4gICAgICBlbmQ6IGV4YWN0LFxuICAgICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZVxuICAgIH0pLFxuICAgICAgICByZWdleHAgPSBfY29tcGlsZVBhdGgucmVnZXhwLFxuICAgICAgICBrZXlzID0gX2NvbXBpbGVQYXRoLmtleXM7XG5cbiAgICB2YXIgbWF0Y2ggPSByZWdleHAuZXhlYyhwYXRobmFtZSk7XG4gICAgaWYgKCFtYXRjaCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIHVybCA9IG1hdGNoWzBdLFxuICAgICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcbiAgICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG4gICAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aDogcGF0aCxcbiAgICAgIC8vIHRoZSBwYXRoIHVzZWQgdG8gbWF0Y2hcbiAgICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsXG4gICAgICAvLyB0aGUgbWF0Y2hlZCBwb3J0aW9uIG9mIHRoZSBVUkxcbiAgICAgIGlzRXhhY3Q6IGlzRXhhY3QsXG4gICAgICAvLyB3aGV0aGVyIG9yIG5vdCB3ZSBtYXRjaGVkIGV4YWN0bHlcbiAgICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgICAgbWVtb1trZXkubmFtZV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICByZXR1cm4gbWVtbztcbiAgICAgIH0sIHt9KVxuICAgIH07XG4gIH0sIG51bGwpO1xufVxuXG5mdW5jdGlvbiBpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMDtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgc2luZ2xlIHBhdGggYW5kIHJlbmRlcmluZy5cbiAqL1xuXG5cbnZhciBSb3V0ZSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJvdXRlLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICAgIWNvbnRleHQkJDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkJDEubG9jYXRpb247XG4gICAgICB2YXIgbWF0Y2ggPSBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoID8gX3RoaXMucHJvcHMuY29tcHV0ZWRNYXRjaCAvLyA8U3dpdGNoPiBhbHJlYWR5IGNvbXB1dGVkIHRoZSBtYXRjaCBmb3IgdXNcbiAgICAgIDogX3RoaXMucHJvcHMucGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX3RoaXMucHJvcHMpIDogY29udGV4dCQkMS5tYXRjaDtcblxuICAgICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIGNvbnRleHQkJDEsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY2hpbGRyZW4gPSBjaGlsZHJlbihwcm9wcyk7XG5cbiAgICAgICAgaWYgKGNoaWxkcmVuID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgICB2YXIgcGF0aCA9IF90aGlzLnByb3BzLnBhdGg7XG4gICAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCBcIllvdSByZXR1cm5lZCBgdW5kZWZpbmVkYCBmcm9tIHRoZSBgY2hpbGRyZW5gIGZ1bmN0aW9uIG9mIFwiICsgKFwiPFJvdXRlXCIgKyAocGF0aCA/IFwiIHBhdGg9XFxcIlwiICsgcGF0aCArIFwiXFxcIlwiIDogXCJcIikgKyBcIj4sIGJ1dCB5b3UgXCIpICsgXCJzaG91bGQgaGF2ZSByZXR1cm5lZCBhIFJlYWN0IGVsZW1lbnQgb3IgYG51bGxgXCIpIDogdm9pZCAwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNoaWxkcmVuID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9wc1xuICAgICAgfSwgY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikgPyBjaGlsZHJlbiA6IHByb3BzLm1hdGNoID8gY29tcG9uZW50ID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBudWxsIDogbnVsbCk7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFJvdXRlLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gICAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQocHJvcHMsIHByb3BOYW1lKSB7XG4gICAgICBpZiAocHJvcHNbcHJvcE5hbWVdICYmICFpc1ZhbGlkRWxlbWVudFR5cGUocHJvcHNbcHJvcE5hbWVdKSkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wICdjb21wb25lbnQnIHN1cHBsaWVkIHRvICdSb3V0ZSc6IHRoZSBwcm9wIGlzIG5vdCBhIHZhbGlkIFJlYWN0IGNvbXBvbmVudFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGV4YWN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBwYXRoOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKV0pLFxuICAgIHJlbmRlcjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgc2Vuc2l0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sXG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5jb21wb25lbnQpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgY29tcG9uZW50PiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNoaWxkcmVuICYmICFpc0VtcHR5Q2hpbGRyZW4odGhpcy5wcm9wcy5jaGlsZHJlbikgJiYgdGhpcy5wcm9wcy5yZW5kZXIpLCBcIllvdSBzaG91bGQgbm90IHVzZSA8Um91dGUgcmVuZGVyPiBhbmQgPFJvdXRlIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmNvbXBvbmVudCAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgcmVuZGVyPiBpbiB0aGUgc2FtZSByb3V0ZTsgPFJvdXRlIHJlbmRlcj4gd2lsbCBiZSBpZ25vcmVkXCIpIDogdm9pZCAwO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gdW5jb250cm9sbGVkIHRvIGNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgaW5pdGlhbGx5IHVzZWQgbm8gXCJsb2NhdGlvblwiIHByb3AgYW5kIHRoZW4gcHJvdmlkZWQgb25lIG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJykgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKCF0aGlzLnByb3BzLmxvY2F0aW9uICYmIHByZXZQcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSBcIi9cIiA/IHBhdGggOiBcIi9cIiArIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICBwYXRobmFtZTogYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKSArIGxvY2F0aW9uLnBhdGhuYW1lXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdHJpcEJhc2VuYW1lKGJhc2VuYW1lLCBsb2NhdGlvbikge1xuICBpZiAoIWJhc2VuYW1lKSByZXR1cm4gbG9jYXRpb247XG4gIHZhciBiYXNlID0gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lKTtcbiAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoYmFzZSkgIT09IDApIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBsb2NhdGlvbi5wYXRobmFtZS5zdWJzdHIoYmFzZS5sZW5ndGgpXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVVUkwobG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiBsb2NhdGlvbiA9PT0gXCJzdHJpbmdcIiA/IGxvY2F0aW9uIDogY3JlYXRlUGF0aChsb2NhdGlvbik7XG59XG5cbmZ1bmN0aW9uIHN0YXRpY0hhbmRsZXIobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBub29wKCkge31cbi8qKlxuICogVGhlIHB1YmxpYyB0b3AtbGV2ZWwgQVBJIGZvciBhIFwic3RhdGljXCIgPFJvdXRlcj4sIHNvLWNhbGxlZCBiZWNhdXNlIGl0XG4gKiBjYW4ndCBhY3R1YWxseSBjaGFuZ2UgdGhlIGN1cnJlbnQgbG9jYXRpb24uIEluc3RlYWQsIGl0IGp1c3QgcmVjb3Jkc1xuICogbG9jYXRpb24gY2hhbmdlcyBpbiBhIGNvbnRleHQgb2JqZWN0LiBVc2VmdWwgbWFpbmx5IGluIHRlc3RpbmcgYW5kXG4gKiBzZXJ2ZXItcmVuZGVyaW5nIHNjZW5hcmlvcy5cbiAqL1xuXG5cbnZhciBTdGF0aWNSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3RhdGljUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTdGF0aWNSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5oYW5kbGVQdXNoID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJQVVNIXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVSZXBsYWNlID0gZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gICAgICByZXR1cm4gX3RoaXMubmF2aWdhdGVUbyhsb2NhdGlvbiwgXCJSRVBMQUNFXCIpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVMaXN0ZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlQmxvY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbm9vcDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0YXRpY1JvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLm5hdmlnYXRlVG8gPSBmdW5jdGlvbiBuYXZpZ2F0ZVRvKGxvY2F0aW9uLCBhY3Rpb24pIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9IF90aGlzJHByb3BzLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMkYmFzZW5hbWUsXG4gICAgICAgIGNvbnRleHQgPSBfdGhpcyRwcm9wcy5jb250ZXh0O1xuICAgIGNvbnRleHQuYWN0aW9uID0gYWN0aW9uO1xuICAgIGNvbnRleHQubG9jYXRpb24gPSBhZGRCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKTtcbiAgICBjb250ZXh0LnVybCA9IGNyZWF0ZVVSTChjb250ZXh0LmxvY2F0aW9uKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICBfdGhpcyRwcm9wczIkYmFzZW5hbWUgPSBfdGhpcyRwcm9wczIuYmFzZW5hbWUsXG4gICAgICAgIGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyJGJhc2VuYW1lID09PSB2b2lkIDAgPyBcIlwiIDogX3RoaXMkcHJvcHMyJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wczIkY29udGV4dCA9IF90aGlzJHByb3BzMi5jb250ZXh0LFxuICAgICAgICBjb250ZXh0ID0gX3RoaXMkcHJvcHMyJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMyJGNvbnRleHQsXG4gICAgICAgIF90aGlzJHByb3BzMiRsb2NhdGlvbiA9IF90aGlzJHByb3BzMi5sb2NhdGlvbixcbiAgICAgICAgbG9jYXRpb24gPSBfdGhpcyRwcm9wczIkbG9jYXRpb24gPT09IHZvaWQgMCA/IFwiL1wiIDogX3RoaXMkcHJvcHMyJGxvY2F0aW9uLFxuICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMyLCBbXCJiYXNlbmFtZVwiLCBcImNvbnRleHRcIiwgXCJsb2NhdGlvblwiXSk7XG5cbiAgICB2YXIgaGlzdG9yeSA9IHtcbiAgICAgIGNyZWF0ZUhyZWY6IGZ1bmN0aW9uIGNyZWF0ZUhyZWYocGF0aCkge1xuICAgICAgICByZXR1cm4gYWRkTGVhZGluZ1NsYXNoKGJhc2VuYW1lICsgY3JlYXRlVVJMKHBhdGgpKTtcbiAgICAgIH0sXG4gICAgICBhY3Rpb246IFwiUE9QXCIsXG4gICAgICBsb2NhdGlvbjogc3RyaXBCYXNlbmFtZShiYXNlbmFtZSwgY3JlYXRlTG9jYXRpb24obG9jYXRpb24pKSxcbiAgICAgIHB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIHJlcGxhY2U6IHRoaXMuaGFuZGxlUmVwbGFjZSxcbiAgICAgIGdvOiBzdGF0aWNIYW5kbGVyKFwiZ29cIiksXG4gICAgICBnb0JhY2s6IHN0YXRpY0hhbmRsZXIoXCJnb0JhY2tcIiksXG4gICAgICBnb0ZvcndhcmQ6IHN0YXRpY0hhbmRsZXIoXCJnb0ZvcndhcmRcIiksXG4gICAgICBsaXN0ZW46IHRoaXMuaGFuZGxlTGlzdGVuLFxuICAgICAgYmxvY2s6IHRoaXMuaGFuZGxlQmxvY2tcbiAgICB9O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgIGhpc3Rvcnk6IGhpc3RvcnksXG4gICAgICBzdGF0aWNDb250ZXh0OiBjb250ZXh0XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBTdGF0aWNSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgU3RhdGljUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgfTtcblxuICBTdGF0aWNSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8U3RhdGljUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgU3RhdGljUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyB0aGUgZmlyc3QgPFJvdXRlPiB0aGF0IG1hdGNoZXMuXG4gKi9cblxudmFyIFN3aXRjaCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShTd2l0Y2gsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN3aXRjaCgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3dpdGNoLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCQkMSkge1xuICAgICAgIWNvbnRleHQkJDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxTd2l0Y2g+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB2YXIgbG9jYXRpb24gPSBfdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCBjb250ZXh0JCQxLmxvY2F0aW9uO1xuICAgICAgdmFyIGVsZW1lbnQsIG1hdGNoOyAvLyBXZSB1c2UgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaCBpbnN0ZWFkIG9mIFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoKS5maW5kKClcbiAgICAgIC8vIGhlcmUgYmVjYXVzZSB0b0FycmF5IGFkZHMga2V5cyB0byBhbGwgY2hpbGQgZWxlbWVudHMgYW5kIHdlIGRvIG5vdCB3YW50XG4gICAgICAvLyB0byB0cmlnZ2VyIGFuIHVubW91bnQvcmVtb3VudCBmb3IgdHdvIDxSb3V0ZT5zIHRoYXQgcmVuZGVyIHRoZSBzYW1lXG4gICAgICAvLyBjb21wb25lbnQgYXQgZGlmZmVyZW50IFVSTHMuXG5cbiAgICAgIFJlYWN0LkNoaWxkcmVuLmZvckVhY2goX3RoaXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZCkpIHtcbiAgICAgICAgICBlbGVtZW50ID0gY2hpbGQ7XG4gICAgICAgICAgdmFyIHBhdGggPSBjaGlsZC5wcm9wcy5wYXRoIHx8IGNoaWxkLnByb3BzLmZyb207XG4gICAgICAgICAgbWF0Y2ggPSBwYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfZXh0ZW5kcyh7fSwgY2hpbGQucHJvcHMsIHtcbiAgICAgICAgICAgIHBhdGg6IHBhdGhcbiAgICAgICAgICB9KSkgOiBjb250ZXh0JCQxLm1hdGNoO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBtYXRjaCA/IFJlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCB7XG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgY29tcHV0ZWRNYXRjaDogbWF0Y2hcbiAgICAgIH0pIDogbnVsbDtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gU3dpdGNoO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN3aXRjaC5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiAocHJldlByb3BzKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMubG9jYXRpb24gJiYgIXByZXZQcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISghdGhpcy5wcm9wcy5sb2NhdGlvbiAmJiBwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIEEgcHVibGljIGhpZ2hlci1vcmRlciBjb21wb25lbnQgdG8gYWNjZXNzIHRoZSBpbXBlcmF0aXZlIEFQSVxuICovXG5cbmZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9uZW50KSB7XG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwge1xuICAgICAgY2hpbGRyZW46IGZ1bmN0aW9uIGNoaWxkcmVuKHJvdXRlQ29tcG9uZW50UHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgcmVtYWluaW5nUHJvcHMsIHJvdXRlQ29tcG9uZW50UHJvcHMsIHtcbiAgICAgICAgICByZWY6IHdyYXBwZWRDb21wb25lbnRSZWZcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuICBDLldyYXBwZWRDb21wb25lbnQgPSBDb21wb25lbnQ7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIEMucHJvcFR5cGVzID0ge1xuICAgICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLmZ1bmNcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIGdsb2JhbCA9IHdpbmRvdztcbiAgICB2YXIga2V5ID0gXCJfX3JlYWN0X3JvdXRlcl9idWlsZF9fXCI7XG4gICAgdmFyIGJ1aWxkTmFtZXMgPSB7XG4gICAgICBjanM6IFwiQ29tbW9uSlNcIixcbiAgICAgIGVzbTogXCJFUyBtb2R1bGVzXCIsXG4gICAgICB1bWQ6IFwiVU1EXCJcbiAgICB9O1xuXG4gICAgaWYgKGdsb2JhbFtrZXldICYmIGdsb2JhbFtrZXldICE9PSBcImVzbVwiKSB7XG4gICAgICB2YXIgaW5pdGlhbEJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbZ2xvYmFsW2tleV1dO1xuICAgICAgdmFyIHNlY29uZGFyeUJ1aWxkTmFtZSA9IGJ1aWxkTmFtZXNbXCJlc21cIl07IC8vIFRPRE86IEFkZCBsaW5rIHRvIGFydGljbGUgdGhhdCBleHBsYWlucyBpbiBkZXRhaWwgaG93IHRvIGF2b2lkXG4gICAgICAvLyBsb2FkaW5nIDIgZGlmZmVyZW50IGJ1aWxkcy5cblxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IGFyZSBsb2FkaW5nIHRoZSBcIiArIHNlY29uZGFyeUJ1aWxkTmFtZSArIFwiIGJ1aWxkIG9mIFJlYWN0IFJvdXRlciBcIiArIChcIm9uIGEgcGFnZSB0aGF0IGlzIGFscmVhZHkgcnVubmluZyB0aGUgXCIgKyBpbml0aWFsQnVpbGROYW1lICsgXCIgXCIpICsgXCJidWlsZCwgc28gdGhpbmdzIHdvbid0IHdvcmsgcmlnaHQuXCIpO1xuICAgIH1cblxuICAgIGdsb2JhbFtrZXldID0gXCJlc21cIjtcbiAgfVxufVxuXG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgd2l0aFJvdXRlciwgY29udGV4dCBhcyBfX1JvdXRlckNvbnRleHQgfTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gICAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gICAgY29udGV4dFR5cGU6IHRydWUsXG4gICAgY29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICAgIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgICBtaXhpbnM6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlLFxuICAgIHR5cGU6IHRydWVcbn07XG5cbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICAgIG5hbWU6IHRydWUsXG4gICAgbGVuZ3RoOiB0cnVlLFxuICAgIHByb3RvdHlwZTogdHJ1ZSxcbiAgICBjYWxsZXI6IHRydWUsXG4gICAgY2FsbGVlOiB0cnVlLFxuICAgIGFyZ3VtZW50czogdHJ1ZSxcbiAgICBhcml0eTogdHJ1ZVxufTtcblxudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgICByZW5kZXI6IHRydWUsXG4gICAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgIHByb3BUeXBlczogdHJ1ZVxufTtcblxudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgICAnJCR0eXBlb2YnOiB0cnVlLFxuICAgIGNvbXBhcmU6IHRydWUsXG4gICAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgIHByb3BUeXBlczogdHJ1ZSxcbiAgICB0eXBlOiB0cnVlXG59O1xuXG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbUmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gICAgaWYgKFJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICAgICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgICB9XG4gICAgcmV0dXJuIFRZUEVfU1RBVElDU1tjb21wb25lbnRbJyQkdHlwZW9mJ11dIHx8IFJFQUNUX1NUQVRJQ1M7XG59XG5cbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xudmFyIG9iamVjdFByb3RvdHlwZSA9IE9iamVjdC5wcm90b3R5cGU7XG5cbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcblxuICAgICAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcbiAgICAgICAgICAgIGlmIChpbmhlcml0ZWRDb21wb25lbnQgJiYgaW5oZXJpdGVkQ29tcG9uZW50ICE9PSBvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgICAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICAgICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJpbXBvcnQgJCRvYnNlcnZhYmxlIGZyb20gJ3N5bWJvbC1vYnNlcnZhYmxlJztcblxuLyoqXG4gKiBUaGVzZSBhcmUgcHJpdmF0ZSBhY3Rpb24gdHlwZXMgcmVzZXJ2ZWQgYnkgUmVkdXguXG4gKiBGb3IgYW55IHVua25vd24gYWN0aW9ucywgeW91IG11c3QgcmV0dXJuIHRoZSBjdXJyZW50IHN0YXRlLlxuICogSWYgdGhlIGN1cnJlbnQgc3RhdGUgaXMgdW5kZWZpbmVkLCB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUuXG4gKiBEbyBub3QgcmVmZXJlbmNlIHRoZXNlIGFjdGlvbiB0eXBlcyBkaXJlY3RseSBpbiB5b3VyIGNvZGUuXG4gKi9cbnZhciByYW5kb21TdHJpbmcgPSBmdW5jdGlvbiByYW5kb21TdHJpbmcoKSB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNykuc3BsaXQoJycpLmpvaW4oJy4nKTtcbn07XG5cbnZhciBBY3Rpb25UeXBlcyA9IHtcbiAgSU5JVDogXCJAQHJlZHV4L0lOSVRcIiArIHJhbmRvbVN0cmluZygpLFxuICBSRVBMQUNFOiBcIkBAcmVkdXgvUkVQTEFDRVwiICsgcmFuZG9tU3RyaW5nKCksXG4gIFBST0JFX1VOS05PV05fQUNUSU9OOiBmdW5jdGlvbiBQUk9CRV9VTktOT1dOX0FDVElPTigpIHtcbiAgICByZXR1cm4gXCJAQHJlZHV4L1BST0JFX1VOS05PV05fQUNUSU9OXCIgKyByYW5kb21TdHJpbmcoKTtcbiAgfVxufTtcblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gb2JqIFRoZSBvYmplY3QgdG8gaW5zcGVjdC5cbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBhcmd1bWVudCBhcHBlYXJzIHRvIGJlIGEgcGxhaW4gb2JqZWN0LlxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KG9iaikge1xuICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcgfHwgb2JqID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gIHZhciBwcm90byA9IG9iajtcblxuICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKHByb3RvKSAhPT0gbnVsbCkge1xuICAgIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHByb3RvKTtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqKSA9PT0gcHJvdG87XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIFJlZHV4IHN0b3JlIHRoYXQgaG9sZHMgdGhlIHN0YXRlIHRyZWUuXG4gKiBUaGUgb25seSB3YXkgdG8gY2hhbmdlIHRoZSBkYXRhIGluIHRoZSBzdG9yZSBpcyB0byBjYWxsIGBkaXNwYXRjaCgpYCBvbiBpdC5cbiAqXG4gKiBUaGVyZSBzaG91bGQgb25seSBiZSBhIHNpbmdsZSBzdG9yZSBpbiB5b3VyIGFwcC4gVG8gc3BlY2lmeSBob3cgZGlmZmVyZW50XG4gKiBwYXJ0cyBvZiB0aGUgc3RhdGUgdHJlZSByZXNwb25kIHRvIGFjdGlvbnMsIHlvdSBtYXkgY29tYmluZSBzZXZlcmFsIHJlZHVjZXJzXG4gKiBpbnRvIGEgc2luZ2xlIHJlZHVjZXIgZnVuY3Rpb24gYnkgdXNpbmcgYGNvbWJpbmVSZWR1Y2Vyc2AuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVkdWNlciBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgbmV4dCBzdGF0ZSB0cmVlLCBnaXZlblxuICogdGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBhbmQgdGhlIGFjdGlvbiB0byBoYW5kbGUuXG4gKlxuICogQHBhcmFtIHthbnl9IFtwcmVsb2FkZWRTdGF0ZV0gVGhlIGluaXRpYWwgc3RhdGUuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBoeWRyYXRlIHRoZSBzdGF0ZSBmcm9tIHRoZSBzZXJ2ZXIgaW4gdW5pdmVyc2FsIGFwcHMsIG9yIHRvIHJlc3RvcmUgYVxuICogcHJldmlvdXNseSBzZXJpYWxpemVkIHVzZXIgc2Vzc2lvbi5cbiAqIElmIHlvdSB1c2UgYGNvbWJpbmVSZWR1Y2Vyc2AgdG8gcHJvZHVjZSB0aGUgcm9vdCByZWR1Y2VyIGZ1bmN0aW9uLCB0aGlzIG11c3QgYmVcbiAqIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlIGFzIGBjb21iaW5lUmVkdWNlcnNgIGtleXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2VuaGFuY2VyXSBUaGUgc3RvcmUgZW5oYW5jZXIuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBlbmhhbmNlIHRoZSBzdG9yZSB3aXRoIHRoaXJkLXBhcnR5IGNhcGFiaWxpdGllcyBzdWNoIGFzIG1pZGRsZXdhcmUsXG4gKiB0aW1lIHRyYXZlbCwgcGVyc2lzdGVuY2UsIGV0Yy4gVGhlIG9ubHkgc3RvcmUgZW5oYW5jZXIgdGhhdCBzaGlwcyB3aXRoIFJlZHV4XG4gKiBpcyBgYXBwbHlNaWRkbGV3YXJlKClgLlxuICpcbiAqIEByZXR1cm5zIHtTdG9yZX0gQSBSZWR1eCBzdG9yZSB0aGF0IGxldHMgeW91IHJlYWQgdGhlIHN0YXRlLCBkaXNwYXRjaCBhY3Rpb25zXG4gKiBhbmQgc3Vic2NyaWJlIHRvIGNoYW5nZXMuXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gIHZhciBfcmVmMjtcblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGFyZ3VtZW50c1szXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignSXQgbG9va3MgbGlrZSB5b3UgYXJlIHBhc3Npbmcgc2V2ZXJhbCBzdG9yZSBlbmhhbmNlcnMgdG8gJyArICdjcmVhdGVTdG9yZSgpLiBUaGlzIGlzIG5vdCBzdXBwb3J0ZWQuIEluc3RlYWQsIGNvbXBvc2UgdGhlbSAnICsgJ3RvZ2V0aGVyIHRvIGEgc2luZ2xlIGZ1bmN0aW9uJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbmhhbmNlciA9IHByZWxvYWRlZFN0YXRlO1xuICAgIHByZWxvYWRlZFN0YXRlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSBlbmhhbmNlciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIHJldHVybiBlbmhhbmNlcihjcmVhdGVTdG9yZSkocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiByZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgcmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdmFyIGN1cnJlbnRSZWR1Y2VyID0gcmVkdWNlcjtcbiAgdmFyIGN1cnJlbnRTdGF0ZSA9IHByZWxvYWRlZFN0YXRlO1xuICB2YXIgY3VycmVudExpc3RlbmVycyA9IFtdO1xuICB2YXIgbmV4dExpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnM7XG4gIHZhciBpc0Rpc3BhdGNoaW5nID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpIHtcbiAgICBpZiAobmV4dExpc3RlbmVycyA9PT0gY3VycmVudExpc3RlbmVycykge1xuICAgICAgbmV4dExpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnMuc2xpY2UoKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIFJlYWRzIHRoZSBzdGF0ZSB0cmVlIG1hbmFnZWQgYnkgdGhlIHN0b3JlLlxuICAgKlxuICAgKiBAcmV0dXJucyB7YW55fSBUaGUgY3VycmVudCBzdGF0ZSB0cmVlIG9mIHlvdXIgYXBwbGljYXRpb24uXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZ2V0U3RhdGUoKSB7XG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgY2hhbmdlIGxpc3RlbmVyLiBJdCB3aWxsIGJlIGNhbGxlZCBhbnkgdGltZSBhbiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCxcbiAgICogYW5kIHNvbWUgcGFydCBvZiB0aGUgc3RhdGUgdHJlZSBtYXkgcG90ZW50aWFsbHkgaGF2ZSBjaGFuZ2VkLiBZb3UgbWF5IHRoZW5cbiAgICogY2FsbCBgZ2V0U3RhdGUoKWAgdG8gcmVhZCB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGluc2lkZSB0aGUgY2FsbGJhY2suXG4gICAqXG4gICAqIFlvdSBtYXkgY2FsbCBgZGlzcGF0Y2goKWAgZnJvbSBhIGNoYW5nZSBsaXN0ZW5lciwgd2l0aCB0aGUgZm9sbG93aW5nXG4gICAqIGNhdmVhdHM6XG4gICAqXG4gICAqIDEuIFRoZSBzdWJzY3JpcHRpb25zIGFyZSBzbmFwc2hvdHRlZCBqdXN0IGJlZm9yZSBldmVyeSBgZGlzcGF0Y2goKWAgY2FsbC5cbiAgICogSWYgeW91IHN1YnNjcmliZSBvciB1bnN1YnNjcmliZSB3aGlsZSB0aGUgbGlzdGVuZXJzIGFyZSBiZWluZyBpbnZva2VkLCB0aGlzXG4gICAqIHdpbGwgbm90IGhhdmUgYW55IGVmZmVjdCBvbiB0aGUgYGRpc3BhdGNoKClgIHRoYXQgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgKiBIb3dldmVyLCB0aGUgbmV4dCBgZGlzcGF0Y2goKWAgY2FsbCwgd2hldGhlciBuZXN0ZWQgb3Igbm90LCB3aWxsIHVzZSBhIG1vcmVcbiAgICogcmVjZW50IHNuYXBzaG90IG9mIHRoZSBzdWJzY3JpcHRpb24gbGlzdC5cbiAgICpcbiAgICogMi4gVGhlIGxpc3RlbmVyIHNob3VsZCBub3QgZXhwZWN0IHRvIHNlZSBhbGwgc3RhdGUgY2hhbmdlcywgYXMgdGhlIHN0YXRlXG4gICAqIG1pZ2h0IGhhdmUgYmVlbiB1cGRhdGVkIG11bHRpcGxlIHRpbWVzIGR1cmluZyBhIG5lc3RlZCBgZGlzcGF0Y2goKWAgYmVmb3JlXG4gICAqIHRoZSBsaXN0ZW5lciBpcyBjYWxsZWQuIEl0IGlzLCBob3dldmVyLCBndWFyYW50ZWVkIHRoYXQgYWxsIHN1YnNjcmliZXJzXG4gICAqIHJlZ2lzdGVyZWQgYmVmb3JlIHRoZSBgZGlzcGF0Y2goKWAgc3RhcnRlZCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZSBsYXRlc3RcbiAgICogc3RhdGUgYnkgdGhlIHRpbWUgaXQgZXhpdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyIEEgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBvbiBldmVyeSBkaXNwYXRjaC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRvIHJlbW92ZSB0aGlzIGNoYW5nZSBsaXN0ZW5lci5cbiAgICovXG5cblxuICBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSBsaXN0ZW5lciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtYXkgbm90IGNhbGwgc3RvcmUuc3Vic2NyaWJlKCkgd2hpbGUgdGhlIHJlZHVjZXIgaXMgZXhlY3V0aW5nLiAnICsgJ0lmIHlvdSB3b3VsZCBsaWtlIHRvIGJlIG5vdGlmaWVkIGFmdGVyIHRoZSBzdG9yZSBoYXMgYmVlbiB1cGRhdGVkLCBzdWJzY3JpYmUgZnJvbSBhICcgKyAnY29tcG9uZW50IGFuZCBpbnZva2Ugc3RvcmUuZ2V0U3RhdGUoKSBpbiB0aGUgY2FsbGJhY2sgdG8gYWNjZXNzIHRoZSBsYXRlc3Qgc3RhdGUuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS1yZWZlcmVuY2Uvc3RvcmUjc3Vic2NyaWJlKGxpc3RlbmVyKSBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgIH1cblxuICAgIHZhciBpc1N1YnNjcmliZWQgPSB0cnVlO1xuICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICBuZXh0TGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiB1bnN1YnNjcmliZSgpIHtcbiAgICAgIGlmICghaXNTdWJzY3JpYmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbWF5IG5vdCB1bnN1YnNjcmliZSBmcm9tIGEgc3RvcmUgbGlzdGVuZXIgd2hpbGUgdGhlIHJlZHVjZXIgaXMgZXhlY3V0aW5nLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGktcmVmZXJlbmNlL3N0b3JlI3N1YnNjcmliZShsaXN0ZW5lcikgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICAgIH1cblxuICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG4gICAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgICB2YXIgaW5kZXggPSBuZXh0TGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpO1xuICAgICAgbmV4dExpc3RlbmVycy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH07XG4gIH1cbiAgLyoqXG4gICAqIERpc3BhdGNoZXMgYW4gYWN0aW9uLiBJdCBpcyB0aGUgb25seSB3YXkgdG8gdHJpZ2dlciBhIHN0YXRlIGNoYW5nZS5cbiAgICpcbiAgICogVGhlIGByZWR1Y2VyYCBmdW5jdGlvbiwgdXNlZCB0byBjcmVhdGUgdGhlIHN0b3JlLCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZVxuICAgKiBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBnaXZlbiBgYWN0aW9uYC4gSXRzIHJldHVybiB2YWx1ZSB3aWxsXG4gICAqIGJlIGNvbnNpZGVyZWQgdGhlICoqbmV4dCoqIHN0YXRlIG9mIHRoZSB0cmVlLCBhbmQgdGhlIGNoYW5nZSBsaXN0ZW5lcnNcbiAgICogd2lsbCBiZSBub3RpZmllZC5cbiAgICpcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb25seSBzdXBwb3J0cyBwbGFpbiBvYmplY3QgYWN0aW9ucy4gSWYgeW91IHdhbnQgdG9cbiAgICogZGlzcGF0Y2ggYSBQcm9taXNlLCBhbiBPYnNlcnZhYmxlLCBhIHRodW5rLCBvciBzb21ldGhpbmcgZWxzZSwgeW91IG5lZWQgdG9cbiAgICogd3JhcCB5b3VyIHN0b3JlIGNyZWF0aW5nIGZ1bmN0aW9uIGludG8gdGhlIGNvcnJlc3BvbmRpbmcgbWlkZGxld2FyZS4gRm9yXG4gICAqIGV4YW1wbGUsIHNlZSB0aGUgZG9jdW1lbnRhdGlvbiBmb3IgdGhlIGByZWR1eC10aHVua2AgcGFja2FnZS4gRXZlbiB0aGVcbiAgICogbWlkZGxld2FyZSB3aWxsIGV2ZW50dWFsbHkgZGlzcGF0Y2ggcGxhaW4gb2JqZWN0IGFjdGlvbnMgdXNpbmcgdGhpcyBtZXRob2QuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBhY3Rpb24gQSBwbGFpbiBvYmplY3QgcmVwcmVzZW50aW5nIOKAnHdoYXQgY2hhbmdlZOKAnS4gSXQgaXNcbiAgICogYSBnb29kIGlkZWEgdG8ga2VlcCBhY3Rpb25zIHNlcmlhbGl6YWJsZSBzbyB5b3UgY2FuIHJlY29yZCBhbmQgcmVwbGF5IHVzZXJcbiAgICogc2Vzc2lvbnMsIG9yIHVzZSB0aGUgdGltZSB0cmF2ZWxsaW5nIGByZWR1eC1kZXZ0b29sc2AuIEFuIGFjdGlvbiBtdXN0IGhhdmVcbiAgICogYSBgdHlwZWAgcHJvcGVydHkgd2hpY2ggbWF5IG5vdCBiZSBgdW5kZWZpbmVkYC4gSXQgaXMgYSBnb29kIGlkZWEgdG8gdXNlXG4gICAqIHN0cmluZyBjb25zdGFudHMgZm9yIGFjdGlvbiB0eXBlcy5cbiAgICpcbiAgICogQHJldHVybnMge09iamVjdH0gRm9yIGNvbnZlbmllbmNlLCB0aGUgc2FtZSBhY3Rpb24gb2JqZWN0IHlvdSBkaXNwYXRjaGVkLlxuICAgKlxuICAgKiBOb3RlIHRoYXQsIGlmIHlvdSB1c2UgYSBjdXN0b20gbWlkZGxld2FyZSwgaXQgbWF5IHdyYXAgYGRpc3BhdGNoKClgIHRvXG4gICAqIHJldHVybiBzb21ldGhpbmcgZWxzZSAoZm9yIGV4YW1wbGUsIGEgUHJvbWlzZSB5b3UgY2FuIGF3YWl0KS5cbiAgICovXG5cblxuICBmdW5jdGlvbiBkaXNwYXRjaChhY3Rpb24pIHtcbiAgICBpZiAoIWlzUGxhaW5PYmplY3QoYWN0aW9uKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBY3Rpb25zIG11c3QgYmUgcGxhaW4gb2JqZWN0cy4gJyArICdVc2UgY3VzdG9tIG1pZGRsZXdhcmUgZm9yIGFzeW5jIGFjdGlvbnMuJyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb24udHlwZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWN0aW9ucyBtYXkgbm90IGhhdmUgYW4gdW5kZWZpbmVkIFwidHlwZVwiIHByb3BlcnR5LiAnICsgJ0hhdmUgeW91IG1pc3NwZWxsZWQgYSBjb25zdGFudD8nKTtcbiAgICB9XG5cbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZWR1Y2VycyBtYXkgbm90IGRpc3BhdGNoIGFjdGlvbnMuJyk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSB0cnVlO1xuICAgICAgY3VycmVudFN0YXRlID0gY3VycmVudFJlZHVjZXIoY3VycmVudFN0YXRlLCBhY3Rpb24pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpc0Rpc3BhdGNoaW5nID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIGxpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnMgPSBuZXh0TGlzdGVuZXJzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXTtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjdGlvbjtcbiAgfVxuICAvKipcbiAgICogUmVwbGFjZXMgdGhlIHJlZHVjZXIgY3VycmVudGx5IHVzZWQgYnkgdGhlIHN0b3JlIHRvIGNhbGN1bGF0ZSB0aGUgc3RhdGUuXG4gICAqXG4gICAqIFlvdSBtaWdodCBuZWVkIHRoaXMgaWYgeW91ciBhcHAgaW1wbGVtZW50cyBjb2RlIHNwbGl0dGluZyBhbmQgeW91IHdhbnQgdG9cbiAgICogbG9hZCBzb21lIG9mIHRoZSByZWR1Y2VycyBkeW5hbWljYWxseS4gWW91IG1pZ2h0IGFsc28gbmVlZCB0aGlzIGlmIHlvdVxuICAgKiBpbXBsZW1lbnQgYSBob3QgcmVsb2FkaW5nIG1lY2hhbmlzbSBmb3IgUmVkdXguXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IG5leHRSZWR1Y2VyIFRoZSByZWR1Y2VyIGZvciB0aGUgc3RvcmUgdG8gdXNlIGluc3RlYWQuXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIHJlcGxhY2VSZWR1Y2VyKG5leHRSZWR1Y2VyKSB7XG4gICAgaWYgKHR5cGVvZiBuZXh0UmVkdWNlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgbmV4dFJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBjdXJyZW50UmVkdWNlciA9IG5leHRSZWR1Y2VyO1xuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0VcbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb2JzZXJ2YWJsZSgpIHtcbiAgICB2YXIgX3JlZjtcblxuICAgIHZhciBvdXRlclN1YnNjcmliZSA9IHN1YnNjcmliZTtcbiAgICByZXR1cm4gX3JlZiA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIG1pbmltYWwgb2JzZXJ2YWJsZSBzdWJzY3JpcHRpb24gbWV0aG9kLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9ic2VydmVyIEFueSBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiBvYnNlcnZlci5cbiAgICAgICAqIFRoZSBvYnNlcnZlciBvYmplY3Qgc2hvdWxkIGhhdmUgYSBgbmV4dGAgbWV0aG9kLlxuICAgICAgICogQHJldHVybnMge3N1YnNjcmlwdGlvbn0gQW4gb2JqZWN0IHdpdGggYW4gYHVuc3Vic2NyaWJlYCBtZXRob2QgdGhhdCBjYW5cbiAgICAgICAqIGJlIHVzZWQgdG8gdW5zdWJzY3JpYmUgdGhlIG9ic2VydmFibGUgZnJvbSB0aGUgc3RvcmUsIGFuZCBwcmV2ZW50IGZ1cnRoZXJcbiAgICAgICAqIGVtaXNzaW9uIG9mIHZhbHVlcyBmcm9tIHRoZSBvYnNlcnZhYmxlLlxuICAgICAgICovXG4gICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIHRoZSBvYnNlcnZlciB0byBiZSBhbiBvYmplY3QuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSwgX3JlZlskJG9ic2VydmFibGVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSwgX3JlZjtcbiAgfSAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cblxuXG4gIGRpc3BhdGNoKHtcbiAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gIH0pO1xuICByZXR1cm4gX3JlZjIgPSB7XG4gICAgZGlzcGF0Y2g6IGRpc3BhdGNoLFxuICAgIHN1YnNjcmliZTogc3Vic2NyaWJlLFxuICAgIGdldFN0YXRlOiBnZXRTdGF0ZSxcbiAgICByZXBsYWNlUmVkdWNlcjogcmVwbGFjZVJlZHVjZXJcbiAgfSwgX3JlZjJbJCRvYnNlcnZhYmxlXSA9IG9ic2VydmFibGUsIF9yZWYyO1xufVxuXG4vKipcbiAqIFByaW50cyBhIHdhcm5pbmcgaW4gdGhlIGNvbnNvbGUgaWYgaXQgZXhpc3RzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlIFRoZSB3YXJuaW5nIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG5cblxuICB0cnkge1xuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgaWYgeW91IGVuYWJsZVxuICAgIC8vIFwiYnJlYWsgb24gYWxsIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIGNvbnNvbGUsXG4gICAgLy8gaXQgd291bGQgcGF1c2UgdGhlIGV4ZWN1dGlvbiBhdCB0aGlzIGxpbmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICB9IGNhdGNoIChlKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG5cbn1cblxuZnVuY3Rpb24gZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2Uoa2V5LCBhY3Rpb24pIHtcbiAgdmFyIGFjdGlvblR5cGUgPSBhY3Rpb24gJiYgYWN0aW9uLnR5cGU7XG4gIHZhciBhY3Rpb25EZXNjcmlwdGlvbiA9IGFjdGlvblR5cGUgJiYgXCJhY3Rpb24gXFxcIlwiICsgU3RyaW5nKGFjdGlvblR5cGUpICsgXCJcXFwiXCIgfHwgJ2FuIGFjdGlvbic7XG4gIHJldHVybiBcIkdpdmVuIFwiICsgYWN0aW9uRGVzY3JpcHRpb24gKyBcIiwgcmVkdWNlciBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkLiBcIiArIFwiVG8gaWdub3JlIGFuIGFjdGlvbiwgeW91IG11c3QgZXhwbGljaXRseSByZXR1cm4gdGhlIHByZXZpb3VzIHN0YXRlLiBcIiArIFwiSWYgeW91IHdhbnQgdGhpcyByZWR1Y2VyIHRvIGhvbGQgbm8gdmFsdWUsIHlvdSBjYW4gcmV0dXJuIG51bGwgaW5zdGVhZCBvZiB1bmRlZmluZWQuXCI7XG59XG5cbmZ1bmN0aW9uIGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2UoaW5wdXRTdGF0ZSwgcmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGFyZ3VtZW50TmFtZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuSU5JVCA/ICdwcmVsb2FkZWRTdGF0ZSBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlU3RvcmUnIDogJ3ByZXZpb3VzIHN0YXRlIHJlY2VpdmVkIGJ5IHRoZSByZWR1Y2VyJztcblxuICBpZiAocmVkdWNlcktleXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdTdG9yZSBkb2VzIG5vdCBoYXZlIGEgdmFsaWQgcmVkdWNlci4gTWFrZSBzdXJlIHRoZSBhcmd1bWVudCBwYXNzZWQgJyArICd0byBjb21iaW5lUmVkdWNlcnMgaXMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgcmVkdWNlcnMuJztcbiAgfVxuXG4gIGlmICghaXNQbGFpbk9iamVjdChpbnB1dFN0YXRlKSkge1xuICAgIHJldHVybiBcIlRoZSBcIiArIGFyZ3VtZW50TmFtZSArIFwiIGhhcyB1bmV4cGVjdGVkIHR5cGUgb2YgXFxcIlwiICsge30udG9TdHJpbmcuY2FsbChpbnB1dFN0YXRlKS5tYXRjaCgvXFxzKFthLXp8QS1aXSspLylbMV0gKyBcIlxcXCIuIEV4cGVjdGVkIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgXCIgKyAoXCJrZXlzOiBcXFwiXCIgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHZhciB1bmV4cGVjdGVkS2V5cyA9IE9iamVjdC5rZXlzKGlucHV0U3RhdGUpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICFyZWR1Y2Vycy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICF1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XTtcbiAgfSk7XG4gIHVuZXhwZWN0ZWRLZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZVtrZXldID0gdHJ1ZTtcbiAgfSk7XG4gIGlmIChhY3Rpb24gJiYgYWN0aW9uLnR5cGUgPT09IEFjdGlvblR5cGVzLlJFUExBQ0UpIHJldHVybjtcblxuICBpZiAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBcIlVuZXhwZWN0ZWQgXCIgKyAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMSA/ICdrZXlzJyA6ICdrZXknKSArIFwiIFwiICsgKFwiXFxcIlwiICsgdW5leHBlY3RlZEtleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIgZm91bmQgaW4gXCIgKyBhcmd1bWVudE5hbWUgKyBcIi4gXCIpICsgXCJFeHBlY3RlZCB0byBmaW5kIG9uZSBvZiB0aGUga25vd24gcmVkdWNlciBrZXlzIGluc3RlYWQ6IFwiICsgKFwiXFxcIlwiICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIuIFVuZXhwZWN0ZWQga2V5cyB3aWxsIGJlIGlnbm9yZWQuXCIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydFJlZHVjZXJTaGFwZShyZWR1Y2Vycykge1xuICBPYmplY3Qua2V5cyhyZWR1Y2VycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHJlZHVjZXIgPSByZWR1Y2Vyc1trZXldO1xuICAgIHZhciBpbml0aWFsU3RhdGUgPSByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuSU5JVFxuICAgIH0pO1xuXG4gICAgaWYgKHR5cGVvZiBpbml0aWFsU3RhdGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWR1Y2VyIFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLiBcIiArIFwiSWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGUgcmVkdWNlciBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IFwiICsgXCJleHBsaWNpdGx5IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IFwiICsgXCJub3QgYmUgdW5kZWZpbmVkLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBzZXQgYSB2YWx1ZSBmb3IgdGhpcyByZWR1Y2VyLCBcIiArIFwieW91IGNhbiB1c2UgbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuUFJPQkVfVU5LTk9XTl9BQ1RJT04oKVxuICAgIH0pID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVkdWNlciBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkIHdoZW4gcHJvYmVkIHdpdGggYSByYW5kb20gdHlwZS4gXCIgKyAoXCJEb24ndCB0cnkgdG8gaGFuZGxlIFwiICsgQWN0aW9uVHlwZXMuSU5JVCArIFwiIG9yIG90aGVyIGFjdGlvbnMgaW4gXFxcInJlZHV4LypcXFwiIFwiKSArIFwibmFtZXNwYWNlLiBUaGV5IGFyZSBjb25zaWRlcmVkIHByaXZhdGUuIEluc3RlYWQsIHlvdSBtdXN0IHJldHVybiB0aGUgXCIgKyBcImN1cnJlbnQgc3RhdGUgZm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHVubGVzcyBpdCBpcyB1bmRlZmluZWQsIFwiICsgXCJpbiB3aGljaCBjYXNlIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZSwgcmVnYXJkbGVzcyBvZiB0aGUgXCIgKyBcImFjdGlvbiB0eXBlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgbm90IGJlIHVuZGVmaW5lZCwgYnV0IGNhbiBiZSBudWxsLlwiKTtcbiAgICB9XG4gIH0pO1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBkaWZmZXJlbnQgcmVkdWNlciBmdW5jdGlvbnMsIGludG8gYSBzaW5nbGVcbiAqIHJlZHVjZXIgZnVuY3Rpb24uIEl0IHdpbGwgY2FsbCBldmVyeSBjaGlsZCByZWR1Y2VyLCBhbmQgZ2F0aGVyIHRoZWlyIHJlc3VsdHNcbiAqIGludG8gYSBzaW5nbGUgc3RhdGUgb2JqZWN0LCB3aG9zZSBrZXlzIGNvcnJlc3BvbmQgdG8gdGhlIGtleXMgb2YgdGhlIHBhc3NlZFxuICogcmVkdWNlciBmdW5jdGlvbnMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlZHVjZXJzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgY29ycmVzcG9uZCB0byBkaWZmZXJlbnRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zIHRoYXQgbmVlZCB0byBiZSBjb21iaW5lZCBpbnRvIG9uZS4gT25lIGhhbmR5IHdheSB0byBvYnRhaW5cbiAqIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzIHJlZHVjZXJzYCBzeW50YXguIFRoZSByZWR1Y2VycyBtYXkgbmV2ZXIgcmV0dXJuXG4gKiB1bmRlZmluZWQgZm9yIGFueSBhY3Rpb24uIEluc3RlYWQsIHRoZXkgc2hvdWxkIHJldHVybiB0aGVpciBpbml0aWFsIHN0YXRlXG4gKiBpZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZW0gd2FzIHVuZGVmaW5lZCwgYW5kIHRoZSBjdXJyZW50IHN0YXRlIGZvciBhbnlcbiAqIHVucmVjb2duaXplZCBhY3Rpb24uXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHJlZHVjZXIgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGV2ZXJ5IHJlZHVjZXIgaW5zaWRlIHRoZVxuICogcGFzc2VkIG9iamVjdCwgYW5kIGJ1aWxkcyBhIHN0YXRlIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlLlxuICovXG5cblxuZnVuY3Rpb24gY29tYmluZVJlZHVjZXJzKHJlZHVjZXJzKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGZpbmFsUmVkdWNlcnMgPSB7fTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlZHVjZXJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IHJlZHVjZXJLZXlzW2ldO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2FybmluZyhcIk5vIHJlZHVjZXIgcHJvdmlkZWQgZm9yIGtleSBcXFwiXCIgKyBrZXkgKyBcIlxcXCJcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBmaW5hbFJlZHVjZXJzW2tleV0gPSByZWR1Y2Vyc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIHZhciBmaW5hbFJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMoZmluYWxSZWR1Y2Vycyk7XG4gIHZhciB1bmV4cGVjdGVkS2V5Q2FjaGU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB1bmV4cGVjdGVkS2V5Q2FjaGUgPSB7fTtcbiAgfVxuXG4gIHZhciBzaGFwZUFzc2VydGlvbkVycm9yO1xuXG4gIHRyeSB7XG4gICAgYXNzZXJ0UmVkdWNlclNoYXBlKGZpbmFsUmVkdWNlcnMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgc2hhcGVBc3NlcnRpb25FcnJvciA9IGU7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gY29tYmluYXRpb24oc3RhdGUsIGFjdGlvbikge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IHt9O1xuICAgIH1cblxuICAgIGlmIChzaGFwZUFzc2VydGlvbkVycm9yKSB7XG4gICAgICB0aHJvdyBzaGFwZUFzc2VydGlvbkVycm9yO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgd2FybmluZ01lc3NhZ2UgPSBnZXRVbmV4cGVjdGVkU3RhdGVTaGFwZVdhcm5pbmdNZXNzYWdlKHN0YXRlLCBmaW5hbFJlZHVjZXJzLCBhY3Rpb24sIHVuZXhwZWN0ZWRLZXlDYWNoZSk7XG5cbiAgICAgIGlmICh3YXJuaW5nTWVzc2FnZSkge1xuICAgICAgICB3YXJuaW5nKHdhcm5pbmdNZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgaGFzQ2hhbmdlZCA9IGZhbHNlO1xuICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9rZXkgPSBmaW5hbFJlZHVjZXJLZXlzW19pXTtcbiAgICAgIHZhciByZWR1Y2VyID0gZmluYWxSZWR1Y2Vyc1tfa2V5XTtcbiAgICAgIHZhciBwcmV2aW91c1N0YXRlRm9yS2V5ID0gc3RhdGVbX2tleV07XG4gICAgICB2YXIgbmV4dFN0YXRlRm9yS2V5ID0gcmVkdWNlcihwcmV2aW91c1N0YXRlRm9yS2V5LCBhY3Rpb24pO1xuXG4gICAgICBpZiAodHlwZW9mIG5leHRTdGF0ZUZvcktleSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFyIGVycm9yTWVzc2FnZSA9IGdldFVuZGVmaW5lZFN0YXRlRXJyb3JNZXNzYWdlKF9rZXksIGFjdGlvbik7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpO1xuICAgICAgfVxuXG4gICAgICBuZXh0U3RhdGVbX2tleV0gPSBuZXh0U3RhdGVGb3JLZXk7XG4gICAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBuZXh0U3RhdGVGb3JLZXkgIT09IHByZXZpb3VzU3RhdGVGb3JLZXk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhhc0NoYW5nZWQgPyBuZXh0U3RhdGUgOiBzdGF0ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24gYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGZ1bmN0aW9uIGluIHJldHVybi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdH0gYWN0aW9uQ3JlYXRvcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uXG4gKiBjcmVhdG9yIGZ1bmN0aW9ucy4gT25lIGhhbmR5IHdheSB0byBvYnRhaW4gaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXNgXG4gKiBzeW50YXguIFlvdSBtYXkgYWxzbyBwYXNzIGEgc2luZ2xlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGRpc3BhdGNoIFRoZSBgZGlzcGF0Y2hgIGZ1bmN0aW9uIGF2YWlsYWJsZSBvbiB5b3VyIFJlZHV4XG4gKiBzdG9yZS5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb258T2JqZWN0fSBUaGUgb2JqZWN0IG1pbWlja2luZyB0aGUgb3JpZ2luYWwgb2JqZWN0LCBidXQgd2l0aFxuICogZXZlcnkgYWN0aW9uIGNyZWF0b3Igd3JhcHBlZCBpbnRvIHRoZSBgZGlzcGF0Y2hgIGNhbGwuIElmIHlvdSBwYXNzZWQgYVxuICogZnVuY3Rpb24gYXMgYGFjdGlvbkNyZWF0b3JzYCwgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGFsc28gYmUgYSBzaW5nbGVcbiAqIGZ1bmN0aW9uLlxuICovXG5cblxuZnVuY3Rpb24gYmluZEFjdGlvbkNyZWF0b3JzKGFjdGlvbkNyZWF0b3JzLCBkaXNwYXRjaCkge1xuICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3JzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3JzLCBkaXNwYXRjaCk7XG4gIH1cblxuICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3JzICE9PSAnb2JqZWN0JyB8fCBhY3Rpb25DcmVhdG9ycyA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImJpbmRBY3Rpb25DcmVhdG9ycyBleHBlY3RlZCBhbiBvYmplY3Qgb3IgYSBmdW5jdGlvbiwgaW5zdGVhZCByZWNlaXZlZCBcIiArIChhY3Rpb25DcmVhdG9ycyA9PT0gbnVsbCA/ICdudWxsJyA6IHR5cGVvZiBhY3Rpb25DcmVhdG9ycykgKyBcIi4gXCIgKyBcIkRpZCB5b3Ugd3JpdGUgXFxcImltcG9ydCBBY3Rpb25DcmVhdG9ycyBmcm9tXFxcIiBpbnN0ZWFkIG9mIFxcXCJpbXBvcnQgKiBhcyBBY3Rpb25DcmVhdG9ycyBmcm9tXFxcIj9cIik7XG4gIH1cblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFjdGlvbkNyZWF0b3JzKTtcbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICB2YXIgYWN0aW9uQ3JlYXRvciA9IGFjdGlvbkNyZWF0b3JzW2tleV07XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGJvdW5kQWN0aW9uQ3JlYXRvcnNba2V5XSA9IGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3IsIGRpc3BhdGNoKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuXG4gICAgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgfSkpO1xuICAgIH1cblxuICAgIG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbi8qKlxuICogQ29tcG9zZXMgc2luZ2xlLWFyZ3VtZW50IGZ1bmN0aW9ucyBmcm9tIHJpZ2h0IHRvIGxlZnQuIFRoZSByaWdodG1vc3RcbiAqIGZ1bmN0aW9uIGNhbiB0YWtlIG11bHRpcGxlIGFyZ3VtZW50cyBhcyBpdCBwcm92aWRlcyB0aGUgc2lnbmF0dXJlIGZvclxuICogdGhlIHJlc3VsdGluZyBjb21wb3NpdGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gZnVuY3MgVGhlIGZ1bmN0aW9ucyB0byBjb21wb3NlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIG9idGFpbmVkIGJ5IGNvbXBvc2luZyB0aGUgYXJndW1lbnQgZnVuY3Rpb25zXG4gKiBmcm9tIHJpZ2h0IHRvIGxlZnQuIEZvciBleGFtcGxlLCBjb21wb3NlKGYsIGcsIGgpIGlzIGlkZW50aWNhbCB0byBkb2luZ1xuICogKC4uLmFyZ3MpID0+IGYoZyhoKC4uLmFyZ3MpKSkuXG4gKi9cbmZ1bmN0aW9uIGNvbXBvc2UoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBmdW5jcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBmdW5jc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgICAgcmV0dXJuIGFyZztcbiAgICB9O1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiBmdW5jc1swXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jcy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGEoYi5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cykpO1xuICAgIH07XG4gIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBzdG9yZSBlbmhhbmNlciB0aGF0IGFwcGxpZXMgbWlkZGxld2FyZSB0byB0aGUgZGlzcGF0Y2ggbWV0aG9kXG4gKiBvZiB0aGUgUmVkdXggc3RvcmUuIFRoaXMgaXMgaGFuZHkgZm9yIGEgdmFyaWV0eSBvZiB0YXNrcywgc3VjaCBhcyBleHByZXNzaW5nXG4gKiBhc3luY2hyb25vdXMgYWN0aW9ucyBpbiBhIGNvbmNpc2UgbWFubmVyLCBvciBsb2dnaW5nIGV2ZXJ5IGFjdGlvbiBwYXlsb2FkLlxuICpcbiAqIFNlZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UgYXMgYW4gZXhhbXBsZSBvZiB0aGUgUmVkdXggbWlkZGxld2FyZS5cbiAqXG4gKiBCZWNhdXNlIG1pZGRsZXdhcmUgaXMgcG90ZW50aWFsbHkgYXN5bmNocm9ub3VzLCB0aGlzIHNob3VsZCBiZSB0aGUgZmlyc3RcbiAqIHN0b3JlIGVuaGFuY2VyIGluIHRoZSBjb21wb3NpdGlvbiBjaGFpbi5cbiAqXG4gKiBOb3RlIHRoYXQgZWFjaCBtaWRkbGV3YXJlIHdpbGwgYmUgZ2l2ZW4gdGhlIGBkaXNwYXRjaGAgYW5kIGBnZXRTdGF0ZWAgZnVuY3Rpb25zXG4gKiBhcyBuYW1lZCBhcmd1bWVudHMuXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gbWlkZGxld2FyZXMgVGhlIG1pZGRsZXdhcmUgY2hhaW4gdG8gYmUgYXBwbGllZC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBzdG9yZSBlbmhhbmNlciBhcHBseWluZyB0aGUgbWlkZGxld2FyZS5cbiAqL1xuXG5mdW5jdGlvbiBhcHBseU1pZGRsZXdhcmUoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBtaWRkbGV3YXJlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBtaWRkbGV3YXJlc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoY3JlYXRlU3RvcmUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHN0b3JlID0gY3JlYXRlU3RvcmUuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuXG4gICAgICB2YXIgX2Rpc3BhdGNoID0gZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkRpc3BhdGNoaW5nIHdoaWxlIGNvbnN0cnVjdGluZyB5b3VyIG1pZGRsZXdhcmUgaXMgbm90IGFsbG93ZWQuIFwiICsgXCJPdGhlciBtaWRkbGV3YXJlIHdvdWxkIG5vdCBiZSBhcHBsaWVkIHRvIHRoaXMgZGlzcGF0Y2guXCIpO1xuICAgICAgfTtcblxuICAgICAgdmFyIG1pZGRsZXdhcmVBUEkgPSB7XG4gICAgICAgIGdldFN0YXRlOiBzdG9yZS5nZXRTdGF0ZSxcbiAgICAgICAgZGlzcGF0Y2g6IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICAgIHJldHVybiBfZGlzcGF0Y2guYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIGNoYWluID0gbWlkZGxld2FyZXMubWFwKGZ1bmN0aW9uIChtaWRkbGV3YXJlKSB7XG4gICAgICAgIHJldHVybiBtaWRkbGV3YXJlKG1pZGRsZXdhcmVBUEkpO1xuICAgICAgfSk7XG4gICAgICBfZGlzcGF0Y2ggPSBjb21wb3NlLmFwcGx5KHZvaWQgMCwgY2hhaW4pKHN0b3JlLmRpc3BhdGNoKTtcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBzdG9yZSwge1xuICAgICAgICBkaXNwYXRjaDogX2Rpc3BhdGNoXG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xufVxuXG4vKlxuICogVGhpcyBpcyBhIGR1bW15IGZ1bmN0aW9uIHRvIGNoZWNrIGlmIHRoZSBmdW5jdGlvbiBuYW1lIGhhcyBiZWVuIGFsdGVyZWQgYnkgbWluaWZpY2F0aW9uLlxuICogSWYgdGhlIGZ1bmN0aW9uIGhhcyBiZWVuIG1pbmlmaWVkIGFuZCBOT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nLCB3YXJuIHRoZSB1c2VyLlxuICovXG5cbmZ1bmN0aW9uIGlzQ3J1c2hlZCgpIHt9XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBpc0NydXNoZWQubmFtZSA9PT0gJ3N0cmluZycgJiYgaXNDcnVzaGVkLm5hbWUgIT09ICdpc0NydXNoZWQnKSB7XG4gIHdhcm5pbmcoJ1lvdSBhcmUgY3VycmVudGx5IHVzaW5nIG1pbmlmaWVkIGNvZGUgb3V0c2lkZSBvZiBOT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIuICcgKyAnVGhpcyBtZWFucyB0aGF0IHlvdSBhcmUgcnVubmluZyBhIHNsb3dlciBkZXZlbG9wbWVudCBidWlsZCBvZiBSZWR1eC4gJyArICdZb3UgY2FuIHVzZSBsb29zZS1lbnZpZnkgKGh0dHBzOi8vZ2l0aHViLmNvbS96ZXJ0b3NoL2xvb3NlLWVudmlmeSkgZm9yIGJyb3dzZXJpZnkgJyArICdvciBzZXR0aW5nIG1vZGUgdG8gcHJvZHVjdGlvbiBpbiB3ZWJwYWNrIChodHRwczovL3dlYnBhY2suanMub3JnL2NvbmNlcHRzL21vZGUvKSAnICsgJ3RvIGVuc3VyZSB5b3UgaGF2ZSB0aGUgY29ycmVjdCBjb2RlIGZvciB5b3VyIHByb2R1Y3Rpb24gYnVpbGQuJyk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21iaW5lUmVkdWNlcnMsIGJpbmRBY3Rpb25DcmVhdG9ycywgYXBwbHlNaWRkbGV3YXJlLCBjb21wb3NlLCBBY3Rpb25UeXBlcyBhcyBfX0RPX05PVF9VU0VfX0FjdGlvblR5cGVzIH07XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiLyogZ2xvYmFsIHdpbmRvdyAqL1xuaW1wb3J0IHBvbnlmaWxsIGZyb20gJy4vcG9ueWZpbGwuanMnO1xuXG52YXIgcm9vdDtcblxuaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gc2VsZjtcbn0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IHdpbmRvdztcbn0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IGdsb2JhbDtcbn0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IG1vZHVsZTtcbn0gZWxzZSB7XG4gIHJvb3QgPSBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xufVxuXG52YXIgcmVzdWx0ID0gcG9ueWZpbGwocm9vdCk7XG5leHBvcnQgZGVmYXVsdCByZXN1bHQ7XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfaW1wbGVtZW50YXRpb24gPSByZXF1aXJlKCcuL2ltcGxlbWVudGF0aW9uJyk7XG5cbnZhciBfaW1wbGVtZW50YXRpb24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW1wbGVtZW50YXRpb24pO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlQ29udGV4dCB8fCBfaW1wbGVtZW50YXRpb24yLmRlZmF1bHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzeW1ib2xPYnNlcnZhYmxlUG9ueWZpbGwocm9vdCkge1xuXHR2YXIgcmVzdWx0O1xuXHR2YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cblx0aWYgKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicpIHtcblx0XHRpZiAoU3ltYm9sLm9ic2VydmFibGUpIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbC5vYnNlcnZhYmxlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXN1bHQgPSBTeW1ib2woJ29ic2VydmFibGUnKTtcblx0XHRcdFN5bWJvbC5vYnNlcnZhYmxlID0gcmVzdWx0O1xuXHRcdH1cblx0fSBlbHNlIHtcblx0XHRyZXN1bHQgPSAnQEBvYnNlcnZhYmxlJztcblx0fVxuXG5cdHJldHVybiByZXN1bHQ7XG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiO1xyXG5pbXBvcnQgSG9tZSBmcm9tIFwiLi9jb21wb25lbnRzL0hvbWVcIjtcclxuaW1wb3J0IFJvdXRlcyBmcm9tIFwiLi9yb3V0ZXMvUm91dGVzXCI7XHJcbmltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5pbXBvcnQgeyBjcmVhdGVTdG9yZSwgYXBwbHlNaWRkbGV3YXJlIH0gZnJvbSBcInJlZHV4XCI7XHJcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCB0aHVuayBmcm9tIFwicmVkdXgtdGh1bmtcIjtcclxuaW1wb3J0IHJlZHVjZXJzIGZyb20gXCIuL3N0b3JlXCI7XHJcblxyXG5jb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKHJlZHVjZXJzLCB7fSwgYXBwbHlNaWRkbGV3YXJlKHRodW5rKSk7XHJcblxyXG5SZWFjdERPTS5oeWRyYXRlKFxyXG4gIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgPEJyb3dzZXJSb3V0ZXI+XHJcbiAgICAgIDxSb3V0ZXMgLz5cclxuICAgIDwvQnJvd3NlclJvdXRlcj5cclxuICA8L1Byb3ZpZGVyPixcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvb3RcIilcclxuKTtcclxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGFhPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxiYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGNhKGEsYixkLGMsZSxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2QsYyxlLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWQrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/QihcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2soSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBkYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixkLGMpe2lmKFAubGVuZ3RoKXt2YXIgZT1QLnBvcCgpO2UucmVzdWx0PWE7ZS5rZXlQcmVmaXg9YjtlLmZ1bmM9ZDtlLmNvbnRleHQ9YztlLmNvdW50PTA7cmV0dXJuIGV9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZT1hLm5leHQoKSkuZG9uZTspZT1lLnZhbHVlLGY9YitUKGUsaCsrKSxnKz1TKGUsZixkLGMpO2Vsc2VcIm9iamVjdFwiPT09ZSYmKGQ9XCJcIithLEIoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmQsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGQpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixkKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBlYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBmYShhLGIsZCl7dmFyIGM9YS5yZXN1bHQsZT1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsYyxkLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWRhKGEsZSsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrZCkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsZCxjLGUpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGMsZSk7VShhLGZhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtudWxsPT09YT9CKFwiMzIxXCIpOnZvaWQgMDtyZXR1cm4gYX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1YoYSxjLG51bGwsYixkKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZCk7VShhLGVhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpiYSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjphYSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9LHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlRWZmZWN0KGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxcbmIsZCl7cmV0dXJuIFcoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixkKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe30sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGQpfSx1c2VSZWY6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VSZWYoYSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZCl7bnVsbD09PWF8fHZvaWQgMD09PWE/QihcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZT1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO2lmKG51bGwhPVxuYil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuOC42XCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRPd25lcjpKLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bYyxkLGUsZixnLGhdLGs9MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW2srK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiB4KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsZD0wO2Q8YjtkKyspYys9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7YmEoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixjKX1hYT92b2lkIDA6eChcIjIyN1wiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgsbCl7dmFyIGs9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsayl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX1cbnZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxsKXtkYT0hMTtlYT1udWxsO2NhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGwpe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBrPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB4KFwiMTk4XCIpLGs9dm9pZCAwO2ZhfHwoZmE9ITAsaGE9ayl9fXZhciBsYT1udWxsLG1hPXt9O1xuZnVuY3Rpb24gbmEoKXtpZihsYSlmb3IodmFyIGEgaW4gbWEpe3ZhciBiPW1hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDp4KFwiOTZcIixhKTtpZighb2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6eChcIjk3XCIsYSk7b2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtwYS5oYXNPd25Qcm9wZXJ0eShoKT94KFwiOTlcIixoKTp2b2lkIDA7cGFbaF09Zjt2YXIgbD1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGwpe2ZvcihlIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShlKSYmcWEobFtlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6eChcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHFhKGEsYixjKXtyYVthXT94KFwiMTAwXCIsYSk6dm9pZCAwO3JhW2FdPWI7c2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgb2E9W10scGE9e30scmE9e30sc2E9e30sdGE9bnVsbCx1YT1udWxsLHZhPW51bGw7ZnVuY3Rpb24gd2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXZhKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24geGEoYSxiKXtudWxsPT1iP3goXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24geWEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIHphPW51bGw7ZnVuY3Rpb24gQWEoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXdhKGEsYltkXSxjW2RdKTtlbHNlIGImJndhKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1cbnZhciBCYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXtsYT94KFwiMTAxXCIpOnZvaWQgMDtsYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtuYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP3goXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfX07XG5mdW5jdGlvbiBDYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXRhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBEYShhKXtudWxsIT09YSYmKHphPXhhKHphLGEpKTthPXphO3phPW51bGw7aWYoYSYmKHlhKGEsQWEpLHphP3goXCI5NVwiKTp2b2lkIDAsZmEpKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO312YXIgRWE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksRmE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitFYSxHYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0VhO2Z1bmN0aW9uIEhhKGEpe2lmKGFbRmFdKXJldHVybiBhW0ZhXTtmb3IoOyFhW0ZhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0ZhXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIElhKGEpe2E9YVtGYV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIEphKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt4KFwiMzNcIil9ZnVuY3Rpb24gS2EoYSl7cmV0dXJuIGFbR2FdfHxudWxsfWZ1bmN0aW9uIExhKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gTWEoYSxiLGMpe2lmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIE5hKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TGEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU1hKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspTWEoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gT2EoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBQYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJk9hKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFFhKGEpe3lhKGEsTmEpfXZhciBSYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFNhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRhPXthbmltYXRpb25lbmQ6U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFVhPXt9LFZhPXt9O1xuUmEmJihWYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdhKGEpe2lmKFVhW2FdKXJldHVybiBVYVthXTtpZighVGFbYV0pcmV0dXJuIGE7dmFyIGI9VGFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmEpcmV0dXJuIFVhW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGE9V2EoXCJhbmltYXRpb25lbmRcIiksWWE9V2EoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmE9V2EoXCJhbmltYXRpb25zdGFydFwiKSwkYT1XYShcInRyYW5zaXRpb25lbmRcIiksYWI9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJiPW51bGwsY2I9bnVsbCxkYj1udWxsO1xuZnVuY3Rpb24gZWIoKXtpZihkYilyZXR1cm4gZGI7dmFyIGEsYj1jYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBkYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGZiKCl7cmV0dXJuITB9ZnVuY3Rpb24gZ2IoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHkoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2ZiOmdiO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Z2I7cmV0dXJuIHRoaXN9XG5uKHkucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9ZmIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9ZmIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9ZmJ9LGlzUGVyc2lzdGVudDpnYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1nYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3kuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xueS5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtoYihjKTtyZXR1cm4gY307aGIoeSk7ZnVuY3Rpb24gaWIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gamIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOngoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gaGIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9aWI7YS5yZWxlYXNlPWpifXZhciBrYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbGI9eS5leHRlbmQoe2RhdGE6bnVsbH0pLG1iPVs5LDEzLDI3LDMyXSxuYj1SYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csb2I9bnVsbDtSYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYob2I9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBwYj1SYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIW9iLHFiPVJhJiYoIW5ifHxvYiYmODxvYiYmMTE+PW9iKSxyYj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxzYj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSx0Yj0hMTtcbmZ1bmN0aW9uIHViKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09bWIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB2YihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciB3Yj0hMTtmdW5jdGlvbiB4YihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gdmIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3RiPSEwO3JldHVybiByYjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1yYiYmdGI/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24geWIoYSxiKXtpZih3YilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhbmImJnViKGEsYik/KGE9ZWIoKSxkYj1jYj1iYj1udWxsLHdiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBxYiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgemI9e2V2ZW50VHlwZXM6c2IsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKG5iKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9c2IuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9c2IuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPXNiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSB3Yj91YihhLGMpJiYoZT1zYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPXNiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHFiJiZcImtvXCIhPT1jLmxvY2FsZSYmKHdifHxlIT09c2IuY29tcG9zaXRpb25TdGFydD9lPT09c2IuY29tcG9zaXRpb25FbmQmJndiJiYoZj1lYigpKTooYmI9ZCxjYj1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCx3Yj1cbiEwKSksZT1rYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj12YihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksUWEoZSksZj1lKTpmPW51bGw7KGE9cGI/eGIoYSxjKTp5YihhLGMpKT8oYj1sYi5nZXRQb29sZWQoc2IuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFFhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEFiPW51bGwsQmI9bnVsbCxDYj1udWxsO2Z1bmN0aW9uIERiKGEpe2lmKGE9dWEoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBYj94KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj10YShhLnN0YXRlTm9kZSk7QWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBFYihhKXtCYj9DYj9DYi5wdXNoKGEpOkNiPVthXTpCYj1hfWZ1bmN0aW9uIEZiKCl7aWYoQmIpe3ZhciBhPUJiLGI9Q2I7Q2I9QmI9bnVsbDtEYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspRGIoYlthXSl9fVxuZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBJYigpe312YXIgSmI9ITE7ZnVuY3Rpb24gS2IoYSxiKXtpZihKYilyZXR1cm4gYShiKTtKYj0hMDt0cnl7cmV0dXJuIEdiKGEsYil9ZmluYWxseXtpZihKYj0hMSxudWxsIT09QmJ8fG51bGwhPT1DYilJYigpLEZiKCl9fXZhciBMYj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBNYihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIUxiW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIE5iKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBPYihhKXtpZighUmEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gUGIoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFFiKGEpe3ZhciBiPVBiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBSYihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9UWIoYSkpfWZ1bmN0aW9uIFNiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1QYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfXZhciBUYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtUYi5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtcbnZhciBVYj0vXiguKilbXFxcXFxcL10vLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixWYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLFdiPXo/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixYYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxZYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxaYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCwkYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxhYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGJjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxjYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixkYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxlYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsZmM9ej9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixnYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gaGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWdjJiZhW2djXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gaWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBiYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBYYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBXYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgWmI6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgWWI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBkYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGFjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgJGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBjYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgZWM6cmV0dXJuIGljKGEudHlwZSk7Y2FzZSBmYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIGljKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIGpjKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1pYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1pYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFViLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIga2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGxjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbWM9e30sbmM9e307XG5mdW5jdGlvbiBvYyhhKXtpZihsYy5jYWxsKG5jLGEpKXJldHVybiEwO2lmKGxjLmNhbGwobWMsYSkpcmV0dXJuITE7aWYoa2MudGVzdChhKSlyZXR1cm4gbmNbYV09ITA7bWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBxYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxwYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEMoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciByYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLFxuc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5mdW5jdGlvbiB0YyhhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChxYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/b2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHVjKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB2YyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiB3YyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIHhjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIHljKGEsYil7eGMoYSxiKTt2YXIgYz11YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT96YyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZ6YyhhLGIudHlwZSx1YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEFjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIHpjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgQmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gQ2MoYSxiLGMpe2E9eS5nZXRQb29sZWQoQmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtFYihjKTtRYShhKTtyZXR1cm4gYX12YXIgRGM9bnVsbCxFYz1udWxsO2Z1bmN0aW9uIEZjKGEpe0RhKGEpfVxuZnVuY3Rpb24gR2MoYSl7dmFyIGI9SmEoYSk7aWYoU2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gSGMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgSWM9ITE7UmEmJihJYz1PYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBKYygpe0RjJiYoRGMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpLEVjPURjPW51bGwpfWZ1bmN0aW9uIEtjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZHYyhFYykmJihhPUNjKEVjLGEsTmIoYSkpLEtiKEZjLGEpKX1mdW5jdGlvbiBMYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oSmMoKSxEYz1iLEVjPWMsRGMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpKTpcImJsdXJcIj09PWEmJkpjKCl9ZnVuY3Rpb24gTWMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gR2MoRWMpfVxuZnVuY3Rpb24gTmMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBHYyhiKX1mdW5jdGlvbiBPYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBHYyhiKX1cbnZhciBQYz17ZXZlbnRUeXBlczpCYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkljLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9KYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9SGM6TWIoZSk/SWM/Zj1PYzooZj1NYyxnPUxjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1OYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gQ2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZ6YyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxRYz15LmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksUmM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gU2MoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1SY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFRjKCl7cmV0dXJuIFNjfVxudmFyIFVjPTAsVmM9MCxXYz0hMSxYYz0hMSxZYz1RYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9VWM7VWM9YS5zY3JlZW5YO3JldHVybiBXYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFdjPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9VmM7VmM9YS5zY3JlZW5ZO3JldHVybiBYYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFhjPSEwLDApfX0pLFpjPVljLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSwkYz17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sYWQ9e2V2ZW50VHlwZXM6JGMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SGEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxsPXZvaWQgMCxrPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPVljLGg9JGMubW91c2VMZWF2ZSxsPSRjLm1vdXNlRW50ZXIsaz1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPVpjLGg9JGMucG9pbnRlckxlYXZlLGw9JGMucG9pbnRlckVudGVyLGs9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkphKGYpO2U9bnVsbD09Yj9lOkphKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWsrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChsLGIsYyxkKTtjLnR5cGU9aytcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2s9MDtmb3IoZz1iO2c7Zz1MYShnKSlrKys7Zz0wO2ZvcihsPWU7bDtsPUxhKGwpKWcrKztmb3IoOzA8ay1nOyliPUxhKGIpLGstLTtmb3IoOzA8Zy1rOyllPUxhKGUpLGctLTtmb3IoO2stLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPUxhKGIpO2U9TGEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2s9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TGEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtrPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztmLnB1c2goZCk7ZD1MYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKU9hKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KU9hKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX07ZnVuY3Rpb24gYmQoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBjZD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gZGQoYSxiKXtpZihiZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWNkLmNhbGwoYixjW2RdKXx8IWJkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gZWQoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gZmQoYSl7MiE9PWVkKGEpP3goXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gZ2QoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9ZWQoYSksMz09PWI/eChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gZmQoZSksYTtpZihnPT09ZClyZXR1cm4gZmQoZSksYjtnPWcuc2libGluZ314KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6eChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3goXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz94KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhkKGEpe2E9Z2QoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgaWQ9eS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLGpkPXkuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksa2Q9UWMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBsZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBtZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sbmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LG9kPVFjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1tZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1sZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/bmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2xkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2xkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSkscGQ9WWMuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPVFjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjfSkscmQ9eS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksc2Q9WWMuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx0ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtYYSxcImFuaW1hdGlvbkVuZFwiXSxbWWEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW1phLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbJGEsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSx1ZD17fSx2ZD17fTtmdW5jdGlvbiB3ZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O3VkW2FdPWI7dmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCEwKX0pO3RkLmZvckVhY2goZnVuY3Rpb24oYSl7d2QoYSwhMSl9KTtcbnZhciB4ZD17ZXZlbnRUeXBlczp1ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1sZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9b2Q7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPWtkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9WWM7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnBkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9cWQ7YnJlYWs7Y2FzZSBYYTpjYXNlIFlhOmNhc2UgWmE6YT1pZDticmVhaztjYXNlICRhOmE9cmQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9UWM7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT1zZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPWpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9WmM7YnJlYWs7ZGVmYXVsdDphPXl9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtRYShiKTtyZXR1cm4gYn19LHlkPXhkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbnpkPVtdO2Z1bmN0aW9uIEFkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUhhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPU5iKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPG9hLmxlbmd0aDtoKyspe3ZhciBsPW9hW2hdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXhhKGcsbCkpfURhKGcpfX12YXIgQmQ9ITA7XG5mdW5jdGlvbiBFKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KHlkKGEpP0NkOkRkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gRWQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBDZChhLGIpe0hiKERkLGEsYil9XG5mdW5jdGlvbiBEZChhLGIpe2lmKEJkKXt2YXIgYz1OYihiKTtjPUhhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09ZWQoYyl8fChjPW51bGwpO2lmKHpkLmxlbmd0aCl7dmFyIGQ9emQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7S2IoQWQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD56ZC5sZW5ndGgmJnpkLnB1c2goYSl9fX12YXIgRmQ9e30sR2Q9MCxIZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBJZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxIZCl8fChhW0hkXT1HZCsrLEZkW2FbSGRdXT17fSk7cmV0dXJuIEZkW2FbSGRdXX1mdW5jdGlvbiBKZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gS2QoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGQoYSxiKXt2YXIgYz1LZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZChjKX19ZnVuY3Rpb24gTWQoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZCgpe2Zvcih2YXIgYT13aW5kb3csYj1KZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1KZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gUGQoKXt2YXIgYT1OZCgpO2lmKE9kKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBiPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntiPShiPWEub3duZXJEb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgYz1iLmdldFNlbGVjdGlvbiYmYi5nZXRTZWxlY3Rpb24oKTtpZihjJiYwIT09Yy5yYW5nZUNvdW50KXtiPWMuYW5jaG9yTm9kZTt2YXIgZD1jLmFuY2hvck9mZnNldCxlPWMuZm9jdXNOb2RlO2M9Yy5mb2N1c09mZnNldDt0cnl7Yi5ub2RlVHlwZSxlLm5vZGVUeXBlfWNhdGNoKEEpe2I9bnVsbDticmVhayBhfXZhciBmPTAsZz0tMSxoPS0xLGw9MCxrPTAsbT1hLHA9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB0Ozspe20hPT1ifHwwIT09ZCYmMyE9PW0ubm9kZVR5cGV8fChnPWYrZCk7bSE9PWV8fDAhPT1jJiYzIT09bS5ub2RlVHlwZXx8KGg9ZitjKTszPT09bS5ub2RlVHlwZSYmKGYrPW0ubm9kZVZhbHVlLmxlbmd0aCk7XG5pZihudWxsPT09KHQ9bS5maXJzdENoaWxkKSlicmVhaztwPW07bT10fWZvcig7Oyl7aWYobT09PWEpYnJlYWsgYjtwPT09YiYmKytsPT09ZCYmKGc9Zik7cD09PWUmJisraz09PWMmJihoPWYpO2lmKG51bGwhPT0odD1tLm5leHRTaWJsaW5nKSlicmVhazttPXA7cD1tLnBhcmVudE5vZGV9bT10fWI9LTE9PT1nfHwtMT09PWg/bnVsbDp7c3RhcnQ6ZyxlbmQ6aH19ZWxzZSBiPW51bGx9Yj1ifHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBiPW51bGw7cmV0dXJue2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Yn19XG5mdW5jdGlvbiBRZChhKXt2YXIgYj1OZCgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmMmJmMub3duZXJEb2N1bWVudCYmTWQoYy5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYobnVsbCE9PWQmJk9kKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYoYT0oYj1jLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93LGEuZ2V0U2VsZWN0aW9uKXthPWEuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Yy50ZXh0Q29udGVudC5sZW5ndGgsZj1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/ZjpNYXRoLm1pbihkLmVuZCxlKTshYS5leHRlbmQmJmY+ZCYmKGU9ZCxkPWYsZj1lKTtlPUxkKGMsZik7dmFyIGc9TGQoYyxcbmQpO2UmJmcmJigxIT09YS5yYW5nZUNvdW50fHxhLmFuY2hvck5vZGUhPT1lLm5vZGV8fGEuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGEuZm9jdXNOb2RlIT09Zy5ub2RlfHxhLmZvY3VzT2Zmc2V0IT09Zy5vZmZzZXQpJiYoYj1iLmNyZWF0ZVJhbmdlKCksYi5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpLGEucmVtb3ZlQWxsUmFuZ2VzKCksZj5kPyhhLmFkZFJhbmdlKGIpLGEuZXh0ZW5kKGcubm9kZSxnLm9mZnNldCkpOihiLnNldEVuZChnLm5vZGUsZy5vZmZzZXQpLGEuYWRkUmFuZ2UoYikpKX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5mb2N1cyYmYy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX1cbnZhciBSZD1SYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFNkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxUZD1udWxsLFVkPW51bGwsVmQ9bnVsbCxXZD0hMTtcbmZ1bmN0aW9uIFhkKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoV2R8fG51bGw9PVRkfHxUZCE9PUpkKGMpKXJldHVybiBudWxsO2M9VGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmT2QoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gVmQmJmRkKFZkLGMpP251bGw6KFZkPWMsYT15LmdldFBvb2xlZChTZC5zZWxlY3QsVWQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1UZCxRYShhKSxhKX1cbnZhciBZZD17ZXZlbnRUeXBlczpTZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1JZChlKTtmPXNhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/SmEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihNYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlUZD1lLFVkPWIsVmQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOlZkPVVkPVRkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOldkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gV2Q9ITEsWGQoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBYZChjLGQpfXJldHVybiBudWxsfX07QmEuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt0YT1LYTt1YT1JYTt2YT1KYTtCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOnhkLEVudGVyTGVhdmVFdmVudFBsdWdpbjphZCxDaGFuZ2VFdmVudFBsdWdpbjpQYyxTZWxlY3RFdmVudFBsdWdpbjpZZCxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnpifSk7ZnVuY3Rpb24gWmQoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkZChhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPVpkKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBhZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrdWMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGJlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD94KFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGNlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/eChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOngoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnVjKGMpfX1cbmZ1bmN0aW9uIGRlKGEsYil7dmFyIGM9dWMoYi52YWx1ZSksZD11YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGVlKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBmZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBnZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIGhlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9nZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBpZT12b2lkIDAsamU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09ZmUuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7aWU9aWV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9aWUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24ga2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBsZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxtZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMobGUpLmZvckVhY2goZnVuY3Rpb24oYSl7bWUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtsZVtiXT1sZVthXX0pfSk7ZnVuY3Rpb24gbmUoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGxlLmhhc093blByb3BlcnR5KGEpJiZsZVthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBvZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1uZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBwZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gcWUoYSxiKXtiJiYocGVbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/eChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp4KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT94KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gcmUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24gc2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9SWQoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6RWQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkVkKFwiZm9jdXNcIixhKTtFZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6T2IoZSkmJkVkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFiLmluZGV4T2YoZSkmJkUoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24gdGUoKXt9dmFyIHVlPW51bGwsdmU9bnVsbDtcbmZ1bmN0aW9uIHdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiB4ZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgeWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsemU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEFlPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxCZT1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrO1xuZnVuY3Rpb24gQ2UoYSxiLGMsZCxlKXthW0dhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZ4YyhhLGUpO3JlKGMsZCk7ZD1yZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP29lKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9qZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/a2UoYSxoKTp0YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWMoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpkZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2FlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9hZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTphZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gRGUoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBFZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgRmU9W10sR2U9LTE7ZnVuY3Rpb24gRihhKXswPkdlfHwoYS5jdXJyZW50PUZlW0dlXSxGZVtHZV09bnVsbCxHZS0tKX1mdW5jdGlvbiBHKGEsYil7R2UrKztGZVtHZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBIZT17fSxIPXtjdXJyZW50OkhlfSxJPXtjdXJyZW50OiExfSxJZT1IZTtcbmZ1bmN0aW9uIEplKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gSGU7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gSihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEtlKGEpe0YoSSxhKTtGKEgsYSl9ZnVuY3Rpb24gTGUoYSl7RihJLGEpO0YoSCxhKX1cbmZ1bmN0aW9uIE1lKGEsYixjKXtILmN1cnJlbnQhPT1IZT94KFwiMTY4XCIpOnZvaWQgMDtHKEgsYixhKTtHKEksYyxhKX1mdW5jdGlvbiBOZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp4KFwiMTA4XCIsaWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxIZTtJZT1ILmN1cnJlbnQ7RyhILGIsYSk7RyhJLEkuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFBlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp4KFwiMTY5XCIpO2M/KGI9TmUoYSxiLEllKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsRihJLGEpLEYoSCxhKSxHKEgsYixhKSk6RihJLGEpO0coSSxjLGEpfXZhciBRZT1udWxsLFJlPW51bGw7ZnVuY3Rpb24gU2UoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFRlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1FlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtSZT1TZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gVWUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmNvbnRleHREZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gSyhhLGIsYyxkKXtyZXR1cm4gbmV3IFVlKGEsYixjLGQpfVxuZnVuY3Rpb24gVmUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBXZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gVmUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWNjKXJldHVybiAxMTtpZihhPT09ZWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gWGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1LKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBZZShhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpVmUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgWGI6cmV0dXJuIFplKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgYmM6cmV0dXJuICRlKGMsZXwzLGYsYik7Y2FzZSBZYjpyZXR1cm4gJGUoYyxlfDIsZixiKTtjYXNlIFpiOnJldHVybiBhPUsoMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1aYixhLnR5cGU9WmIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBkYzpyZXR1cm4gYT1LKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWRjLGEudHlwZT1kYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgJGI6Zz0xMDticmVhayBhO2Nhc2UgYWM6Zz05O2JyZWFrIGE7Y2FzZSBjYzpnPTExO2JyZWFrIGE7Y2FzZSBlYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGZjOmc9MTY7ZD1udWxsO2JyZWFrIGF9eChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPUsoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBaZShhLGIsYyxkKXthPUsoNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uICRlKGEsYixjLGQpe2E9Syg4LGEsZCxiKTtiPTA9PT0oYiYxKT9ZYjpiYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGFmKGEsYixjKXthPUsoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gYmYoYSxiLGMpe2I9Syg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBjZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGVmKGEsYil7YS5kaWRFcnJvcj0hMTtpZigwPT09YilhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MDtlbHNle2I8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEubGF0ZXN0UGVuZGluZ1RpbWU7MCE9PWMmJihjPmI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9MDphLmVhcmxpZXN0UGVuZGluZ1RpbWU+YiYmKGEuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lKSk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTswPT09Yz9jZihhLGIpOmI8YS5sYXRlc3RTdXNwZW5kZWRUaW1lPyhhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wLGNmKGEsYikpOlxuYj5jJiZjZihhLGIpfWRmKDAsYSl9ZnVuY3Rpb24gZmYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGdmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifWZ1bmN0aW9uIGRmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gTChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGhmKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDphLl9zdGF0dXM9MDtiPWEuX2N0b3I7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KTtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGEuX3Jlc3VsdDtjYXNlIDI6dGhyb3cgYS5fcmVzdWx0O31hLl9yZXN1bHQ9Yjt0aHJvdyBiO319dmFyIGpmPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24ga2YoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgdGY9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1lZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1sZigpO2Q9bWYoZCxhKTt2YXIgZT1uZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7b2YoKTtwZihhLGUpO3FmKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UudGFnPXJmO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9bGYoKTtjPW1mKGMsYSk7dmFyIGQ9bmYoYyk7ZC50YWc9XG5zZjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7b2YoKTtwZihhLGQpO3FmKGEsYyl9fTtmdW5jdGlvbiB1ZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFkZChjLGQpfHwhZGQoZSxmKTohMH1cbmZ1bmN0aW9uIHZmKGEsYixjKXt2YXIgZD0hMSxlPUhlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU0oZik6KGU9SihiKT9JZTpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9KZShhLGUpOkhlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9dGY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gd2YoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24geGYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1qZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PU0oZik6KGY9SihiKT9JZTpILmN1cnJlbnQsZS5jb250ZXh0PUplKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihrZihhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZ0Zi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJih5ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHpmPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBBZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/eChcIjMwOVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6eChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09amYmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/eChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOngoXCIyOTBcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIEJmKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ4KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBDZihhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPVhlKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9YWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPUFmKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1ZZShjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1BZihhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWJmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVplKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1hZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYz1ZZShiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1BZihhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgV2I6cmV0dXJuIGI9YmYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHpmKGIpfHxcbmhjKGIpKXJldHVybiBiPVplKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO0JmKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PVhiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTpsKGEsYixjLGQpOm51bGw7Y2FzZSBXYjpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbH1pZih6ZihjKXx8aGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO0JmKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1YYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmwoYixhLGQsZSk7Y2FzZSBXYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKX1pZih6ZihkKXx8aGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO0JmKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwscT1nLHU9Zz0wLEI9bnVsbDtudWxsIT09cSYmdTxoLmxlbmd0aDt1Kyspe3EuaW5kZXg+dT8oQj1xLHE9bnVsbCk6Qj1xLnNpYmxpbmc7dmFyIHc9dChlLHEsaFt1XSxrKTtpZihudWxsPT09dyl7bnVsbD09PXEmJihxPUIpO2JyZWFrfWEmJlxucSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHcsZyx1KTtudWxsPT09bT9sPXc6bS5zaWJsaW5nPXc7bT13O3E9Qn1pZih1PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoO3U8aC5sZW5ndGg7dSsrKWlmKHE9cChlLGhbdV0saykpZz1mKHEsZyx1KSxudWxsPT09bT9sPXE6bS5zaWJsaW5nPXEsbT1xO3JldHVybiBsfWZvcihxPWQoZSxxKTt1PGgubGVuZ3RoO3UrKylpZihCPUEocSxlLHUsaFt1XSxrKSlhJiZudWxsIT09Qi5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT1CLmtleT91OkIua2V5KSxnPWYoQixnLHUpLG51bGw9PT1tP2w9QjptLnNpYmxpbmc9QixtPUI7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBSKGUsZyxoLGspe3ZhciBsPWhjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBsP3goXCIxNTBcIik6dm9pZCAwO2g9bC5jYWxsKGgpO251bGw9PWg/eChcIjE1MVwiKTp2b2lkIDA7XG5mb3IodmFyIG09bD1udWxsLHE9Zyx1PWc9MCxCPW51bGwsdz1oLm5leHQoKTtudWxsIT09cSYmIXcuZG9uZTt1Kyssdz1oLm5leHQoKSl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdj10KGUscSx3LnZhbHVlLGspO2lmKG51bGw9PT12KXtxfHwocT1CKTticmVha31hJiZxJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodixnLHUpO251bGw9PT1tP2w9djptLnNpYmxpbmc9djttPXY7cT1CfWlmKHcuZG9uZSlyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PXAoZSx3LnZhbHVlLGspLG51bGwhPT13JiYoZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTtyZXR1cm4gbH1mb3IocT1kKGUscSk7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PUEocSxlLHUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGEmJm51bGwhPT13LmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PXcua2V5P3U6XG53LmtleSksZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1YYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBWYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PVhiOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PVhiP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1BZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxuay5zaWJsaW5nfWYudHlwZT09PVhiPyhkPVplKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1ZZShmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1BZihhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgV2I6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1iZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cblwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9YWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoemYoZikpcmV0dXJuIHYoYSxkLGYsaCk7aWYoaGMoZikpcmV0dXJuIFIoYSxkLGYsaCk7bCYmQmYoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDpoPWEudHlwZSx4KFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgRGY9Q2YoITApLEVmPUNmKCExKSxGZj17fSxOPXtjdXJyZW50OkZmfSxHZj17Y3VycmVudDpGZn0sSGY9e2N1cnJlbnQ6RmZ9O2Z1bmN0aW9uIElmKGEpe2E9PT1GZj94KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpmKGEsYil7RyhIZixiLGEpO0coR2YsYSxhKTtHKE4sRmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6aGUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPWhlKGIsYyl9RihOLGEpO0coTixiLGEpfWZ1bmN0aW9uIEtmKGEpe0YoTixhKTtGKEdmLGEpO0YoSGYsYSl9ZnVuY3Rpb24gTGYoYSl7SWYoSGYuY3VycmVudCk7dmFyIGI9SWYoTi5jdXJyZW50KTt2YXIgYz1oZShiLGEudHlwZSk7YiE9PWMmJihHKEdmLGEsYSksRyhOLGMsYSkpfWZ1bmN0aW9uIE1mKGEpe0dmLmN1cnJlbnQ9PT1hJiYoRihOLGEpLEYoR2YsYSkpfVxudmFyIE5mPTAsT2Y9MixQZj00LFFmPTgsUmY9MTYsU2Y9MzIsVGY9NjQsVWY9MTI4LFZmPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsV2Y9MCxYZj1udWxsLE89bnVsbCxQPW51bGwsWWY9bnVsbCxRPW51bGwsWmY9bnVsbCwkZj0wLGFnPW51bGwsYmc9MCxjZz0hMSxkZz1udWxsLGVnPTA7ZnVuY3Rpb24gZmcoKXt4KFwiMzIxXCIpfWZ1bmN0aW9uIGdnKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIWJkKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBoZyhhLGIsYyxkLGUsZil7V2Y9ZjtYZj1iO1A9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7VmYuY3VycmVudD1udWxsPT09UD9pZzpqZztiPWMoZCxlKTtpZihjZyl7ZG8gY2c9ITEsZWcrPTEsUD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbCxaZj1ZZixhZz1RPU89bnVsbCxWZi5jdXJyZW50PWpnLGI9YyhkLGUpO3doaWxlKGNnKTtkZz1udWxsO2VnPTB9VmYuY3VycmVudD1rZzthPVhmO2EubWVtb2l6ZWRTdGF0ZT1ZZjthLmV4cGlyYXRpb25UaW1lPSRmO2EudXBkYXRlUXVldWU9YWc7YS5lZmZlY3RUYWd8PWJnO2E9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2E/eChcIjMwMFwiKTp2b2lkIDA7cmV0dXJuIGJ9ZnVuY3Rpb24gbGcoKXtWZi5jdXJyZW50PWtnO1dmPTA7WmY9UT1ZZj1QPU89WGY9bnVsbDskZj0wO2FnPW51bGw7Ymc9MDtjZz0hMTtkZz1udWxsO2VnPTB9XG5mdW5jdGlvbiBtZygpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UT9ZZj1RPWE6UT1RLm5leHQ9YTtyZXR1cm4gUX1mdW5jdGlvbiBuZygpe2lmKG51bGwhPT1aZilRPVpmLFpmPVEubmV4dCxPPVAsUD1udWxsIT09Tz9PLm5leHQ6bnVsbDtlbHNle251bGw9PT1QP3goXCIzMTBcIik6dm9pZCAwO089UDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtRPW51bGw9PT1RP1lmPWE6US5uZXh0PWE7UD1PLm5leHR9cmV0dXJuIFF9ZnVuY3Rpb24gb2coYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBwZyhhKXt2YXIgYj1uZygpLGM9Yi5xdWV1ZTtudWxsPT09Yz94KFwiMzExXCIpOnZvaWQgMDtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTtpZigwPGVnKXt2YXIgZD1jLmRpc3BhdGNoO2lmKG51bGwhPT1kZyl7dmFyIGU9ZGcuZ2V0KGMpO2lmKHZvaWQgMCE9PWUpe2RnLmRlbGV0ZShjKTt2YXIgZj1iLm1lbW9pemVkU3RhdGU7ZG8gZj1hKGYsZS5hY3Rpb24pLGU9ZS5uZXh0O3doaWxlKG51bGwhPT1lKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPT09Yy5sYXN0JiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mO3JldHVybltmLGRdfX1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGRdfWQ9Yy5sYXN0O3ZhciBnPWIuYmFzZVVwZGF0ZTtmPWIuYmFzZVN0YXRlO251bGwhPT1nPyhudWxsIT09ZCYmKGQubmV4dD1udWxsKSxkPWcubmV4dCk6ZD1udWxsIT09ZD9kLm5leHQ6bnVsbDtpZihudWxsIT09XG5kKXt2YXIgaD1lPW51bGwsbD1kLGs9ITE7ZG97dmFyIG09bC5leHBpcmF0aW9uVGltZTttPFdmPyhrfHwoaz0hMCxoPWcsZT1mKSxtPiRmJiYoJGY9bSkpOmY9bC5lYWdlclJlZHVjZXI9PT1hP2wuZWFnZXJTdGF0ZTphKGYsbC5hY3Rpb24pO2c9bDtsPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWQpO2t8fChoPWcsZT1mKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPWg7Yi5iYXNlU3RhdGU9ZTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHJnKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09YWc/KGFnPXtsYXN0RWZmZWN0Om51bGx9LGFnLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPWFnLmxhc3RFZmZlY3QsbnVsbD09PWI/YWcubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsYWcubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gc2coYSxiLGMsZCl7dmFyIGU9bWcoKTtiZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB0ZyhhLGIsYyxkKXt2YXIgZT1uZygpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJmdnKGQsZy5kZXBzKSl7cmcoTmYsYyxmLGQpO3JldHVybn19Ymd8PWE7ZS5tZW1vaXplZFN0YXRlPXJnKGIsYyxmLGQpfWZ1bmN0aW9uIHVnKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gdmcoKXt9XG5mdW5jdGlvbiB3ZyhhLGIsYyl7MjU+ZWc/dm9pZCAwOngoXCIzMDFcIik7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PVhmfHxudWxsIT09ZCYmZD09PVhmKWlmKGNnPSEwLGE9e2V4cGlyYXRpb25UaW1lOldmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LG51bGw9PT1kZyYmKGRnPW5ldyBNYXApLGM9ZGcuZ2V0KGIpLHZvaWQgMD09PWMpZGcuc2V0KGIsYSk7ZWxzZXtmb3IoYj1jO251bGwhPT1iLm5leHQ7KWI9Yi5uZXh0O2IubmV4dD1hfWVsc2V7b2YoKTt2YXIgZT1sZigpO2U9bWYoZSxhKTt2YXIgZj17ZXhwaXJhdGlvblRpbWU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmKGYubmV4dD1oKTtnLm5leHQ9Zn1iLmxhc3Q9ZjtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1cbmR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGw9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWQobCxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1rO2lmKGJkKGssbCkpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31xZihhLGUpfX1cbnZhciBrZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmZyx1c2VDb250ZXh0OmZnLHVzZUVmZmVjdDpmZyx1c2VJbXBlcmF0aXZlSGFuZGxlOmZnLHVzZUxheW91dEVmZmVjdDpmZyx1c2VNZW1vOmZnLHVzZVJlZHVjZXI6ZmcsdXNlUmVmOmZnLHVzZVN0YXRlOmZnLHVzZURlYnVnVmFsdWU6Zmd9LGlnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7bWcoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHNnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg0LFBmfFNmLGEsYil9LFxudXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW1nKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW1nKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9d2cuYmluZChudWxsLFhmLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1tZygpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXt2YXIgYj1tZygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsXG5sYXN0UmVuZGVyZWRSZWR1Y2VyOm9nLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlRGVidWdWYWx1ZTp2Z30samc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6TSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGcoNTE2LFVmfFRmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB0Zyg0LFBmfFNmLHVnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxcbmIpe3JldHVybiB0Zyg0LFBmfFNmLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6cGcsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIG5nKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHBnKG9nLGEpfSx1c2VEZWJ1Z1ZhbHVlOnZnfSx4Zz1udWxsLHlnPW51bGwsemc9ITE7XG5mdW5jdGlvbiBBZyhhLGIpe3ZhciBjPUsoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBCZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gQ2coYSl7aWYoemcpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUJnKGEsYikpe2I9RGUoYyk7aWYoIWJ8fCFCZyhhLGIpKXthLmVmZmVjdFRhZ3w9Mjt6Zz0hMTt4Zz1hO3JldHVybn1BZyh4ZyxjKX14Zz1hO3lnPUVlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsemc9ITEseGc9YX19ZnVuY3Rpb24gRGcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxOCE9PWEudGFnOylhPWEucmV0dXJuO3hnPWF9ZnVuY3Rpb24gRWcoYSl7aWYoYSE9PXhnKXJldHVybiExO2lmKCF6ZylyZXR1cm4gRGcoYSksemc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiF4ZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9eWc7YjspQWcoYSxiKSxiPURlKGIpO0RnKGEpO3lnPXhnP0RlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIEZnKCl7eWc9eGc9bnVsbDt6Zz0hMX1cbnZhciBHZz1UYi5SZWFjdEN1cnJlbnRPd25lcixxZz0hMTtmdW5jdGlvbiBTKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/RWYoYixudWxsLGMsZCk6RGYoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gSGcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0lnKGIsZSk7ZD1oZyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFxZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLEpnKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtTKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFWZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxMZyhhLGIsZyxkLGUsZik7YT1ZZShjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmRkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIEpnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVhlKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBMZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZkZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihxZz0hMSxlPGYpP0pnKGEsYixmKTpNZyhhLGIsYyxkLGYpfWZ1bmN0aW9uIE5nKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gTWcoYSxiLGMsZCxlKXt2YXIgZj1KKGMpP0llOkguY3VycmVudDtmPUplKGIsZik7SWcoYixlKTtjPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBPZyhhLGIsYyxkLGUpe2lmKEooYykpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtJZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksdmYoYixjLGQsZSkseGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZ3ZihiLGcsZCxrKTtQZz0hMTt2YXIgdD1iLm1lbW9pemVkU3RhdGU7bD1nLnN0YXRlPXQ7dmFyIEE9Yi51cGRhdGVRdWV1ZTtudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksbD1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx0IT09bHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSxsPWIubWVtb2l6ZWRTdGF0ZSksKGg9UGd8fHVmKGIsYyxoLGQsdCxsLGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWwpLGcucHJvcHM9ZCxnLnN0YXRlPWwsZy5jb250ZXh0PWssZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOkwoYi50eXBlLGgpLGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09XG50eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspLFBnPSExLGw9Yi5tZW1vaXplZFN0YXRlLHQ9Zy5zdGF0ZT1sLEE9Yi51cGRhdGVRdWV1ZSxudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksdD1iLm1lbW9pemVkU3RhdGUpLGghPT1kfHxsIT09dHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSx0PWIubWVtb2l6ZWRTdGF0ZSksKG09UGd8fHVmKGIsYyxoLGQsbCx0LGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx0LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1cbnQpLGcucHJvcHM9ZCxnLnN0YXRlPXQsZy5jb250ZXh0PWssZD1tKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIFFnKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIFFnKGEsYixjLGQsZSxmKXtOZyhhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmUGUoYixjLCExKSxKZyhhLGIsZik7ZD1iLnN0YXRlTm9kZTtHZy5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1EZihiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPURmKGIsbnVsbCxoLGYpKTpTKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJlBlKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9NZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZNZShhLGIuY29udGV4dCwhMSk7SmYoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gU2coYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9Yi5tZW1vaXplZFN0YXRlO2lmKDA9PT0oYi5lZmZlY3RUYWcmNjQpKXtmPW51bGw7dmFyIGc9ITF9ZWxzZSBmPXt0aW1lZE91dEF0Om51bGwhPT1mP2YudGltZWRPdXRBdDowfSxnPSEwLGIuZWZmZWN0VGFnJj0tNjU7aWYobnVsbD09PWEpaWYoZyl7dmFyIGg9ZS5mYWxsYmFjazthPVplKG51bGwsZCwwLG51bGwpOzA9PT0oYi5tb2RlJjEpJiYoYS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCk7ZD1aZShoLGQsYyxudWxsKTthLnNpYmxpbmc9ZDtjPWE7Yy5yZXR1cm49ZC5yZXR1cm49Yn1lbHNlIGM9ZD1FZihiLG51bGwsZS5jaGlsZHJlbixjKTtlbHNlIG51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxoPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1YZShkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09XG5iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1kLmNoaWxkJiYoZS5jaGlsZD1nKSksZD1lLnNpYmxpbmc9WGUoaCxjLGguZXhwaXJhdGlvblRpbWUpLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpjPWQ9RGYoYixkLmNoaWxkLGUuY2hpbGRyZW4sYykpOihoPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9WmUobnVsbCxkLDAsbnVsbCksZS5jaGlsZD1oLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1lLnNpYmxpbmc9WmUoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1EZihiLGgsZS5jaGlsZHJlbixjKSksYi5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGU7Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gSmcoYSxiLGMpe251bGwhPT1hJiYoYi5jb250ZXh0RGVwZW5kZW5jaWVzPWEuY29udGV4dERlcGVuZGVuY2llcyk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3goXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBUZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8SS5jdXJyZW50KXFnPSEwO2Vsc2V7aWYoZDxjKXtxZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpSZyhiKTtGZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6SihiLnR5cGUpJiZPZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOlVnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiBTZyhhLGIsYyk7Yj1KZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gSmcoYSxiLGMpfX1lbHNlIHFnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPVxuYi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1KZShiLEguY3VycmVudCk7SWcoYixjKTtlPWhnKG51bGwsYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7bGcoKTtpZihKKGQpKXt2YXIgZj0hMDtPZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYma2YoYixkLGcsYSk7ZS51cGRhdGVyPXRmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7eGYoYixkLGEsYyk7Yj1RZyhudWxsLGIsZCwhMCxmLFxuYyl9ZWxzZSBiLnRhZz0wLFMobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9aGYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1XZShhKTtmPUwoYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9TWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz1PZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1IZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1LZyhudWxsLGIsYSxMKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6eChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksTWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsXG5lPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLE9nKGEsYixkLGUsYyk7Y2FzZSAzOlJnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD94KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpRmcoKSxiPUpnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKXlnPUVlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLHhnPWIsZT16Zz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPUVmKGIsbnVsbCxkLGMpKTooUyhhLGIsZCxjKSxGZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBMZihiKSxudWxsPT09YSYmQ2coYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLFxuZz1lLmNoaWxkcmVuLHhlKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZ4ZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxOZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUyhhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmQ2coYiksbnVsbDtjYXNlIDEzOnJldHVybiBTZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1EZihiLG51bGwsZCxjKTpTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLEhnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtVZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9YmQoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUkuY3VycmVudCl7Yj1KZyhhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgbD1oLmNvbnRleHREZXBlbmRlbmNpZXM7aWYobnVsbCE9PWwpe2c9aC5jaGlsZDtmb3IodmFyIGs9bC5maXJzdDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQmJjAhPT1cbihrLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYoaz1uZihjKSxrLnRhZz1zZixwZihoLGspKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2s9aC5hbHRlcm5hdGU7bnVsbCE9PWsmJmsuZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7az1jO2Zvcih2YXIgbT1oLnJldHVybjtudWxsIT09bTspe3ZhciBwPW0uYWx0ZXJuYXRlO2lmKG0uY2hpbGRFeHBpcmF0aW9uVGltZTxrKW0uY2hpbGRFeHBpcmF0aW9uVGltZT1rLG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8ayYmKHAuY2hpbGRFeHBpcmF0aW9uVGltZT1rKTtlbHNlIGlmKG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8aylwLmNoaWxkRXhwaXJhdGlvblRpbWU9aztlbHNlIGJyZWFrO209bS5yZXR1cm59bC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTticmVha31rPWsubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP1xubnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9fVMoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sSWcoYixjKSxlPU0oZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPUwoZSxiLnBlbmRpbmdQcm9wcyksZj1MKGUudHlwZSxmKSxLZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gTGcoYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09XG5kP2U6TChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEooZCk/KGE9ITAsT2UoYikpOmE9ITEsSWcoYixjKSx2ZihiLGQsZSxjKSx4ZihiLGQsZSxjKSxRZyhudWxsLGIsZCwhMCxhLGMpfXgoXCIxNTZcIil9dmFyIFZnPXtjdXJyZW50Om51bGx9LFdnPW51bGwsWGc9bnVsbCxZZz1udWxsO2Z1bmN0aW9uIFVnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0coVmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIFpnKGEpe3ZhciBiPVZnLmN1cnJlbnQ7RihWZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIElnKGEsYil7V2c9YTtZZz1YZz1udWxsO3ZhciBjPWEuY29udGV4dERlcGVuZGVuY2llcztudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZT49YiYmKHFnPSEwKTthLmNvbnRleHREZXBlbmRlbmNpZXM9bnVsbH1cbmZ1bmN0aW9uIE0oYSxiKXtpZihZZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpWWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PVhnPyhudWxsPT09V2c/eChcIjMwOFwiKTp2b2lkIDAsWGc9YixXZy5jb250ZXh0RGVwZW5kZW5jaWVzPXtmaXJzdDpiLGV4cGlyYXRpb25UaW1lOjB9KTpYZz1YZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgJGc9MCxyZj0xLHNmPTIsYWg9MyxQZz0hMTtmdW5jdGlvbiBiaChhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBjaChhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOiRnLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIGRoKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHBmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1iaChjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9Y2goZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9Y2goZCkpO251bGw9PT1lfHxkPT09ZT9kaChkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KGRoKGQsYiksZGgoZSxiKSk6KGRoKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gZWgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpOmZoKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gZmgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9Y2goYikpO3JldHVybiBifVxuZnVuY3Rpb24gZ2goYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSByZjpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgYWg6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAkZzphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2Ugc2Y6UGc9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB5ZihhLGIsYyxkLGUpe1BnPSExO2I9ZmgoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxsPWIuZmlyc3RVcGRhdGUsaz1mO251bGwhPT1sOyl7dmFyIG09bC5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1sLGY9ayksaDxtJiYoaD1tKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGwubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bDooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RFZmZlY3Q9bCkpKTtsPWwubmV4dH1tPW51bGw7Zm9yKGw9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1sOyl7dmFyIHA9bC5leHBpcmF0aW9uVGltZTtwPGU/KG51bGw9PT1tJiYobT1sLG51bGw9PT1nJiYoZj1rKSksaDxwJiYoaD1wKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1sOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bCkpKTtsPWwubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWspO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9a31cbmZ1bmN0aW9uIGhoKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTtpaChiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7aWgoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIGloKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIGpoKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6amMoYil9fWZ1bmN0aW9uIGtoKGEpe2EuZWZmZWN0VGFnfD00fXZhciBsaD12b2lkIDAsbWg9dm9pZCAwLG5oPXZvaWQgMCxvaD12b2lkIDA7bGg9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O21oPWZ1bmN0aW9uKCl7fTtcbm5oPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihOLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj12YyhnLGYpO2Q9dmMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPSRkKGcsZik7ZD0kZChnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWJlKGcsZik7ZD1iZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXRlKX1xZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGw9ZltjXTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgaz1kW2NdO2w9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZrIT09bCYmKG51bGwhPWt8fG51bGwhPWwpKWlmKFwic3R5bGVcIj09PWMpaWYobCl7Zm9yKGcgaW4gbCkhbC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmbFtnXSE9PWtbZ10mJihofHxcbihoPXt9KSxoW2ddPWtbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmbCE9PWsmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09Yz9sPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihyYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9ayYmc2UoZSxjKSxhfHxsPT09a3x8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGspKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZraChiKX19O29oPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZraChiKX07XG52YXIgcGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gcWgoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1qYyhjKSk7bnVsbCE9PWMmJmljKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJmljKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIHJoKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe3NoKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIHRoKGEsYixjKXtjPWMudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG97aWYoKGQudGFnJmEpIT09TmYpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWUmJmUoKX0oZC50YWcmYikhPT1OZiYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIHVoKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1uZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gdmgoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFJlJiZSZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYodm9pZCAwIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe3NoKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6cmgoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe3NoKGEsZil9YnJlYWs7Y2FzZSA1OnJoKGEpO2JyZWFrO2Nhc2UgNDp3aChhKX19XG5mdW5jdGlvbiB4aChhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIHloKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKHhoKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn14KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6eChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKGtlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHx4aChjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyZcbjIpY29udGludWUgYjtpZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9dGUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiB3aChhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz94KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYodmgoZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnKXtpZihudWxsIT09Yi5jaGlsZCl7ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYodmgoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gemgoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp0aChQZixRZixiKTticmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZDZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9bGYoKSkpO251bGwhPT1hJiZ1aChhLGQpO2M9XG5iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBwaCk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPUFoLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fXZhciBCaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBDaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDtjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7RGgoZCk7cWgoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBFaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09Rmg/Rmg9bmV3IFNldChbdGhpc10pOkZoLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7cWgoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBHaChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpKKGEudHlwZSkmJktlKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIEtmKGEpLExlKGEpLGI9YS5lZmZlY3RUYWcsMCE9PShiJjY0KT94KFwiMjg1XCIpOnZvaWQgMCxhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGE7Y2FzZSA1OnJldHVybiBNZihhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGI9YS5lZmZlY3RUYWcsYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAxODpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gWmcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBIaD1UYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLEloPVRiLlJlYWN0Q3VycmVudE93bmVyLEpoPTEwNzM3NDE4MjIsS2g9ITEsVD1udWxsLExoPW51bGwsVT0wLE1oPS0xLE5oPSExLFY9bnVsbCxPaD0hMSxQaD1udWxsLFFoPW51bGwsUmg9bnVsbCxGaD1udWxsO2Z1bmN0aW9uIFNoKCl7aWYobnVsbCE9PVQpZm9yKHZhciBhPVQucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTticmVhaztjYXNlIDU6TWYoYik7YnJlYWs7Y2FzZSA0OktmKGIpO2JyZWFrO2Nhc2UgMTA6WmcoYil9YT1hLnJldHVybn1MaD1udWxsO1U9MDtNaD0tMTtOaD0hMTtUPW51bGx9XG5mdW5jdGlvbiBUaCgpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYT1WLmVmZmVjdFRhZzthJjE2JiZrZShWLnN0YXRlTm9kZSxcIlwiKTtpZihhJjEyOCl7dmFyIGI9Vi5hbHRlcm5hdGU7bnVsbCE9PWImJihiPWIucmVmLG51bGwhPT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihudWxsKTpiLmN1cnJlbnQ9bnVsbCkpfXN3aXRjaChhJjE0KXtjYXNlIDI6eWgoVik7Vi5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OnpoKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODphPVYsd2goYSksYS5yZXR1cm49bnVsbCxhLmNoaWxkPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsLGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFVoKCl7Zm9yKDtudWxsIT09Vjspe2lmKFYuZWZmZWN0VGFnJjI1NilhOnt2YXIgYT1WLmFsdGVybmF0ZSxiPVY7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKE9mLE5mLGIpO2JyZWFrIGE7Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6TChiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrIGE7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWsgYTtkZWZhdWx0OngoXCIxNjNcIil9fVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFZoKGEsYil7Zm9yKDtudWxsIT09Vjspe3ZhciBjPVYuZWZmZWN0VGFnO2lmKGMmMzYpe3ZhciBkPVYuYWx0ZXJuYXRlLGU9VixmPWI7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKFJmLFNmLGUpO2JyZWFrO2Nhc2UgMTp2YXIgZz1lLnN0YXRlTm9kZTtpZihlLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kKWcuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBoPWUuZWxlbWVudFR5cGU9PT1lLnR5cGU/ZC5tZW1vaXplZFByb3BzOkwoZS50eXBlLGQubWVtb2l6ZWRQcm9wcyk7Zy5jb21wb25lbnREaWRVcGRhdGUoaCxkLm1lbW9pemVkU3RhdGUsZy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9ZD1lLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiZoaChlLGQsZyxmKTticmVhaztjYXNlIDM6ZD1lLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1kKXtnPW51bGw7aWYobnVsbCE9PWUuY2hpbGQpc3dpdGNoKGUuY2hpbGQudGFnKXtjYXNlIDU6Zz1cbmUuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPWUuY2hpbGQuc3RhdGVOb2RlfWhoKGUsZCxnLGYpfWJyZWFrO2Nhc2UgNTpmPWUuc3RhdGVOb2RlO251bGw9PT1kJiZlLmVmZmVjdFRhZyY0JiZ3ZShlLnR5cGUsZS5tZW1vaXplZFByb3BzKSYmZi5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp4KFwiMTYzXCIpfX1jJjEyOCYmKGU9Vi5yZWYsbnVsbCE9PWUmJihmPVYuc3RhdGVOb2RlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlP2UoZik6ZS5jdXJyZW50PWYpKTtjJjUxMiYmKFBoPWEpO1Y9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFdoKGEsYil7Umg9UWg9UGg9bnVsbDt2YXIgYz1XO1c9ITA7ZG97aWYoYi5lZmZlY3RUYWcmNTEyKXt2YXIgZD0hMSxlPXZvaWQgMDt0cnl7dmFyIGY9Yjt0aChVZixOZixmKTt0aChOZixUZixmKX1jYXRjaChnKXtkPSEwLGU9Z31kJiZzaChiLGUpfWI9Yi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1iKTtXPWM7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpO1h8fFd8fFloKDEwNzM3NDE4MjMsITEpfWZ1bmN0aW9uIG9mKCl7bnVsbCE9PVFoJiZCZShRaCk7bnVsbCE9PVJoJiZSaCgpfVxuZnVuY3Rpb24gWmgoYSxiKXtPaD1LaD0hMDthLmN1cnJlbnQ9PT1iP3goXCIxNzdcIik6dm9pZCAwO3ZhciBjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3goXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZSxlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtlZihhLGU+ZD9lOmQpO0loLmN1cnJlbnQ9bnVsbDtkPXZvaWQgMDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3VlPUJkO3ZlPVBkKCk7QmQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7dmFyIGY9dm9pZCAwO3RyeXtVaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1mb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtcbmY9dm9pZCAwO3RyeXtUaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1RZCh2ZSk7dmU9bnVsbDtCZD0hIXVlO3VlPW51bGw7YS5jdXJyZW50PWI7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e1ZoKGEsYyl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWlmKG51bGwhPT1kJiZudWxsIT09UGgpe3ZhciBnPVdoLmJpbmQobnVsbCxhLGQpO1FoPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gQWUoZyl9KTtSaD1nfUtoPU9oPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBRZSYmUWUoYi5zdGF0ZU5vZGUpO2M9Yi5leHBpcmF0aW9uVGltZTtiPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtiPVxuYj5jP2I6YzswPT09YiYmKEZoPW51bGwpOyRoKGEsYil9XG5mdW5jdGlvbiBhaShhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7VD1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVU7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDM6S2YoYik7TGUoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpRWcoYiksYi5lZmZlY3RUYWcmPS0zO21oKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTt2YXIgaD1JZihIZi5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpbmgoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBsPUlmKE4uY3VycmVudCk7aWYoRWcoYikpe2c9YjtlPWcuc3RhdGVOb2RlO3ZhciBrPWcudHlwZSxtPWcubWVtb2l6ZWRQcm9wcyxwPWg7ZVtGYV09ZztlW0dhXT1tO2Y9dm9pZCAwO2g9aztzd2l0Y2goaCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihrPTA7azxhYi5sZW5ndGg7aysrKUUoYWJba10sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkUoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLGUpO0UoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixlKTtFKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpFKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MoZSxtKTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07RShcImludmFsaWRcIixlKTtzZShwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2UoZSxtKSxFKFwiaW52YWxpZFwiLGUpLHNlKHAsXCJvbkNoYW5nZVwiKX1xZShoLG0pO2s9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihsPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/ZS50ZXh0Q29udGVudCE9PWwmJihrPVtcImNoaWxkcmVuXCIsbF0pOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmZS50ZXh0Q29udGVudCE9PVwiXCIrbCYmKGs9W1wiY2hpbGRyZW5cIixcIlwiK2xdKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9bCYmc2UocCxmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlJiKGUpO0FjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIoZSk7ZWUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXRlKX1mPWs7Zy51cGRhdGVRdWV1ZT1mO2c9bnVsbCE9PWY/ITA6ITE7ZyYma2goYil9ZWxzZXttPWI7cD1mO2U9ZztrPTk9PT1oLm5vZGVUeXBlP2g6aC5vd25lckRvY3VtZW50O2w9PT1mZS5odG1sJiYobD1nZShwKSk7bD09PWZlLmh0bWw/XCJzY3JpcHRcIj09PXA/KGU9ay5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsaz1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZS5pcz9rPWsuY3JlYXRlRWxlbWVudChwLHtpczplLmlzfSk6KGs9ay5jcmVhdGVFbGVtZW50KHApLFwic2VsZWN0XCI9PT1wJiYocD1rLGUubXVsdGlwbGU/cC5tdWx0aXBsZT0hMDplLnNpemUmJihwLnNpemU9ZS5zaXplKSkpOms9ay5jcmVhdGVFbGVtZW50TlMobCxwKTtlPWs7ZVtGYV09bTtlW0dhXT1nO2xoKGUsYiwhMSwhMSk7cD1lO2s9ZjttPWc7dmFyIHQ9aCxBPXJlKGssbSk7c3dpdGNoKGspe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RShcImxvYWRcIixcbnApO2g9bTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWIubGVuZ3RoO2grKylFKGFiW2hdLHApO2g9bTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLHApO0UoXCJsb2FkXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RShcInJlc2V0XCIscCk7RShcInN1Ym1pdFwiLHApO2g9bTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixwKTtoPW07YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MocCxtKTtoPXZjKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9JGQocCxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6cC5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O2g9bih7fSxtLHt2YWx1ZTp2b2lkIDB9KTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShwLFxubSk7aD1iZShwLG0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXFlKGssaCk7bD12b2lkIDA7dmFyIHY9ayxSPXAsdT1oO2ZvcihsIGluIHUpaWYodS5oYXNPd25Qcm9wZXJ0eShsKSl7dmFyIHE9dVtsXTtcInN0eWxlXCI9PT1sP29lKFIscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8ocT1xP3EuX19odG1sOnZvaWQgMCxudWxsIT1xJiZqZShSLHEpKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCI9PT10eXBlb2YgcT8oXCJ0ZXh0YXJlYVwiIT09dnx8XCJcIiE9PXEpJiZrZShSLHEpOlwibnVtYmVyXCI9PT10eXBlb2YgcSYma2UoUixcIlwiK3EpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihyYS5oYXNPd25Qcm9wZXJ0eShsKT9udWxsIT1xJiZzZSh0LGwpOm51bGwhPXEmJnRjKFIsbCxxLEEpKX1zd2l0Y2goayl7Y2FzZSBcImlucHV0XCI6UmIocCk7XG5BYyhwLG0sITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlJiKHApO2VlKHAsbSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPW0udmFsdWUmJnAuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3VjKG0udmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6aD1wO2gubXVsdGlwbGU9ISFtLm11bHRpcGxlO3A9bS52YWx1ZTtudWxsIT1wP2FlKGgsISFtLm11bHRpcGxlLHAsITEpOm51bGwhPW0uZGVmYXVsdFZhbHVlJiZhZShoLCEhbS5tdWx0aXBsZSxtLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYocC5vbmNsaWNrPXRlKX0oZz13ZShmLGcpKSYma2goYik7Yi5zdGF0ZU5vZGU9ZX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMDticmVhaztjYXNlIDY6ZSYmbnVsbCE9Yi5zdGF0ZU5vZGU/b2goZSxiLGUubWVtb2l6ZWRQcm9wcyxnKTooXCJzdHJpbmdcIiE9PVxudHlwZW9mIGcmJihudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2NlwiKTp2b2lkIDApLGU9SWYoSGYuY3VycmVudCksSWYoTi5jdXJyZW50KSxFZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltGYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZraChiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tGYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7VD1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnfHxmKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6S2YoYik7bWgoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkooYi50eXBlKSYmS2UoYik7YnJlYWs7Y2FzZSAxODpicmVhaztkZWZhdWx0OngoXCIxNTZcIil9VD1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVQpcmV0dXJuIFQ7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmXG4oYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPUdoKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGJpKGEpe3ZhciBiPVRnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1haShhKSk7SWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gY2koYSxiKXtLaD94KFwiMjQzXCIpOnZvaWQgMDtvZigpO0toPSEwO3ZhciBjPUhoLmN1cnJlbnQ7SGguY3VycmVudD1rZzt2YXIgZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGQhPT1VfHxhIT09TGh8fG51bGw9PT1UKVNoKCksTGg9YSxVPWQsVD1YZShMaC5jdXJyZW50LG51bGwsVSksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZT0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1UJiYhZGkoKTspVD1iaShUKTtlbHNlIGZvcig7bnVsbCE9PVQ7KVQ9YmkoVCl9Y2F0Y2godSl7aWYoWWc9WGc9V2c9bnVsbCxsZygpLG51bGw9PT1UKWU9ITAsRGgodSk7ZWxzZXtudWxsPT09VD94KFwiMjcxXCIpOnZvaWQgMDt2YXIgZj1ULGc9Zi5yZXR1cm47aWYobnVsbD09PWcpZT0hMCxEaCh1KTtlbHNle2E6e3ZhciBoPWEsbD1nLGs9ZixtPXU7Zz1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PVxubSYmXCJvYmplY3RcIj09PXR5cGVvZiBtJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS50aGVuKXt2YXIgcD1tO209bDt2YXIgdD0tMSxBPS0xO2Rve2lmKDEzPT09bS50YWcpe3ZhciB2PW0uYWx0ZXJuYXRlO2lmKG51bGwhPT12JiYodj12Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXYpKXtBPTEwKigxMDczNzQxODIyLXYudGltZWRPdXRBdCk7YnJlYWt9dj1tLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHYpaWYoMD49dil0PTA7ZWxzZSBpZigtMT09PXR8fHY8dCl0PXZ9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1sO2Rve2lmKHY9MTM9PT1tLnRhZyl2PXZvaWQgMD09PW0ubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bS5tZW1vaXplZFN0YXRlO2lmKHYpe2w9bS51cGRhdGVRdWV1ZTtudWxsPT09bD8obD1uZXcgU2V0LGwuYWRkKHApLG0udXBkYXRlUXVldWU9bCk6bC5hZGQocCk7aWYoMD09PShtLm1vZGUmMSkpe20uZWZmZWN0VGFnfD1cbjY0O2suZWZmZWN0VGFnJj0tMTk1NzsxPT09ay50YWcmJihudWxsPT09ay5hbHRlcm5hdGU/ay50YWc9MTc6KGc9bmYoMTA3Mzc0MTgyMyksZy50YWc9c2YscGYoayxnKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9aDtsPWc7dmFyIFI9ay5waW5nQ2FjaGU7bnVsbD09PVI/KFI9ay5waW5nQ2FjaGU9bmV3IEJoLHY9bmV3IFNldCxSLnNldChwLHYpKToodj1SLmdldChwKSx2b2lkIDA9PT12JiYodj1uZXcgU2V0LFIuc2V0KHAsdikpKTt2LmhhcyhsKXx8KHYuYWRkKGwpLGs9ZWkuYmluZChudWxsLGsscCxsKSxwLnRoZW4oayxrKSk7LTE9PT10P2g9MTA3Mzc0MTgyMzooLTE9PT1BJiYoQT0xMCooMTA3Mzc0MTgyMi1nZihoLGcpKS01RTMpLGg9QSt0KTswPD1oJiZNaDxoJiYoTWg9aCk7bS5lZmZlY3RUYWd8PTIwNDg7bS5leHBpcmF0aW9uVGltZT1nO2JyZWFrIGF9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1FcnJvcigoaWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcblwiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIramMoaykpfU5oPSEwO209amgobSxrKTtoPWw7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aC5lZmZlY3RUYWd8PTIwNDg7aC5leHBpcmF0aW9uVGltZT1nO2c9Q2goaCxtLGcpO2VoKGgsZyk7YnJlYWsgYTtjYXNlIDE6aWYodD1tLEE9aC50eXBlLGs9aC5zdGF0ZU5vZGUsMD09PShoLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1rJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhrKSkpKXtoLmVmZmVjdFRhZ3w9MjA0ODtcbmguZXhwaXJhdGlvblRpbWU9ZztnPUVoKGgsdCxnKTtlaChoLGcpO2JyZWFrIGF9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpfVQ9YWkoZik7Y29udGludWV9fX1icmVha313aGlsZSgxKTtLaD0hMTtIaC5jdXJyZW50PWM7WWc9WGc9V2c9bnVsbDtsZygpO2lmKGUpTGg9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2UgaWYobnVsbCE9PVQpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2M9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09Yz94KFwiMjgxXCIpOnZvaWQgMDtMaD1udWxsO2lmKE5oKXtlPWEubGF0ZXN0UGVuZGluZ1RpbWU7Zj1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7Zz1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMCE9PWUmJmU8ZHx8MCE9PWYmJmY8ZHx8MCE9PWcmJmc8ZCl7ZmYoYSxkKTtmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLC0xKTtyZXR1cm59aWYoIWEuZGlkRXJyb3ImJmIpe2EuZGlkRXJyb3I9ITA7ZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWQ7XG5iPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztmaShhLGMsZCxiLC0xKTtyZXR1cm59fWImJi0xIT09TWg/KGZmKGEsZCksYj0xMCooMTA3Mzc0MTgyMi1nZihhLGQpKSxiPE1oJiYoTWg9YiksYj0xMCooMTA3Mzc0MTgyMi1sZigpKSxiPU1oLWIsZmkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWQsYS5maW5pc2hlZFdvcms9Yyl9fVxuZnVuY3Rpb24gc2goYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Rmh8fCFGaC5oYXMoZCkpKXthPWpoKGIsYSk7YT1FaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT1qaChiLGEpO2E9Q2goYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7cWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPWpoKGIsYSksYz1DaChhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxxZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIG1mKGEsYil7dmFyIGM9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCgpLGQ9dm9pZCAwO2lmKDA9PT0oYi5tb2RlJjEpKWQ9MTA3Mzc0MTgyMztlbHNlIGlmKEtoJiYhT2gpZD1VO2Vsc2V7c3dpdGNoKGMpe2Nhc2Ugci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eTpkPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eTpkPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX0xvd1ByaW9yaXR5OmNhc2Ugci51bnN0YWJsZV9JZGxlUHJpb3JpdHk6ZD0xO2JyZWFrO2RlZmF1bHQ6eChcIjMxM1wiKX1udWxsIT09TGgmJmQ9PT1VJiYtLWR9Yz09PXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkmJlxuKDA9PT1naXx8ZDxnaSkmJihnaT1kKTtyZXR1cm4gZH1mdW5jdGlvbiBlaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1MaCYmVT09PWMpTGg9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztkZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmWGgoYSxjKX19ZnVuY3Rpb24gQWgoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1sZigpO2I9bWYoYixhKTthPWhpKGEsYik7bnVsbCE9PWEmJihjZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmWGgoYSxiKSl9XG5mdW5jdGlvbiBoaShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gcWYoYSxiKXthPWhpKGEsYik7bnVsbCE9PWEmJighS2gmJjAhPT1VJiZiPlUmJlNoKCksY2YoYSxiKSxLaCYmIU9oJiZMaD09PWF8fFhoKGEsYS5leHBpcmF0aW9uVGltZSksaWk+amkmJihpaT0wLHgoXCIxODVcIikpKX1mdW5jdGlvbiBraShhLGIsYyxkLGUpe3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX12YXIgbGk9bnVsbCxZPW51bGwsbWk9MCxuaT12b2lkIDAsVz0hMSxvaT1udWxsLFo9MCxnaT0wLHBpPSExLHFpPW51bGwsWD0hMSxyaT0hMSxzaT1udWxsLHRpPXIudW5zdGFibGVfbm93KCksdWk9MTA3Mzc0MTgyMi0odGkvMTB8MCksdmk9dWksamk9NTAsaWk9MCx3aT1udWxsO2Z1bmN0aW9uIHhpKCl7dWk9MTA3Mzc0MTgyMi0oKHIudW5zdGFibGVfbm93KCktdGkpLzEwfDApfVxuZnVuY3Rpb24geWkoYSxiKXtpZigwIT09bWkpe2lmKGI8bWkpcmV0dXJuO251bGwhPT1uaSYmci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhuaSl9bWk9YjthPXIudW5zdGFibGVfbm93KCktdGk7bmk9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHppLHt0aW1lb3V0OjEwKigxMDczNzQxODIyLWIpLWF9KX1mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2EuZXhwaXJhdGlvblRpbWU9ZDswIT09ZXx8ZGkoKT8wPGUmJihhLnRpbWVvdXRIYW5kbGU9eWUoQWkuYmluZChudWxsLGEsYixjKSxlKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9Yil9ZnVuY3Rpb24gQWkoYSxiLGMpe2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWM7YS5maW5pc2hlZFdvcms9Yjt4aSgpO3ZpPXVpO0JpKGEsYyl9ZnVuY3Rpb24gJGgoYSxiKXthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1cbmZ1bmN0aW9uIGxmKCl7aWYoVylyZXR1cm4gdmk7Q2koKTtpZigwPT09Wnx8MT09PVopeGkoKSx2aT11aTtyZXR1cm4gdml9ZnVuY3Rpb24gWGgoYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1ZPyhsaT1ZPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooWT1ZLm5leHRTY2hlZHVsZWRSb290PWEsWS5uZXh0U2NoZWR1bGVkUm9vdD1saSkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7V3x8KFg/cmkmJihvaT1hLFo9MTA3Mzc0MTgyMyxEaShhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9ZaCgxMDczNzQxODIzLCExKTp5aShhLGIpKX1cbmZ1bmN0aW9uIENpKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVkpZm9yKHZhciBjPVksZD1saTtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09WT94KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7bGk9WT1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09bGkpbGk9ZT1kLm5leHRTY2hlZHVsZWRSb290LFkubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09WSl7WT1jO1kubmV4dFNjaGVkdWxlZFJvb3Q9bGk7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09WSlicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fW9pPWI7Wj1hfXZhciBFaT0hMTtmdW5jdGlvbiBkaSgpe3JldHVybiBFaT8hMDpyLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/RWk9ITA6ITF9ZnVuY3Rpb24gemkoKXt0cnl7aWYoIWRpKCkmJm51bGwhPT1saSl7eGkoKTt2YXIgYT1saTtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZ1aTw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249dWkpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09bGkpfVloKDAsITApfWZpbmFsbHl7RWk9ITF9fVxuZnVuY3Rpb24gWWgoYSxiKXtDaSgpO2lmKGIpZm9yKHhpKCksdmk9dWk7bnVsbCE9PW9pJiYwIT09WiYmYTw9WiYmIShFaSYmdWk+Wik7KURpKG9pLFosdWk+WiksQ2koKSx4aSgpLHZpPXVpO2Vsc2UgZm9yKDtudWxsIT09b2kmJjAhPT1aJiZhPD1aOylEaShvaSxaLCExKSxDaSgpO2ImJihtaT0wLG5pPW51bGwpOzAhPT1aJiZ5aShvaSxaKTtpaT0wO3dpPW51bGw7aWYobnVsbCE9PXNpKWZvcihhPXNpLHNpPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7cGl8fChwaT0hMCxxaT1kKX19aWYocGkpdGhyb3cgYT1xaSxxaT1udWxsLHBpPSExLGE7fWZ1bmN0aW9uIEJpKGEsYil7Vz94KFwiMjUzXCIpOnZvaWQgMDtvaT1hO1o9YjtEaShhLGIsITEpO1loKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gRGkoYSxiLGMpe1c/eChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9GaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLHplKGQpKSxjaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihkaSgpP2EuZmluaXNoZWRXb3JrPWQ6RmkoYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmRmkoYSxkLGIpKTtXPSExfVxuZnVuY3Rpb24gRmkoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09c2k/c2k9W2RdOnNpLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09d2k/aWkrKzood2k9YSxpaT0wKTtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7WmgoYSxiKX0pfWZ1bmN0aW9uIERoKGEpe251bGw9PT1vaT94KFwiMjQ2XCIpOnZvaWQgMDtvaS5leHBpcmF0aW9uVGltZT0wO3BpfHwocGk9ITAscWk9YSl9ZnVuY3Rpb24gR2koYSxiKXt2YXIgYz1YO1g9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFg9Yyl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEhpKGEsYil7aWYoWCYmIXJpKXtyaT0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtyaT0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gSWkoYSxiLGMpe1h8fFd8fDA9PT1naXx8KFloKGdpLCExKSxnaT0wKTt2YXIgZD1YO1g9ITA7dHJ5e3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjKX0pfWZpbmFsbHl7KFg9ZCl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEppKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWVkKGMpJiYxPT09Yy50YWc/dm9pZCAwOngoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoSihnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3goXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoSihoKSl7Yz1OZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1IZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1uZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5vZigpO3BmKGYsZSk7cWYoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBLaShhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1sZigpO2U9bWYoZixlKTtyZXR1cm4gSmkoYSxiLGMsZSxkKX1mdW5jdGlvbiBMaShhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIE1pKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6V2Isa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5BYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOnljKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1LYShkKTtlP3ZvaWQgMDp4KFwiOTBcIik7U2IoZCk7eWMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZhZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gTmkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWxmKCkrNTAwKS8yNXwwKSsxKTtiPj1KaCYmKGI9SmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Smg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfU5pLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOngoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBPaTtKaShhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5OaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5OaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6eChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD94KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO0JpKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O05pLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBPaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfU9pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5PaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIFBpKGEsYixjKXtiPUsoMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuUGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBPaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7S2koYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtQaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgT2k7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO0tpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307UGkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IE9pO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtLaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuUGkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IE5pKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gUWkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUdiPUdpO0hiPUlpO0liPWZ1bmN0aW9uKCl7V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApfTtcbmZ1bmN0aW9uIFJpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgUGkoYSwhMSxiKX1cbmZ1bmN0aW9uIFNpKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1MaShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPVJpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1IaShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gTGkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIFRpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIE1pKGEsYixudWxsLGMpfVxudmFyIFZpPXtjcmVhdGVQb3J0YWw6VGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj94KFwiMTg4XCIpOngoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9aGQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIFNpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtRaShjKT92b2lkIDA6eChcIjIwMFwiKTtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/XG54KFwiMzhcIik6dm9pZCAwO3JldHVybiBTaShhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtRaShhKT92b2lkIDA6eChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KEhpKGZ1bmN0aW9uKCl7U2kobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gVGkuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOkdpLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpJaSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtXP3goXCIxODdcIik6dm9pZCAwO3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGtpKGEsYil9ZmluYWxseXtYPWMsWWgoMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OlVpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1cblg7WD0hMDt0cnl7a2koYSl9ZmluYWxseXsoWD1iKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltJYSxKYSxLYSxCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscGEsUWEsZnVuY3Rpb24oYSl7eWEoYSxQYSl9LEViLEZiLERkLERhXX19O2Z1bmN0aW9uIFVpKGEsYil7UWkoYSk/dm9pZCAwOngoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBQaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX1cbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBUZShuKHt9LGEse292ZXJyaWRlUHJvcHM6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SGEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi44LjZcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgV2k9e2RlZmF1bHQ6Vml9LFhpPVdpJiZWaXx8V2k7bW9kdWxlLmV4cG9ydHM9WGkuZGVmYXVsdHx8WGk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjEzLjZcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZD1udWxsLGU9ITEsZz0zLGs9LTEsbD0tMSxtPSExLG49ITE7ZnVuY3Rpb24gcCgpe2lmKCFtKXt2YXIgYT1kLmV4cGlyYXRpb25UaW1lO24/cSgpOm49ITA7cih0LGEpfX1cbmZ1bmN0aW9uIHUoKXt2YXIgYT1kLGI9ZC5uZXh0O2lmKGQ9PT1iKWQ9bnVsbDtlbHNle3ZhciBjPWQucHJldmlvdXM7ZD1jLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbDtjPWEuY2FsbGJhY2s7Yj1hLmV4cGlyYXRpb25UaW1lO2E9YS5wcmlvcml0eUxldmVsO3ZhciBmPWcsUT1sO2c9YTtsPWI7dHJ5e3ZhciBoPWMoKX1maW5hbGx5e2c9ZixsPVF9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGgpaWYoaD17Y2FsbGJhY2s6aCxwcmlvcml0eUxldmVsOmEsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH0sbnVsbD09PWQpZD1oLm5leHQ9aC5wcmV2aW91cz1oO2Vsc2V7Yz1udWxsO2E9ZDtkb3tpZihhLmV4cGlyYXRpb25UaW1lPj1iKXtjPWE7YnJlYWt9YT1hLm5leHR9d2hpbGUoYSE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9aCxwKCkpO2I9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1oO2gubmV4dD1jO2gucHJldmlvdXM9XG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWQ/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZTtlPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09ZDspe3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoZC5leHBpcmF0aW9uVGltZTw9Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPD1jKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWQpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmIXcoKSl9fWZpbmFsbHl7bT0hMSxlPWIsbnVsbCE9PWQ/cCgpOm49ITEsdigpfX1cbnZhciB4PURhdGUseT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjYW5jZWxBbmltYXRpb25GcmFtZT9jYW5jZWxBbmltYXRpb25GcmFtZTp2b2lkIDAsQyxEO2Z1bmN0aW9uIEUoYSl7Qz1BKGZ1bmN0aW9uKGIpe3ooRCk7YShiKX0pO0Q9eShmdW5jdGlvbigpe0IoQyk7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sMTAwKX1cbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBGPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEYubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKX07dmFyIHIscSx3LEc9bnVsbDtcInVuZGVmaW5lZFwiIT09dHlwZW9mIHdpbmRvdz9HPXdpbmRvdzpcInVuZGVmaW5lZFwiIT09dHlwZW9mIGdsb2JhbCYmKEc9Z2xvYmFsKTtcbmlmKEcmJkcuX3NjaGVkTW9jayl7dmFyIEg9Ry5fc2NoZWRNb2NrO3I9SFswXTtxPUhbMV07dz1IWzJdO2V4cG9ydHMudW5zdGFibGVfbm93PUhbM119ZWxzZSBpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgST1udWxsLEo9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUkpdHJ5e0koYSl9ZmluYWxseXtJPW51bGx9fTtyPWZ1bmN0aW9uKGEpe251bGwhPT1JP3NldFRpbWVvdXQociwwLGEpOihJPWEsc2V0VGltZW91dChKLDAsITEpKX07cT1mdW5jdGlvbigpe0k9bnVsbH07dz1mdW5jdGlvbigpe3JldHVybiExfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIEImJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSk7dmFyIEs9bnVsbCxMPSExLE09LTEsTj0hMSxPPSExLFA9MCxSPTMzLFM9MzM7dz1mdW5jdGlvbigpe3JldHVybiBQPD1leHBvcnRzLnVuc3RhYmxlX25vdygpfTt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7TD0hMTt2YXIgYT1LLGI9TTtLPW51bGw7TT0tMTt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpLGY9ITE7aWYoMD49UC1jKWlmKC0xIT09YiYmYjw9YylmPSEwO2Vsc2V7Tnx8KE49ITAsRShWKSk7Sz1hO009YjtyZXR1cm59aWYobnVsbCE9PWEpe089ITA7dHJ5e2EoZil9ZmluYWxseXtPPSExfX19O1xudmFyIFY9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUspe0UoVik7dmFyIGI9YS1QK1M7YjxTJiZSPFM/KDg+YiYmKGI9OCksUz1iPFI/UjpiKTpSPWI7UD1hK1M7THx8KEw9ITAsVS5wb3N0TWVzc2FnZSh2b2lkIDApKX1lbHNlIE49ITF9O3I9ZnVuY3Rpb24oYSxiKXtLPWE7TT1iO098fDA+Yj9VLnBvc3RNZXNzYWdlKHZvaWQgMCk6Tnx8KE49ITAsRShWKSl9O3E9ZnVuY3Rpb24oKXtLPW51bGw7TD0hMTtNPS0xfX1leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtcbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9ZyxmPWs7Zz1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChnKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1nfXZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWMrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGcpe2Nhc2UgMTpiPWMrLTE7YnJlYWs7Y2FzZSAyOmI9YysyNTA7YnJlYWs7Y2FzZSA1OmI9YysxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWMrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1jKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6ZyxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09ZClkPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7Yz1udWxsO3ZhciBmPWQ7ZG97aWYoZi5leHBpcmF0aW9uVGltZT5iKXtjPWY7YnJlYWt9Zj1mLm5leHR9d2hpbGUoZiE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9YSxwKCkpO1xuYj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWE7YS5uZXh0PWM7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpZD1udWxsO2Vsc2V7YT09PWQmJihkPWIpO3ZhciBjPWEucHJldmlvdXM7Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1nO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2c9YyxrPWYsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gZ307XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWUmJihudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWQmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBkfTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgU3dpdGNoLCBSb3V0ZSB9IGZyb20gXCJyZWFjdC1yb3V0ZXJcIjtcclxuaW1wb3J0IEhvbWUgZnJvbSBcIi4uL2NvbXBvbmVudHMvSG9tZVwiO1xyXG5pbXBvcnQgVXNlcnNMaXN0IGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJzTGlzdFwiO1xyXG5cclxuZnVuY3Rpb24gUm91dGVzKCkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8U3dpdGNoPlxyXG4gICAgICA8Um91dGUgZXhhY3QgcGF0aD1cIi9cIiBjb21wb25lbnQ9e0hvbWV9IC8+XHJcbiAgICAgIDxSb3V0ZSBwYXRoPVwiL3VzZXJzXCIgY29tcG9uZW50PXtVc2Vyc0xpc3R9IC8+XHJcbiAgICA8L1N3aXRjaD5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSb3V0ZXM7XHJcbiIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxudmFyIF9ndWQgPSByZXF1aXJlKCdndWQnKTtcblxudmFyIF9ndWQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ3VkKTtcblxudmFyIF93YXJuaW5nID0gcmVxdWlyZSgnZmJqcy9saWIvd2FybmluZycpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIE1BWF9TSUdORURfMzFfQklUX0lOVCA9IDEwNzM3NDE4MjM7XG5cbi8vIElubGluZWQgT2JqZWN0LmlzIHBvbHlmaWxsLlxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG5mdW5jdGlvbiBvYmplY3RJcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlRXZlbnRFbWl0dGVyKHZhbHVlKSB7XG4gIHZhciBoYW5kbGVycyA9IFtdO1xuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiBvbihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgIH0sXG4gICAgb2ZmOiBmdW5jdGlvbiBvZmYoaGFuZGxlcikge1xuICAgICAgaGFuZGxlcnMgPSBoYW5kbGVycy5maWx0ZXIoZnVuY3Rpb24gKGgpIHtcbiAgICAgICAgcmV0dXJuIGggIT09IGhhbmRsZXI7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICB2YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gaGFuZGxlcih2YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBvbmx5Q2hpbGQoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW5bMF0gOiBjaGlsZHJlbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUmVhY3RDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY2FsY3VsYXRlQ2hhbmdlZEJpdHMpIHtcbiAgdmFyIF9Qcm92aWRlciRjaGlsZENvbnRleCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlO1xuXG4gIHZhciBjb250ZXh0UHJvcCA9ICdfX2NyZWF0ZS1yZWFjdC1jb250ZXh0LScgKyAoMCwgX2d1ZDIuZGVmYXVsdCkoKSArICdfXyc7XG5cbiAgdmFyIFByb3ZpZGVyID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gICAgZnVuY3Rpb24gUHJvdmlkZXIoKSB7XG4gICAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJvdmlkZXIpO1xuXG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9Db21wb25lbnQuY2FsbC5hcHBseShfQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSksIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICAgIH1cblxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHMgPSB2b2lkIDA7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7IC8vIE5vIGNoYW5nZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gdHlwZW9mIGNhbGN1bGF0ZUNoYW5nZWRCaXRzID09PSAnZnVuY3Rpb24nID8gY2FsY3VsYXRlQ2hhbmdlZEJpdHMob2xkVmFsdWUsIG5ld1ZhbHVlKSA6IE1BWF9TSUdORURfMzFfQklUX0lOVDtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgKDAsIF93YXJuaW5nMi5kZWZhdWx0KSgoY2hhbmdlZEJpdHMgJiBNQVhfU0lHTkVEXzMxX0JJVF9JTlQpID09PSBjaGFuZ2VkQml0cywgJ2NhbGN1bGF0ZUNoYW5nZWRCaXRzOiBFeHBlY3RlZCB0aGUgcmV0dXJuIHZhbHVlIHRvIGJlIGEgJyArICczMS1iaXQgaW50ZWdlci4gSW5zdGVhZCByZWNlaXZlZDogJXMnLCBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtjb250ZXh0UHJvcF0gPSBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdC5pc1JlcXVpcmVkLCBfUHJvdmlkZXIkY2hpbGRDb250ZXgpO1xuXG4gIHZhciBDb25zdW1lciA9IGZ1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICAgIF9pbmhlcml0cyhDb25zdW1lciwgX0NvbXBvbmVudDIpO1xuXG4gICAgZnVuY3Rpb24gQ29uc3VtZXIoKSB7XG4gICAgICB2YXIgX3RlbXAyLCBfdGhpczIsIF9yZXQyO1xuXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29uc3VtZXIpO1xuXG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfcmV0MiA9IChfdGVtcDIgPSAoX3RoaXMyID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudDIuY2FsbC5hcHBseShfQ29tcG9uZW50MiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpczIpLCBfdGhpczIuc3RhdGUgPSB7XG4gICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgfSwgX3RoaXMyLm9uVXBkYXRlID0gZnVuY3Rpb24gKG5ld1ZhbHVlLCBjaGFuZ2VkQml0cykge1xuICAgICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gX3RoaXMyLm9ic2VydmVkQml0cyB8IDA7XG4gICAgICAgIGlmICgob2JzZXJ2ZWRCaXRzICYgY2hhbmdlZEJpdHMpICE9PSAwKSB7XG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHsgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpIH0pO1xuICAgICAgICB9XG4gICAgICB9LCBfdGVtcDIpLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpczIsIF9yZXQyKTtcbiAgICB9XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gbmV4dFByb3BzLm9ic2VydmVkQml0cztcblxuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgLy8gU3Vic2NyaWJlIHRvIGFsbCBjaGFuZ2VzIGJ5IGRlZmF1bHRcbiAgICAgIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG4gICAgICB2YXIgb2JzZXJ2ZWRCaXRzID0gdGhpcy5wcm9wcy5vYnNlcnZlZEJpdHM7XG5cbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIC8vIFN1YnNjcmliZSB0byBhbGwgY2hhbmdlcyBieSBkZWZhdWx0XG4gICAgICA6IG9ic2VydmVkQml0cztcbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9mZih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24gZ2V0VmFsdWUoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5nZXQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gb25seUNoaWxkKHRoaXMucHJvcHMuY2hpbGRyZW4pKHRoaXMuc3RhdGUudmFsdWUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gQ29uc3VtZXI7XG4gIH0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbiAgQ29uc3VtZXIuY29udGV4dFR5cGVzID0gKF9Db25zdW1lciRjb250ZXh0VHlwZSA9IHt9LCBfQ29uc3VtZXIkY29udGV4dFR5cGVbY29udGV4dFByb3BdID0gX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XG5cblxuICByZXR1cm4ge1xuICAgIFByb3ZpZGVyOiBQcm92aWRlcixcbiAgICBDb25zdW1lcjogQ29uc3VtZXJcbiAgfTtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUmVhY3RDb250ZXh0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8vIEBmbG93XG4ndXNlIHN0cmljdCc7XG5cbnZhciBrZXkgPSAnX19nbG9iYWxfdW5pcXVlX2lkX18nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gZ2xvYmFsW2tleV0gPSAoZ2xvYmFsW2tleV0gfHwgMCkgKyAxO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCcuL2VtcHR5RnVuY3Rpb24nKTtcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBlbXB0eUZ1bmN0aW9uO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICsgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgIH0pO1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uIHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArICdtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5pbmRleE9mKCdGYWlsZWQgQ29tcG9zaXRlIHByb3BUeXBlOiAnKSA9PT0gMCkge1xuICAgICAgcmV0dXJuOyAvLyBJZ25vcmUgQ29tcG9zaXRlQ29tcG9uZW50IHByb3B0eXBlIGNoZWNrLlxuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuMiA+IDIgPyBfbGVuMiAtIDIgOiAwKSwgX2tleTIgPSAyOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTIgLSAyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHByaW50V2FybmluZy5hcHBseSh1bmRlZmluZWQsIFtmb3JtYXRdLmNvbmNhdChhcmdzKSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogXG4gKi9cblxuZnVuY3Rpb24gbWFrZUVtcHR5RnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGFyZztcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGFjY2VwdHMgYW5kIGRpc2NhcmRzIGlucHV0czsgaXQgaGFzIG5vIHNpZGUgZWZmZWN0cy4gVGhpcyBpc1xuICogcHJpbWFyaWx5IHVzZWZ1bCBpZGlvbWF0aWNhbGx5IGZvciBvdmVycmlkYWJsZSBmdW5jdGlvbiBlbmRwb2ludHMgd2hpY2hcbiAqIGFsd2F5cyBuZWVkIHRvIGJlIGNhbGxhYmxlLCBzaW5jZSBKUyBsYWNrcyBhIG51bGwtY2FsbCBpZGlvbSBhbGEgQ29jb2EuXG4gKi9cbnZhciBlbXB0eUZ1bmN0aW9uID0gZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9O1xuXG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zID0gbWFrZUVtcHR5RnVuY3Rpb247XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zRmFsc2UgPSBtYWtlRW1wdHlGdW5jdGlvbihmYWxzZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zVHJ1ZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKHRydWUpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc051bGwgPSBtYWtlRW1wdHlGdW5jdGlvbihudWxsKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUaGlzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcztcbn07XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zQXJndW1lbnQgPSBmdW5jdGlvbiAoYXJnKSB7XG4gIHJldHVybiBhcmc7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVtcHR5RnVuY3Rpb247IiwibW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcnIpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO1xudmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxyPWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTY7ZnVuY3Rpb24gdChhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIHI6Y2FzZSBxOmNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIHYoYSl7cmV0dXJuIHQoYSk9PT1tfWV4cG9ydHMudHlwZU9mPXQ7ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO1xuZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT1yO2V4cG9ydHMuTWVtbz1xO2V4cG9ydHMuUG9ydGFsPWQ7ZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PXF8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW4pfTtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpfHx0KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPXY7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWt9O1xuZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09cn07ZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1xfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB0KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHQoYSk9PT1mfTtcbmV4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4gdChhKT09PXB9O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuZnVuY3Rpb24gSG9tZSgpIHtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPGgxPkkgYW0gSG9tZSEhITwvaDE+XHJcbiAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gY29uc29sZS5sb2coXCJ5b29vb1wiKX0+Q2xpY2sgTWUhPC9idXR0b24+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIb21lO1xyXG4iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIFJvdXRlIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmV4cG9ydCAqIGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VySGlzdG9yeSwgY3JlYXRlSGFzaEhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnaGlzdG9yeSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAndGlueS1pbnZhcmlhbnQnO1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyBIVE1MNSBoaXN0b3J5LlxuICovXG5cbnZhciBCcm93c2VyUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKEJyb3dzZXJSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEJyb3dzZXJSb3V0ZXIoKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpIHx8IHRoaXM7XG4gICAgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUJyb3dzZXJIaXN0b3J5KF90aGlzLnByb3BzKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQnJvd3NlclJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIEJyb3dzZXJSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgQnJvd3NlclJvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAgIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAga2V5TGVuZ3RoOiBQcm9wVHlwZXMubnVtYmVyXG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghdGhpcy5wcm9wcy5oaXN0b3J5LCBcIjxCcm93c2VyUm91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBhIDxSb3V0ZXI+IHRoYXQgdXNlcyB3aW5kb3cubG9jYXRpb24uaGFzaC5cbiAqL1xuXG52YXIgSGFzaFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShIYXNoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBIYXNoUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVIYXNoSGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEhhc2hSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBIYXNoUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEhhc2hSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBnZXRVc2VyQ29uZmlybWF0aW9uOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBoYXNoVHlwZTogUHJvcFR5cGVzLm9uZU9mKFtcImhhc2hiYW5nXCIsIFwibm9zbGFzaFwiLCBcInNsYXNoXCJdKVxuICB9O1xuXG4gIEhhc2hSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8SGFzaFJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEhhc2hSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHJlbmRlcmluZyBhIGhpc3RvcnktYXdhcmUgPGE+LlxuICovXG5cblxudmFyIExpbmsgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGluaywgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGluaygpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTGluay5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmhhbmRsZUNsaWNrID0gZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQsIGhpc3RvcnkpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vbkNsaWNrKSB0aGlzLnByb3BzLm9uQ2xpY2soZXZlbnQpO1xuXG4gICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkICYmIC8vIG9uQ2xpY2sgcHJldmVudGVkIGRlZmF1bHRcbiAgICBldmVudC5idXR0b24gPT09IDAgJiYgKCAvLyBpZ25vcmUgZXZlcnl0aGluZyBidXQgbGVmdCBjbGlja3NcbiAgICAhdGhpcy5wcm9wcy50YXJnZXQgfHwgdGhpcy5wcm9wcy50YXJnZXQgPT09IFwiX3NlbGZcIikgJiYgLy8gbGV0IGJyb3dzZXIgaGFuZGxlIFwidGFyZ2V0PV9ibGFua1wiIGV0Yy5cbiAgICAhaXNNb2RpZmllZEV2ZW50KGV2ZW50KSAvLyBpZ25vcmUgY2xpY2tzIHdpdGggbW9kaWZpZXIga2V5c1xuICAgICkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgbWV0aG9kID0gdGhpcy5wcm9wcy5yZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QodGhpcy5wcm9wcy50byk7XG4gICAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgaW5uZXJSZWYgPSBfdGhpcyRwcm9wcy5pbm5lclJlZixcbiAgICAgICAgcmVwbGFjZSA9IF90aGlzJHByb3BzLnJlcGxhY2UsXG4gICAgICAgIHRvID0gX3RoaXMkcHJvcHMudG8sXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wcywgW1wiaW5uZXJSZWZcIiwgXCJyZXBsYWNlXCIsIFwidG9cIl0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG5cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB0byA9PT0gXCJzdHJpbmdcIiA/IGNyZWF0ZUxvY2F0aW9uKHRvLCBudWxsLCBudWxsLCBjb250ZXh0LmxvY2F0aW9uKSA6IHRvO1xuICAgICAgdmFyIGhyZWYgPSBsb2NhdGlvbiA/IGNvbnRleHQuaGlzdG9yeS5jcmVhdGVIcmVmKGxvY2F0aW9uKSA6IFwiXCI7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhldmVudCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVDbGljayhldmVudCwgY29udGV4dC5oaXN0b3J5KTtcbiAgICAgICAgfSxcbiAgICAgICAgaHJlZjogaHJlZixcbiAgICAgICAgcmVmOiBpbm5lclJlZlxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBMaW5rO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIHZhciB0b1R5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSk7XG4gIHZhciBpbm5lclJlZlR5cGUgPSBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBjdXJyZW50OiBQcm9wVHlwZXMuYW55XG4gIH0pXSk7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiBpbm5lclJlZlR5cGUsXG4gICAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gICAgcmVwbGFjZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgdGFyZ2V0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHRvOiB0b1R5cGUuaXNSZXF1aXJlZFxuICB9O1xufVxuXG5mdW5jdGlvbiBqb2luQ2xhc3NuYW1lcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGNsYXNzbmFtZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgY2xhc3NuYW1lc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBjbGFzc25hbWVzLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBpO1xuICB9KS5qb2luKFwiIFwiKTtcbn1cbi8qKlxuICogQSA8TGluaz4gd3JhcHBlciB0aGF0IGtub3dzIGlmIGl0J3MgXCJhY3RpdmVcIiBvciBub3QuXG4gKi9cblxuXG5mdW5jdGlvbiBOYXZMaW5rKF9yZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvbiA9IF9yZWYubG9jYXRpb24sXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCJdKTtcblxuICB2YXIgcGF0aCA9IHR5cGVvZiB0byA9PT0gXCJvYmplY3RcIiA/IHRvLnBhdGhuYW1lIDogdG87IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgdmFyIGVzY2FwZWRQYXRoID0gcGF0aCAmJiBwYXRoLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18L1xcXFxdKS9nLCBcIlxcXFwkMVwiKTtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHtcbiAgICBwYXRoOiBlc2NhcGVkUGF0aCxcbiAgICBleGFjdDogZXhhY3QsXG4gICAgc3RyaWN0OiBzdHJpY3QsXG4gICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgIGNoaWxkcmVuOiBmdW5jdGlvbiBjaGlsZHJlbihfcmVmMikge1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3JlZjIubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2ggPSBfcmVmMi5tYXRjaDtcbiAgICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgbG9jYXRpb24pIDogbWF0Y2gpO1xuICAgICAgdmFyIGNsYXNzTmFtZSA9IGlzQWN0aXZlID8gam9pbkNsYXNzbmFtZXMoY2xhc3NOYW1lUHJvcCwgYWN0aXZlQ2xhc3NOYW1lKSA6IGNsYXNzTmFtZVByb3A7XG4gICAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIGFjdGl2ZVN0eWxlKSA6IHN0eWxlUHJvcDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIF9leHRlbmRzKHtcbiAgICAgICAgXCJhcmlhLWN1cnJlbnRcIjogaXNBY3RpdmUgJiYgYXJpYUN1cnJlbnQgfHwgbnVsbCxcbiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICAgIHN0eWxlOiBzdHlsZSxcbiAgICAgICAgdG86IHRvXG4gICAgICB9LCByZXN0KSk7XG4gICAgfVxuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICB2YXIgYXJpYUN1cnJlbnRUeXBlID0gUHJvcFR5cGVzLm9uZU9mKFtcInBhZ2VcIiwgXCJzdGVwXCIsIFwibG9jYXRpb25cIiwgXCJkYXRlXCIsIFwidGltZVwiLCBcInRydWVcIl0pO1xuICBOYXZMaW5rLnByb3BUeXBlcyA9IF9leHRlbmRzKHt9LCBMaW5rLnByb3BUeXBlcywge1xuICAgIFwiYXJpYS1jdXJyZW50XCI6IGFyaWFDdXJyZW50VHlwZSxcbiAgICBhY3RpdmVDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgYWN0aXZlU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGV4YWN0OiBSb3V0ZS5wcm9wVHlwZXMuZXhhY3QsXG4gICAgaXNBY3RpdmU6IFByb3BUeXBlcy5mdW5jLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHN0cmljdDogUm91dGUucHJvcFR5cGVzLnN0cmljdCxcbiAgICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdFxuICB9KTtcbn1cblxuZXhwb3J0IHsgQnJvd3NlclJvdXRlciwgSGFzaFJvdXRlciwgTGluaywgTmF2TGluayB9O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiIsImZ1bmN0aW9uIGNyZWF0ZVRodW5rTWlkZGxld2FyZShleHRyYUFyZ3VtZW50KSB7XG4gIHJldHVybiBmdW5jdGlvbiAoX3JlZikge1xuICAgIHZhciBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2gsXG4gICAgICAgIGdldFN0YXRlID0gX3JlZi5nZXRTdGF0ZTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG5leHQpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYWN0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIGFjdGlvbihkaXNwYXRjaCwgZ2V0U3RhdGUsIGV4dHJhQXJndW1lbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5leHQoYWN0aW9uKTtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcbn1cblxudmFyIHRodW5rID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKCk7XG50aHVuay53aXRoRXh0cmFBcmd1bWVudCA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZTtcblxuZXhwb3J0IGRlZmF1bHQgdGh1bms7IiwiaW1wb3J0IHsgY29tYmluZVJlZHVjZXJzIH0gZnJvbSBcInJlZHV4XCI7XHJcbmltcG9ydCB1c2Vyc1JlZHVjZXIgZnJvbSBcIi4vdXNlci9yZWR1Y2Vyc1wiO1xyXG5cclxuY29uc3QgcmVkdWNlcnMgPSBjb21iaW5lUmVkdWNlcnMoe1xyXG4gIHVzZXJzOiB1c2Vyc1JlZHVjZXJcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCByZWR1Y2VycztcclxuXHJcbmV4cG9ydCB0eXBlIEFwcFN0YXRlID0gUmV0dXJuVHlwZTx0eXBlb2YgcmVkdWNlcnM+O1xyXG4iLCJpbXBvcnQgeyBVc2VyQWN0aW9uVHlwZXMsIEZFVENIX1VTRVJTIH0gZnJvbSBcIi4vdHlwZXNcIjtcclxuXHJcbmNvbnN0IHVzZXJzUmVkdWNlciA9IChzdGF0ZSA9IFtdLCBhY3Rpb246IFVzZXJBY3Rpb25UeXBlcykgPT4ge1xyXG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuICAgIGNhc2UgRkVUQ0hfVVNFUlM6XHJcbiAgICAgIHJldHVybiBhY3Rpb24ucGF5bG9hZC5kYXRhO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgcmV0dXJuIHN0YXRlO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZXJzUmVkdWNlcjtcclxuIiwiZXhwb3J0IGludGVyZmFjZSBVc2VyU3RhdGUge1xyXG4gIGRhdGE6IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEZFVENIX1VTRVJTID0gXCJGRVRDSF9VU0VSU1wiO1xyXG5cclxuaW50ZXJmYWNlIFVwZGF0ZVNlc3Npb25BY3Rpb24ge1xyXG4gIHR5cGU6IHR5cGVvZiBGRVRDSF9VU0VSUztcclxuICBwYXlsb2FkOiBVc2VyU3RhdGU7XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIFVzZXJBY3Rpb25UeXBlcyA9IFVwZGF0ZVNlc3Npb25BY3Rpb247XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5leHBvcnQgdmFyIFJlYWN0UmVkdXhDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBkZWZhdWx0IFJlYWN0UmVkdXhDb250ZXh0OyIsIi8vIERlZmF1bHQgdG8gYSBkdW1teSBcImJhdGNoXCIgaW1wbGVtZW50YXRpb24gdGhhdCBqdXN0IHJ1bnMgdGhlIGNhbGxiYWNrXG5mdW5jdGlvbiBkZWZhdWx0Tm9vcEJhdGNoKGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKCk7XG59XG5cbnZhciBiYXRjaCA9IGRlZmF1bHROb29wQmF0Y2g7IC8vIEFsbG93IGluamVjdGluZyBhbm90aGVyIGJhdGNoaW5nIGZ1bmN0aW9uIGxhdGVyXG5cbmV4cG9ydCB2YXIgc2V0QmF0Y2ggPSBmdW5jdGlvbiBzZXRCYXRjaChuZXdCYXRjaCkge1xuICByZXR1cm4gYmF0Y2ggPSBuZXdCYXRjaDtcbn07IC8vIFN1cHBseSBhIGdldHRlciBqdXN0IHRvIHNraXAgZGVhbGluZyB3aXRoIEVTTSBiaW5kaW5nc1xuXG5leHBvcnQgdmFyIGdldEJhdGNoID0gZnVuY3Rpb24gZ2V0QmF0Y2goKSB7XG4gIHJldHVybiBiYXRjaDtcbn07IiwiaW1wb3J0IHsgZ2V0QmF0Y2ggfSBmcm9tICcuL2JhdGNoJzsgLy8gZW5jYXBzdWxhdGVzIHRoZSBzdWJzY3JpcHRpb24gbG9naWMgZm9yIGNvbm5lY3RpbmcgYSBjb21wb25lbnQgdG8gdGhlIHJlZHV4IHN0b3JlLCBhc1xuLy8gd2VsbCBhcyBuZXN0aW5nIHN1YnNjcmlwdGlvbnMgb2YgZGVzY2VuZGFudCBjb21wb25lbnRzLCBzbyB0aGF0IHdlIGNhbiBlbnN1cmUgdGhlXG4vLyBhbmNlc3RvciBjb21wb25lbnRzIHJlLXJlbmRlciBiZWZvcmUgZGVzY2VuZGFudHNcblxudmFyIENMRUFSRUQgPSBudWxsO1xudmFyIG51bGxMaXN0ZW5lcnMgPSB7XG4gIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge31cbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpc3RlbmVyQ29sbGVjdGlvbigpIHtcbiAgdmFyIGJhdGNoID0gZ2V0QmF0Y2goKTsgLy8gdGhlIGN1cnJlbnQvbmV4dCBwYXR0ZXJuIGlzIGNvcGllZCBmcm9tIHJlZHV4J3MgY3JlYXRlU3RvcmUgY29kZS5cbiAgLy8gVE9ETzogcmVmYWN0b3IrZXhwb3NlIHRoYXQgY29kZSB0byBiZSByZXVzYWJsZSBoZXJlP1xuXG4gIHZhciBjdXJyZW50ID0gW107XG4gIHZhciBuZXh0ID0gW107XG4gIHJldHVybiB7XG4gICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgbmV4dCA9IENMRUFSRUQ7XG4gICAgICBjdXJyZW50ID0gQ0xFQVJFRDtcbiAgICB9LFxuICAgIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge1xuICAgICAgdmFyIGxpc3RlbmVycyA9IGN1cnJlbnQgPSBuZXh0O1xuICAgICAgYmF0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGxpc3RlbmVyc1tpXSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfSxcbiAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgICAgdmFyIGlzU3Vic2NyaWJlZCA9IHRydWU7XG4gICAgICBpZiAobmV4dCA9PT0gY3VycmVudCkgbmV4dCA9IGN1cnJlbnQuc2xpY2UoKTtcbiAgICAgIG5leHQucHVzaChsaXN0ZW5lcik7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIGlmICghaXNTdWJzY3JpYmVkIHx8IGN1cnJlbnQgPT09IENMRUFSRUQpIHJldHVybjtcbiAgICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG4gICAgICAgIGlmIChuZXh0ID09PSBjdXJyZW50KSBuZXh0ID0gY3VycmVudC5zbGljZSgpO1xuICAgICAgICBuZXh0LnNwbGljZShuZXh0LmluZGV4T2YobGlzdGVuZXIpLCAxKTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG52YXIgU3Vic2NyaXB0aW9uID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3Vic2NyaXB0aW9uKHN0b3JlLCBwYXJlbnRTdWIpIHtcbiAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgdGhpcy5wYXJlbnRTdWIgPSBwYXJlbnRTdWI7XG4gICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlciA9IHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN1YnNjcmlwdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmFkZE5lc3RlZFN1YiA9IGZ1bmN0aW9uIGFkZE5lc3RlZFN1YihsaXN0ZW5lcikge1xuICAgIHRoaXMudHJ5U3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLnN1YnNjcmliZShsaXN0ZW5lcik7XG4gIH07XG5cbiAgX3Byb3RvLm5vdGlmeU5lc3RlZFN1YnMgPSBmdW5jdGlvbiBub3RpZnlOZXN0ZWRTdWJzKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLm5vdGlmeSgpO1xuICB9O1xuXG4gIF9wcm90by5oYW5kbGVDaGFuZ2VXcmFwcGVyID0gZnVuY3Rpb24gaGFuZGxlQ2hhbmdlV3JhcHBlcigpIHtcbiAgICBpZiAodGhpcy5vblN0YXRlQ2hhbmdlKSB7XG4gICAgICB0aGlzLm9uU3RhdGVDaGFuZ2UoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmlzU3Vic2NyaWJlZCA9IGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih0aGlzLnVuc3Vic2NyaWJlKTtcbiAgfTtcblxuICBfcHJvdG8udHJ5U3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5U3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy51bnN1YnNjcmliZSkge1xuICAgICAgdGhpcy51bnN1YnNjcmliZSA9IHRoaXMucGFyZW50U3ViID8gdGhpcy5wYXJlbnRTdWIuYWRkTmVzdGVkU3ViKHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlcikgOiB0aGlzLnN0b3JlLnN1YnNjcmliZSh0aGlzLmhhbmRsZUNoYW5nZVdyYXBwZXIpO1xuICAgICAgdGhpcy5saXN0ZW5lcnMgPSBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnRyeVVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5VW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKHRoaXMudW5zdWJzY3JpYmUpIHtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUgPSBudWxsO1xuICAgICAgdGhpcy5saXN0ZW5lcnMuY2xlYXIoKTtcbiAgICAgIHRoaXMubGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIFN1YnNjcmlwdGlvbjtcbn0oKTtcblxuZXhwb3J0IHsgU3Vic2NyaXB0aW9uIGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCI7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2VcIjtcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL0NvbnRleHQnO1xuaW1wb3J0IFN1YnNjcmlwdGlvbiBmcm9tICcuLi91dGlscy9TdWJzY3JpcHRpb24nO1xuXG52YXIgUHJvdmlkZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoUHJvdmlkZXIsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFByb3ZpZGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgdmFyIHN0b3JlID0gcHJvcHMuc3RvcmU7XG4gICAgX3RoaXMubm90aWZ5U3Vic2NyaWJlcnMgPSBfdGhpcy5ub3RpZnlTdWJzY3JpYmVycy5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbihzdG9yZSk7XG4gICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBfdGhpcy5ub3RpZnlTdWJzY3JpYmVycztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHN0b3JlOiBzdG9yZSxcbiAgICAgIHN1YnNjcmlwdGlvbjogc3Vic2NyaXB0aW9uXG4gICAgfTtcbiAgICBfdGhpcy5wcmV2aW91c1N0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUHJvdmlkZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG4gICAgdGhpcy5zdGF0ZS5zdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG5cbiAgICBpZiAodGhpcy5wcmV2aW91c1N0YXRlICE9PSB0aGlzLnByb3BzLnN0b3JlLmdldFN0YXRlKCkpIHtcbiAgICAgIHRoaXMuc3RhdGUuc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5zdWJzY3JpYmUpIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICB0aGlzLnN0YXRlLnN1YnNjcmlwdGlvbi50cnlVbnN1YnNjcmliZSgpO1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IGZhbHNlO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuc3RvcmUgIT09IHByZXZQcm9wcy5zdG9yZSkge1xuICAgICAgdGhpcy5zdGF0ZS5zdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICAgIHZhciBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKHRoaXMucHJvcHMuc3RvcmUpO1xuICAgICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSB0aGlzLm5vdGlmeVN1YnNjcmliZXJzO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHN0b3JlOiB0aGlzLnByb3BzLnN0b3JlLFxuICAgICAgICBzdWJzY3JpcHRpb246IHN1YnNjcmlwdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5ub3RpZnlTdWJzY3JpYmVycyA9IGZ1bmN0aW9uIG5vdGlmeVN1YnNjcmliZXJzKCkge1xuICAgIHRoaXMuc3RhdGUuc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBDb250ZXh0ID0gdGhpcy5wcm9wcy5jb250ZXh0IHx8IFJlYWN0UmVkdXhDb250ZXh0O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIHZhbHVlOiB0aGlzLnN0YXRlXG4gICAgfSwgdGhpcy5wcm9wcy5jaGlsZHJlbik7XG4gIH07XG5cbiAgcmV0dXJuIFByb3ZpZGVyO1xufShDb21wb25lbnQpO1xuXG5Qcm92aWRlci5wcm9wVHlwZXMgPSB7XG4gIHN0b3JlOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIHN1YnNjcmliZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBkaXNwYXRjaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICBnZXRTdGF0ZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9KSxcbiAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5hbnlcbn07XG5leHBvcnQgZGVmYXVsdCBQcm92aWRlcjsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufSIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0LCB1c2VNZW1vLCB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCwgdXNlUmVmLCB1c2VSZWR1Y2VyIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlLCBpc0NvbnRleHRDb25zdW1lciB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0JzsgLy8gRGVmaW5lIHNvbWUgY29uc3RhbnQgYXJyYXlzIGp1c3QgdG8gYXZvaWQgcmUtY3JlYXRpbmcgdGhlc2VcblxudmFyIEVNUFRZX0FSUkFZID0gW107XG52YXIgTk9fU1VCU0NSSVBUSU9OX0FSUkFZID0gW251bGwsIG51bGxdO1xuXG52YXIgc3RyaW5naWZ5Q29tcG9uZW50ID0gZnVuY3Rpb24gc3RyaW5naWZ5Q29tcG9uZW50KENvbXApIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoQ29tcCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBTdHJpbmcoQ29tcCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHN0b3JlU3RhdGVVcGRhdGVzUmVkdWNlcihzdGF0ZSwgYWN0aW9uKSB7XG4gIHZhciB1cGRhdGVDb3VudCA9IHN0YXRlWzFdO1xuICByZXR1cm4gW2FjdGlvbi5wYXlsb2FkLCB1cGRhdGVDb3VudCArIDFdO1xufVxuXG52YXIgaW5pdFN0YXRlVXBkYXRlcyA9IGZ1bmN0aW9uIGluaXRTdGF0ZVVwZGF0ZXMoKSB7XG4gIHJldHVybiBbbnVsbCwgMF07XG59OyAvLyBSZWFjdCBjdXJyZW50bHkgdGhyb3dzIGEgd2FybmluZyB3aGVuIHVzaW5nIHVzZUxheW91dEVmZmVjdCBvbiB0aGUgc2VydmVyLlxuLy8gVG8gZ2V0IGFyb3VuZCBpdCwgd2UgY2FuIGNvbmRpdGlvbmFsbHkgdXNlRWZmZWN0IG9uIHRoZSBzZXJ2ZXIgKG5vLW9wKSBhbmRcbi8vIHVzZUxheW91dEVmZmVjdCBpbiB0aGUgYnJvd3Nlci4gV2UgbmVlZCB1c2VMYXlvdXRFZmZlY3QgYmVjYXVzZSB3ZSB3YW50XG4vLyBgY29ubmVjdGAgdG8gcGVyZm9ybSBzeW5jIHVwZGF0ZXMgdG8gYSByZWYgdG8gc2F2ZSB0aGUgbGF0ZXN0IHByb3BzIGFmdGVyXG4vLyBhIHJlbmRlciBpcyBhY3R1YWxseSBjb21taXR0ZWQgdG8gdGhlIERPTS5cblxuXG52YXIgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gdXNlTGF5b3V0RWZmZWN0IDogdXNlRWZmZWN0O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29ubmVjdEFkdmFuY2VkKFxuLypcclxuICBzZWxlY3RvckZhY3RvcnkgaXMgYSBmdW5jIHRoYXQgaXMgcmVzcG9uc2libGUgZm9yIHJldHVybmluZyB0aGUgc2VsZWN0b3IgZnVuY3Rpb24gdXNlZCB0b1xyXG4gIGNvbXB1dGUgbmV3IHByb3BzIGZyb20gc3RhdGUsIHByb3BzLCBhbmQgZGlzcGF0Y2guIEZvciBleGFtcGxlOlxyXG4gICAgICBleHBvcnQgZGVmYXVsdCBjb25uZWN0QWR2YW5jZWQoKGRpc3BhdGNoLCBvcHRpb25zKSA9PiAoc3RhdGUsIHByb3BzKSA9PiAoe1xyXG4gICAgICB0aGluZzogc3RhdGUudGhpbmdzW3Byb3BzLnRoaW5nSWRdLFxyXG4gICAgICBzYXZlVGhpbmc6IGZpZWxkcyA9PiBkaXNwYXRjaChhY3Rpb25DcmVhdG9ycy5zYXZlVGhpbmcocHJvcHMudGhpbmdJZCwgZmllbGRzKSksXHJcbiAgICB9KSkoWW91ckNvbXBvbmVudClcclxuICAgIEFjY2VzcyB0byBkaXNwYXRjaCBpcyBwcm92aWRlZCB0byB0aGUgZmFjdG9yeSBzbyBzZWxlY3RvckZhY3RvcmllcyBjYW4gYmluZCBhY3Rpb25DcmVhdG9yc1xyXG4gIG91dHNpZGUgb2YgdGhlaXIgc2VsZWN0b3IgYXMgYW4gb3B0aW1pemF0aW9uLiBPcHRpb25zIHBhc3NlZCB0byBjb25uZWN0QWR2YW5jZWQgYXJlIHBhc3NlZCB0b1xyXG4gIHRoZSBzZWxlY3RvckZhY3RvcnksIGFsb25nIHdpdGggZGlzcGxheU5hbWUgYW5kIFdyYXBwZWRDb21wb25lbnQsIGFzIHRoZSBzZWNvbmQgYXJndW1lbnQuXHJcbiAgICBOb3RlIHRoYXQgc2VsZWN0b3JGYWN0b3J5IGlzIHJlc3BvbnNpYmxlIGZvciBhbGwgY2FjaGluZy9tZW1vaXphdGlvbiBvZiBpbmJvdW5kIGFuZCBvdXRib3VuZFxyXG4gIHByb3BzLiBEbyBub3QgdXNlIGNvbm5lY3RBZHZhbmNlZCBkaXJlY3RseSB3aXRob3V0IG1lbW9pemluZyByZXN1bHRzIGJldHdlZW4gY2FsbHMgdG8geW91clxyXG4gIHNlbGVjdG9yLCBvdGhlcndpc2UgdGhlIENvbm5lY3QgY29tcG9uZW50IHdpbGwgcmUtcmVuZGVyIG9uIGV2ZXJ5IHN0YXRlIG9yIHByb3BzIGNoYW5nZS5cclxuKi9cbnNlbGVjdG9yRmFjdG9yeSwgLy8gb3B0aW9ucyBvYmplY3Q6XG5fcmVmKSB7XG4gIGlmIChfcmVmID09PSB2b2lkIDApIHtcbiAgICBfcmVmID0ge307XG4gIH1cblxuICB2YXIgX3JlZjIgPSBfcmVmLFxuICAgICAgX3JlZjIkZ2V0RGlzcGxheU5hbWUgPSBfcmVmMi5nZXREaXNwbGF5TmFtZSxcbiAgICAgIGdldERpc3BsYXlOYW1lID0gX3JlZjIkZ2V0RGlzcGxheU5hbWUgPT09IHZvaWQgMCA/IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIFwiQ29ubmVjdEFkdmFuY2VkKFwiICsgbmFtZSArIFwiKVwiO1xuICB9IDogX3JlZjIkZ2V0RGlzcGxheU5hbWUsXG4gICAgICBfcmVmMiRtZXRob2ROYW1lID0gX3JlZjIubWV0aG9kTmFtZSxcbiAgICAgIG1ldGhvZE5hbWUgPSBfcmVmMiRtZXRob2ROYW1lID09PSB2b2lkIDAgPyAnY29ubmVjdEFkdmFuY2VkJyA6IF9yZWYyJG1ldGhvZE5hbWUsXG4gICAgICBfcmVmMiRyZW5kZXJDb3VudFByb3AgPSBfcmVmMi5yZW5kZXJDb3VudFByb3AsXG4gICAgICByZW5kZXJDb3VudFByb3AgPSBfcmVmMiRyZW5kZXJDb3VudFByb3AgPT09IHZvaWQgMCA/IHVuZGVmaW5lZCA6IF9yZWYyJHJlbmRlckNvdW50UHJvcCxcbiAgICAgIF9yZWYyJHNob3VsZEhhbmRsZVN0YSA9IF9yZWYyLnNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyxcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyA9IF9yZWYyJHNob3VsZEhhbmRsZVN0YSA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYyJHNob3VsZEhhbmRsZVN0YSxcbiAgICAgIF9yZWYyJHN0b3JlS2V5ID0gX3JlZjIuc3RvcmVLZXksXG4gICAgICBzdG9yZUtleSA9IF9yZWYyJHN0b3JlS2V5ID09PSB2b2lkIDAgPyAnc3RvcmUnIDogX3JlZjIkc3RvcmVLZXksXG4gICAgICBfcmVmMiR3aXRoUmVmID0gX3JlZjIud2l0aFJlZixcbiAgICAgIHdpdGhSZWYgPSBfcmVmMiR3aXRoUmVmID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYyJHdpdGhSZWYsXG4gICAgICBfcmVmMiRmb3J3YXJkUmVmID0gX3JlZjIuZm9yd2FyZFJlZixcbiAgICAgIGZvcndhcmRSZWYgPSBfcmVmMiRmb3J3YXJkUmVmID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYyJGZvcndhcmRSZWYsXG4gICAgICBfcmVmMiRjb250ZXh0ID0gX3JlZjIuY29udGV4dCxcbiAgICAgIGNvbnRleHQgPSBfcmVmMiRjb250ZXh0ID09PSB2b2lkIDAgPyBSZWFjdFJlZHV4Q29udGV4dCA6IF9yZWYyJGNvbnRleHQsXG4gICAgICBjb25uZWN0T3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYyLCBbXCJnZXREaXNwbGF5TmFtZVwiLCBcIm1ldGhvZE5hbWVcIiwgXCJyZW5kZXJDb3VudFByb3BcIiwgXCJzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXNcIiwgXCJzdG9yZUtleVwiLCBcIndpdGhSZWZcIiwgXCJmb3J3YXJkUmVmXCIsIFwiY29udGV4dFwiXSk7XG5cbiAgaW52YXJpYW50KHJlbmRlckNvdW50UHJvcCA9PT0gdW5kZWZpbmVkLCBcInJlbmRlckNvdW50UHJvcCBpcyByZW1vdmVkLiByZW5kZXIgY291bnRpbmcgaXMgYnVpbHQgaW50byB0aGUgbGF0ZXN0IFJlYWN0IERldiBUb29scyBwcm9maWxpbmcgZXh0ZW5zaW9uXCIpO1xuICBpbnZhcmlhbnQoIXdpdGhSZWYsICd3aXRoUmVmIGlzIHJlbW92ZWQuIFRvIGFjY2VzcyB0aGUgd3JhcHBlZCBpbnN0YW5jZSwgdXNlIGEgcmVmIG9uIHRoZSBjb25uZWN0ZWQgY29tcG9uZW50Jyk7XG4gIHZhciBjdXN0b21TdG9yZVdhcm5pbmdNZXNzYWdlID0gJ1RvIHVzZSBhIGN1c3RvbSBSZWR1eCBzdG9yZSBmb3Igc3BlY2lmaWMgY29tcG9uZW50cywgY3JlYXRlIGEgY3VzdG9tIFJlYWN0IGNvbnRleHQgd2l0aCAnICsgXCJSZWFjdC5jcmVhdGVDb250ZXh0KCksIGFuZCBwYXNzIHRoZSBjb250ZXh0IG9iamVjdCB0byBSZWFjdCBSZWR1eCdzIFByb3ZpZGVyIGFuZCBzcGVjaWZpYyBjb21wb25lbnRzXCIgKyAnIGxpa2U6IDxQcm92aWRlciBjb250ZXh0PXtNeUNvbnRleHR9PjxDb25uZWN0ZWRDb21wb25lbnQgY29udGV4dD17TXlDb250ZXh0fSAvPjwvUHJvdmlkZXI+LiAnICsgJ1lvdSBtYXkgYWxzbyBwYXNzIGEge2NvbnRleHQgOiBNeUNvbnRleHR9IG9wdGlvbiB0byBjb25uZWN0JztcbiAgaW52YXJpYW50KHN0b3JlS2V5ID09PSAnc3RvcmUnLCAnc3RvcmVLZXkgaGFzIGJlZW4gcmVtb3ZlZCBhbmQgZG9lcyBub3QgZG8gYW55dGhpbmcuICcgKyBjdXN0b21TdG9yZVdhcm5pbmdNZXNzYWdlKTtcbiAgdmFyIENvbnRleHQgPSBjb250ZXh0O1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcFdpdGhDb25uZWN0KFdyYXBwZWRDb21wb25lbnQpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaW52YXJpYW50KGlzVmFsaWRFbGVtZW50VHlwZShXcmFwcGVkQ29tcG9uZW50KSwgXCJZb3UgbXVzdCBwYXNzIGEgY29tcG9uZW50IHRvIHRoZSBmdW5jdGlvbiByZXR1cm5lZCBieSBcIiArIChtZXRob2ROYW1lICsgXCIuIEluc3RlYWQgcmVjZWl2ZWQgXCIgKyBzdHJpbmdpZnlDb21wb25lbnQoV3JhcHBlZENvbXBvbmVudCkpKTtcbiAgICB9XG5cbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudE5hbWUgPSBXcmFwcGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IFdyYXBwZWRDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50JztcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBnZXREaXNwbGF5TmFtZSh3cmFwcGVkQ29tcG9uZW50TmFtZSk7XG5cbiAgICB2YXIgc2VsZWN0b3JGYWN0b3J5T3B0aW9ucyA9IF9leHRlbmRzKHt9LCBjb25uZWN0T3B0aW9ucywge1xuICAgICAgZ2V0RGlzcGxheU5hbWU6IGdldERpc3BsYXlOYW1lLFxuICAgICAgbWV0aG9kTmFtZTogbWV0aG9kTmFtZSxcbiAgICAgIHJlbmRlckNvdW50UHJvcDogcmVuZGVyQ291bnRQcm9wLFxuICAgICAgc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzOiBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsXG4gICAgICBzdG9yZUtleTogc3RvcmVLZXksXG4gICAgICBkaXNwbGF5TmFtZTogZGlzcGxheU5hbWUsXG4gICAgICB3cmFwcGVkQ29tcG9uZW50TmFtZTogd3JhcHBlZENvbXBvbmVudE5hbWUsXG4gICAgICBXcmFwcGVkQ29tcG9uZW50OiBXcmFwcGVkQ29tcG9uZW50XG4gICAgfSk7XG5cbiAgICB2YXIgcHVyZSA9IGNvbm5lY3RPcHRpb25zLnB1cmU7XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVDaGlsZFNlbGVjdG9yKHN0b3JlKSB7XG4gICAgICByZXR1cm4gc2VsZWN0b3JGYWN0b3J5KHN0b3JlLmRpc3BhdGNoLCBzZWxlY3RvckZhY3RvcnlPcHRpb25zKTtcbiAgICB9IC8vIElmIHdlIGFyZW4ndCBydW5uaW5nIGluIFwicHVyZVwiIG1vZGUsIHdlIGRvbid0IHdhbnQgdG8gbWVtb2l6ZSB2YWx1ZXMuXG4gICAgLy8gVG8gYXZvaWQgY29uZGl0aW9uYWxseSBjYWxsaW5nIGhvb2tzLCB3ZSBmYWxsIGJhY2sgdG8gYSB0aW55IHdyYXBwZXJcbiAgICAvLyB0aGF0IGp1c3QgZXhlY3V0ZXMgdGhlIGdpdmVuIGNhbGxiYWNrIGltbWVkaWF0ZWx5LlxuXG5cbiAgICB2YXIgdXNlUHVyZU9ubHlNZW1vID0gcHVyZSA/IHVzZU1lbW8gOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgIHJldHVybiBjYWxsYmFjaygpO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBDb25uZWN0RnVuY3Rpb24ocHJvcHMpIHtcbiAgICAgIHZhciBfdXNlTWVtbyA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBEaXN0aW5ndWlzaCBiZXR3ZWVuIGFjdHVhbCBcImRhdGFcIiBwcm9wcyB0aGF0IHdlcmUgcGFzc2VkIHRvIHRoZSB3cmFwcGVyIGNvbXBvbmVudCxcbiAgICAgICAgLy8gYW5kIHZhbHVlcyBuZWVkZWQgdG8gY29udHJvbCBiZWhhdmlvciAoZm9yd2FyZGVkIHJlZnMsIGFsdGVybmF0ZSBjb250ZXh0IGluc3RhbmNlcykuXG4gICAgICAgIC8vIFRvIG1haW50YWluIHRoZSB3cmFwcGVyUHJvcHMgb2JqZWN0IHJlZmVyZW5jZSwgbWVtb2l6ZSB0aGlzIGRlc3RydWN0dXJpbmcuXG4gICAgICAgIHZhciBjb250ZXh0ID0gcHJvcHMuY29udGV4dCxcbiAgICAgICAgICAgIGZvcndhcmRlZFJlZiA9IHByb3BzLmZvcndhcmRlZFJlZixcbiAgICAgICAgICAgIHdyYXBwZXJQcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJjb250ZXh0XCIsIFwiZm9yd2FyZGVkUmVmXCJdKTtcblxuICAgICAgICByZXR1cm4gW2NvbnRleHQsIGZvcndhcmRlZFJlZiwgd3JhcHBlclByb3BzXTtcbiAgICAgIH0sIFtwcm9wc10pLFxuICAgICAgICAgIHByb3BzQ29udGV4dCA9IF91c2VNZW1vWzBdLFxuICAgICAgICAgIGZvcndhcmRlZFJlZiA9IF91c2VNZW1vWzFdLFxuICAgICAgICAgIHdyYXBwZXJQcm9wcyA9IF91c2VNZW1vWzJdO1xuXG4gICAgICB2YXIgQ29udGV4dFRvVXNlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFVzZXJzIG1heSBvcHRpb25hbGx5IHBhc3MgaW4gYSBjdXN0b20gY29udGV4dCBpbnN0YW5jZSB0byB1c2UgaW5zdGVhZCBvZiBvdXIgUmVhY3RSZWR1eENvbnRleHQuXG4gICAgICAgIC8vIE1lbW9pemUgdGhlIGNoZWNrIHRoYXQgZGV0ZXJtaW5lcyB3aGljaCBjb250ZXh0IGluc3RhbmNlIHdlIHNob3VsZCB1c2UuXG4gICAgICAgIHJldHVybiBwcm9wc0NvbnRleHQgJiYgcHJvcHNDb250ZXh0LkNvbnN1bWVyICYmIGlzQ29udGV4dENvbnN1bWVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQocHJvcHNDb250ZXh0LkNvbnN1bWVyLCBudWxsKSkgPyBwcm9wc0NvbnRleHQgOiBDb250ZXh0O1xuICAgICAgfSwgW3Byb3BzQ29udGV4dCwgQ29udGV4dF0pOyAvLyBSZXRyaWV2ZSB0aGUgc3RvcmUgYW5kIGFuY2VzdG9yIHN1YnNjcmlwdGlvbiB2aWEgY29udGV4dCwgaWYgYXZhaWxhYmxlXG5cbiAgICAgIHZhciBjb250ZXh0VmFsdWUgPSB1c2VDb250ZXh0KENvbnRleHRUb1VzZSk7IC8vIFRoZSBzdG9yZSBfbXVzdF8gZXhpc3QgYXMgZWl0aGVyIGEgcHJvcCBvciBpbiBjb250ZXh0XG5cbiAgICAgIHZhciBkaWRTdG9yZUNvbWVGcm9tUHJvcHMgPSBCb29sZWFuKHByb3BzLnN0b3JlKTtcbiAgICAgIHZhciBkaWRTdG9yZUNvbWVGcm9tQ29udGV4dCA9IEJvb2xlYW4oY29udGV4dFZhbHVlKSAmJiBCb29sZWFuKGNvbnRleHRWYWx1ZS5zdG9yZSk7XG4gICAgICBpbnZhcmlhbnQoZGlkU3RvcmVDb21lRnJvbVByb3BzIHx8IGRpZFN0b3JlQ29tZUZyb21Db250ZXh0LCBcIkNvdWxkIG5vdCBmaW5kIFxcXCJzdG9yZVxcXCIgaW4gdGhlIGNvbnRleHQgb2YgXCIgKyAoXCJcXFwiXCIgKyBkaXNwbGF5TmFtZSArIFwiXFxcIi4gRWl0aGVyIHdyYXAgdGhlIHJvb3QgY29tcG9uZW50IGluIGEgPFByb3ZpZGVyPiwgXCIpICsgXCJvciBwYXNzIGEgY3VzdG9tIFJlYWN0IGNvbnRleHQgcHJvdmlkZXIgdG8gPFByb3ZpZGVyPiBhbmQgdGhlIGNvcnJlc3BvbmRpbmcgXCIgKyAoXCJSZWFjdCBjb250ZXh0IGNvbnN1bWVyIHRvIFwiICsgZGlzcGxheU5hbWUgKyBcIiBpbiBjb25uZWN0IG9wdGlvbnMuXCIpKTtcbiAgICAgIHZhciBzdG9yZSA9IHByb3BzLnN0b3JlIHx8IGNvbnRleHRWYWx1ZS5zdG9yZTtcbiAgICAgIHZhciBjaGlsZFByb3BzU2VsZWN0b3IgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gVGhlIGNoaWxkIHByb3BzIHNlbGVjdG9yIG5lZWRzIHRoZSBzdG9yZSByZWZlcmVuY2UgYXMgYW4gaW5wdXQuXG4gICAgICAgIC8vIFJlLWNyZWF0ZSB0aGlzIHNlbGVjdG9yIHdoZW5ldmVyIHRoZSBzdG9yZSBjaGFuZ2VzLlxuICAgICAgICByZXR1cm4gY3JlYXRlQ2hpbGRTZWxlY3RvcihzdG9yZSk7XG4gICAgICB9LCBbc3RvcmVdKTtcblxuICAgICAgdmFyIF91c2VNZW1vMiA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcykgcmV0dXJuIE5PX1NVQlNDUklQVElPTl9BUlJBWTsgLy8gVGhpcyBTdWJzY3JpcHRpb24ncyBzb3VyY2Ugc2hvdWxkIG1hdGNoIHdoZXJlIHN0b3JlIGNhbWUgZnJvbTogcHJvcHMgdnMuIGNvbnRleHQuIEEgY29tcG9uZW50XG4gICAgICAgIC8vIGNvbm5lY3RlZCB0byB0aGUgc3RvcmUgdmlhIHByb3BzIHNob3VsZG4ndCB1c2Ugc3Vic2NyaXB0aW9uIGZyb20gY29udGV4dCwgb3IgdmljZSB2ZXJzYS5cblxuICAgICAgICB2YXIgc3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbihzdG9yZSwgZGlkU3RvcmVDb21lRnJvbVByb3BzID8gbnVsbCA6IGNvbnRleHRWYWx1ZS5zdWJzY3JpcHRpb24pOyAvLyBgbm90aWZ5TmVzdGVkU3Vic2AgaXMgZHVwbGljYXRlZCB0byBoYW5kbGUgdGhlIGNhc2Ugd2hlcmUgdGhlIGNvbXBvbmVudCBpcyB1bm1vdW50ZWQgaW5cbiAgICAgICAgLy8gdGhlIG1pZGRsZSBvZiB0aGUgbm90aWZpY2F0aW9uIGxvb3AsIHdoZXJlIGBzdWJzY3JpcHRpb25gIHdpbGwgdGhlbiBiZSBudWxsLiBUaGlzIGNhblxuICAgICAgICAvLyBwcm9iYWJseSBiZSBhdm9pZGVkIGlmIFN1YnNjcmlwdGlvbidzIGxpc3RlbmVycyBsb2dpYyBpcyBjaGFuZ2VkIHRvIG5vdCBjYWxsIGxpc3RlbmVyc1xuICAgICAgICAvLyB0aGF0IGhhdmUgYmVlbiB1bnN1YnNjcmliZWQgaW4gdGhlICBtaWRkbGUgb2YgdGhlIG5vdGlmaWNhdGlvbiBsb29wLlxuXG4gICAgICAgIHZhciBub3RpZnlOZXN0ZWRTdWJzID0gc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMuYmluZChzdWJzY3JpcHRpb24pO1xuICAgICAgICByZXR1cm4gW3N1YnNjcmlwdGlvbiwgbm90aWZ5TmVzdGVkU3Vic107XG4gICAgICB9LCBbc3RvcmUsIGRpZFN0b3JlQ29tZUZyb21Qcm9wcywgY29udGV4dFZhbHVlXSksXG4gICAgICAgICAgc3Vic2NyaXB0aW9uID0gX3VzZU1lbW8yWzBdLFxuICAgICAgICAgIG5vdGlmeU5lc3RlZFN1YnMgPSBfdXNlTWVtbzJbMV07IC8vIERldGVybWluZSB3aGF0IHtzdG9yZSwgc3Vic2NyaXB0aW9ufSB2YWx1ZSBzaG91bGQgYmUgcHV0IGludG8gbmVzdGVkIGNvbnRleHQsIGlmIG5lY2Vzc2FyeSxcbiAgICAgIC8vIGFuZCBtZW1vaXplIHRoYXQgdmFsdWUgdG8gYXZvaWQgdW5uZWNlc3NhcnkgY29udGV4dCB1cGRhdGVzLlxuXG5cbiAgICAgIHZhciBvdmVycmlkZGVuQ29udGV4dFZhbHVlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChkaWRTdG9yZUNvbWVGcm9tUHJvcHMpIHtcbiAgICAgICAgICAvLyBUaGlzIGNvbXBvbmVudCBpcyBkaXJlY3RseSBzdWJzY3JpYmVkIHRvIGEgc3RvcmUgZnJvbSBwcm9wcy5cbiAgICAgICAgICAvLyBXZSBkb24ndCB3YW50IGRlc2NlbmRhbnRzIHJlYWRpbmcgZnJvbSB0aGlzIHN0b3JlIC0gcGFzcyBkb3duIHdoYXRldmVyXG4gICAgICAgICAgLy8gdGhlIGV4aXN0aW5nIGNvbnRleHQgdmFsdWUgaXMgZnJvbSB0aGUgbmVhcmVzdCBjb25uZWN0ZWQgYW5jZXN0b3IuXG4gICAgICAgICAgcmV0dXJuIGNvbnRleHRWYWx1ZTtcbiAgICAgICAgfSAvLyBPdGhlcndpc2UsIHB1dCB0aGlzIGNvbXBvbmVudCdzIHN1YnNjcmlwdGlvbiBpbnN0YW5jZSBpbnRvIGNvbnRleHQsIHNvIHRoYXRcbiAgICAgICAgLy8gY29ubmVjdGVkIGRlc2NlbmRhbnRzIHdvbid0IHVwZGF0ZSB1bnRpbCBhZnRlciB0aGlzIGNvbXBvbmVudCBpcyBkb25lXG5cblxuICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIGNvbnRleHRWYWx1ZSwge1xuICAgICAgICAgIHN1YnNjcmlwdGlvbjogc3Vic2NyaXB0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSwgW2RpZFN0b3JlQ29tZUZyb21Qcm9wcywgY29udGV4dFZhbHVlLCBzdWJzY3JpcHRpb25dKTsgLy8gV2UgbmVlZCB0byBmb3JjZSB0aGlzIHdyYXBwZXIgY29tcG9uZW50IHRvIHJlLXJlbmRlciB3aGVuZXZlciBhIFJlZHV4IHN0b3JlIHVwZGF0ZVxuICAgICAgLy8gY2F1c2VzIGEgY2hhbmdlIHRvIHRoZSBjYWxjdWxhdGVkIGNoaWxkIGNvbXBvbmVudCBwcm9wcyAob3Igd2UgY2F1Z2h0IGFuIGVycm9yIGluIG1hcFN0YXRlKVxuXG4gICAgICB2YXIgX3VzZVJlZHVjZXIgPSB1c2VSZWR1Y2VyKHN0b3JlU3RhdGVVcGRhdGVzUmVkdWNlciwgRU1QVFlfQVJSQVksIGluaXRTdGF0ZVVwZGF0ZXMpLFxuICAgICAgICAgIF91c2VSZWR1Y2VyJCA9IF91c2VSZWR1Y2VyWzBdLFxuICAgICAgICAgIHByZXZpb3VzU3RhdGVVcGRhdGVSZXN1bHQgPSBfdXNlUmVkdWNlciRbMF0sXG4gICAgICAgICAgZm9yY2VDb21wb25lbnRVcGRhdGVEaXNwYXRjaCA9IF91c2VSZWR1Y2VyWzFdOyAvLyBQcm9wYWdhdGUgYW55IG1hcFN0YXRlL21hcERpc3BhdGNoIGVycm9ycyB1cHdhcmRzXG5cblxuICAgICAgaWYgKHByZXZpb3VzU3RhdGVVcGRhdGVSZXN1bHQgJiYgcHJldmlvdXNTdGF0ZVVwZGF0ZVJlc3VsdC5lcnJvcikge1xuICAgICAgICB0aHJvdyBwcmV2aW91c1N0YXRlVXBkYXRlUmVzdWx0LmVycm9yO1xuICAgICAgfSAvLyBTZXQgdXAgcmVmcyB0byBjb29yZGluYXRlIHZhbHVlcyBiZXR3ZWVuIHRoZSBzdWJzY3JpcHRpb24gZWZmZWN0IGFuZCB0aGUgcmVuZGVyIGxvZ2ljXG5cblxuICAgICAgdmFyIGxhc3RDaGlsZFByb3BzID0gdXNlUmVmKCk7XG4gICAgICB2YXIgbGFzdFdyYXBwZXJQcm9wcyA9IHVzZVJlZih3cmFwcGVyUHJvcHMpO1xuICAgICAgdmFyIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUgPSB1c2VSZWYoKTtcbiAgICAgIHZhciByZW5kZXJJc1NjaGVkdWxlZCA9IHVzZVJlZihmYWxzZSk7XG4gICAgICB2YXIgYWN0dWFsQ2hpbGRQcm9wcyA9IHVzZVB1cmVPbmx5TWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFRyaWNreSBsb2dpYyBoZXJlOlxuICAgICAgICAvLyAtIFRoaXMgcmVuZGVyIG1heSBoYXZlIGJlZW4gdHJpZ2dlcmVkIGJ5IGEgUmVkdXggc3RvcmUgdXBkYXRlIHRoYXQgcHJvZHVjZWQgbmV3IGNoaWxkIHByb3BzXG4gICAgICAgIC8vIC0gSG93ZXZlciwgd2UgbWF5IGhhdmUgZ290dGVuIG5ldyB3cmFwcGVyIHByb3BzIGFmdGVyIHRoYXRcbiAgICAgICAgLy8gSWYgd2UgaGF2ZSBuZXcgY2hpbGQgcHJvcHMsIGFuZCB0aGUgc2FtZSB3cmFwcGVyIHByb3BzLCB3ZSBrbm93IHdlIHNob3VsZCB1c2UgdGhlIG5ldyBjaGlsZCBwcm9wcyBhcy1pcy5cbiAgICAgICAgLy8gQnV0LCBpZiB3ZSBoYXZlIG5ldyB3cmFwcGVyIHByb3BzLCB0aG9zZSBtaWdodCBjaGFuZ2UgdGhlIGNoaWxkIHByb3BzLCBzbyB3ZSBoYXZlIHRvIHJlY2FsY3VsYXRlIHRoaW5ncy5cbiAgICAgICAgLy8gU28sIHdlJ2xsIHVzZSB0aGUgY2hpbGQgcHJvcHMgZnJvbSBzdG9yZSB1cGRhdGUgb25seSBpZiB0aGUgd3JhcHBlciBwcm9wcyBhcmUgdGhlIHNhbWUgYXMgbGFzdCB0aW1lLlxuICAgICAgICBpZiAoY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50ICYmIHdyYXBwZXJQcm9wcyA9PT0gbGFzdFdyYXBwZXJQcm9wcy5jdXJyZW50KSB7XG4gICAgICAgICAgcmV0dXJuIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUuY3VycmVudDtcbiAgICAgICAgfSAvLyBUT0RPIFdlJ3JlIHJlYWRpbmcgdGhlIHN0b3JlIGRpcmVjdGx5IGluIHJlbmRlcigpIGhlcmUuIEJhZCBpZGVhP1xuICAgICAgICAvLyBUaGlzIHdpbGwgbGlrZWx5IGNhdXNlIEJhZCBUaGluZ3MgKFRNKSB0byBoYXBwZW4gaW4gQ29uY3VycmVudCBNb2RlLlxuICAgICAgICAvLyBOb3RlIHRoYXQgd2UgZG8gdGhpcyBiZWNhdXNlIG9uIHJlbmRlcnMgX25vdF8gY2F1c2VkIGJ5IHN0b3JlIHVwZGF0ZXMsIHdlIG5lZWQgdGhlIGxhdGVzdCBzdG9yZSBzdGF0ZVxuICAgICAgICAvLyB0byBkZXRlcm1pbmUgd2hhdCB0aGUgY2hpbGQgcHJvcHMgc2hvdWxkIGJlLlxuXG5cbiAgICAgICAgcmV0dXJuIGNoaWxkUHJvcHNTZWxlY3RvcihzdG9yZS5nZXRTdGF0ZSgpLCB3cmFwcGVyUHJvcHMpO1xuICAgICAgfSwgW3N0b3JlLCBwcmV2aW91c1N0YXRlVXBkYXRlUmVzdWx0LCB3cmFwcGVyUHJvcHNdKTsgLy8gV2UgbmVlZCB0aGlzIHRvIGV4ZWN1dGUgc3luY2hyb25vdXNseSBldmVyeSB0aW1lIHdlIHJlLXJlbmRlci4gSG93ZXZlciwgUmVhY3Qgd2FybnNcbiAgICAgIC8vIGFib3V0IHVzZUxheW91dEVmZmVjdCBpbiBTU1IsIHNvIHdlIHRyeSB0byBkZXRlY3QgZW52aXJvbm1lbnQgYW5kIGZhbGwgYmFjayB0b1xuICAgICAgLy8ganVzdCB1c2VFZmZlY3QgaW5zdGVhZCB0byBhdm9pZCB0aGUgd2FybmluZywgc2luY2UgbmVpdGhlciB3aWxsIHJ1biBhbnl3YXkuXG5cbiAgICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBXZSB3YW50IHRvIGNhcHR1cmUgdGhlIHdyYXBwZXIgcHJvcHMgYW5kIGNoaWxkIHByb3BzIHdlIHVzZWQgZm9yIGxhdGVyIGNvbXBhcmlzb25zXG4gICAgICAgIGxhc3RXcmFwcGVyUHJvcHMuY3VycmVudCA9IHdyYXBwZXJQcm9wcztcbiAgICAgICAgbGFzdENoaWxkUHJvcHMuY3VycmVudCA9IGFjdHVhbENoaWxkUHJvcHM7XG4gICAgICAgIHJlbmRlcklzU2NoZWR1bGVkLmN1cnJlbnQgPSBmYWxzZTsgLy8gSWYgdGhlIHJlbmRlciB3YXMgZnJvbSBhIHN0b3JlIHVwZGF0ZSwgY2xlYXIgb3V0IHRoYXQgcmVmZXJlbmNlIGFuZCBjYXNjYWRlIHRoZSBzdWJzY3JpYmVyIHVwZGF0ZVxuXG4gICAgICAgIGlmIChjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQpIHtcbiAgICAgICAgICBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQgPSBudWxsO1xuICAgICAgICAgIG5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICAgICAgfVxuICAgICAgfSk7IC8vIE91ciByZS1zdWJzY3JpYmUgbG9naWMgb25seSBydW5zIHdoZW4gdGhlIHN0b3JlL3N1YnNjcmlwdGlvbiBzZXR1cCBjaGFuZ2VzXG5cbiAgICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBJZiB3ZSdyZSBub3Qgc3Vic2NyaWJlZCB0byB0aGUgc3RvcmUsIG5vdGhpbmcgdG8gZG8gaGVyZVxuICAgICAgICBpZiAoIXNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcykgcmV0dXJuOyAvLyBDYXB0dXJlIHZhbHVlcyBmb3IgY2hlY2tpbmcgaWYgYW5kIHdoZW4gdGhpcyBjb21wb25lbnQgdW5tb3VudHNcblxuICAgICAgICB2YXIgZGlkVW5zdWJzY3JpYmUgPSBmYWxzZTtcbiAgICAgICAgdmFyIGxhc3RUaHJvd25FcnJvciA9IG51bGw7IC8vIFdlJ2xsIHJ1biB0aGlzIGNhbGxiYWNrIGV2ZXJ5IHRpbWUgYSBzdG9yZSBzdWJzY3JpcHRpb24gdXBkYXRlIHByb3BhZ2F0ZXMgdG8gdGhpcyBjb21wb25lbnRcblxuICAgICAgICB2YXIgY2hlY2tGb3JVcGRhdGVzID0gZnVuY3Rpb24gY2hlY2tGb3JVcGRhdGVzKCkge1xuICAgICAgICAgIGlmIChkaWRVbnN1YnNjcmliZSkge1xuICAgICAgICAgICAgLy8gRG9uJ3QgcnVuIHN0YWxlIGxpc3RlbmVycy5cbiAgICAgICAgICAgIC8vIFJlZHV4IGRvZXNuJ3QgZ3VhcmFudGVlIHVuc3Vic2NyaXB0aW9ucyBoYXBwZW4gdW50aWwgbmV4dCBkaXNwYXRjaC5cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgbGF0ZXN0U3RvcmVTdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCk7XG4gICAgICAgICAgdmFyIG5ld0NoaWxkUHJvcHMsIGVycm9yO1xuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIEFjdHVhbGx5IHJ1biB0aGUgc2VsZWN0b3Igd2l0aCB0aGUgbW9zdCByZWNlbnQgc3RvcmUgc3RhdGUgYW5kIHdyYXBwZXIgcHJvcHNcbiAgICAgICAgICAgIC8vIHRvIGRldGVybWluZSB3aGF0IHRoZSBjaGlsZCBwcm9wcyBzaG91bGQgYmVcbiAgICAgICAgICAgIG5ld0NoaWxkUHJvcHMgPSBjaGlsZFByb3BzU2VsZWN0b3IobGF0ZXN0U3RvcmVTdGF0ZSwgbGFzdFdyYXBwZXJQcm9wcy5jdXJyZW50KTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBlcnJvciA9IGU7XG4gICAgICAgICAgICBsYXN0VGhyb3duRXJyb3IgPSBlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghZXJyb3IpIHtcbiAgICAgICAgICAgIGxhc3RUaHJvd25FcnJvciA9IG51bGw7XG4gICAgICAgICAgfSAvLyBJZiB0aGUgY2hpbGQgcHJvcHMgaGF2ZW4ndCBjaGFuZ2VkLCBub3RoaW5nIHRvIGRvIGhlcmUgLSBjYXNjYWRlIHRoZSBzdWJzY3JpcHRpb24gdXBkYXRlXG5cblxuICAgICAgICAgIGlmIChuZXdDaGlsZFByb3BzID09PSBsYXN0Q2hpbGRQcm9wcy5jdXJyZW50KSB7XG4gICAgICAgICAgICBpZiAoIXJlbmRlcklzU2NoZWR1bGVkLmN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgbm90aWZ5TmVzdGVkU3VicygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBTYXZlIHJlZmVyZW5jZXMgdG8gdGhlIG5ldyBjaGlsZCBwcm9wcy4gIE5vdGUgdGhhdCB3ZSB0cmFjayB0aGUgXCJjaGlsZCBwcm9wcyBmcm9tIHN0b3JlIHVwZGF0ZVwiXG4gICAgICAgICAgICAvLyBhcyBhIHJlZiBpbnN0ZWFkIG9mIGEgdXNlU3RhdGUvdXNlUmVkdWNlciBiZWNhdXNlIHdlIG5lZWQgYSB3YXkgdG8gZGV0ZXJtaW5lIGlmIHRoYXQgdmFsdWUgaGFzXG4gICAgICAgICAgICAvLyBiZWVuIHByb2Nlc3NlZC4gIElmIHRoaXMgd2VudCBpbnRvIHVzZVN0YXRlL3VzZVJlZHVjZXIsIHdlIGNvdWxkbid0IGNsZWFyIG91dCB0aGUgdmFsdWUgd2l0aG91dFxuICAgICAgICAgICAgLy8gZm9yY2luZyBhbm90aGVyIHJlLXJlbmRlciwgd2hpY2ggd2UgZG9uJ3Qgd2FudC5cbiAgICAgICAgICAgIGxhc3RDaGlsZFByb3BzLmN1cnJlbnQgPSBuZXdDaGlsZFByb3BzO1xuICAgICAgICAgICAgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50ID0gbmV3Q2hpbGRQcm9wcztcbiAgICAgICAgICAgIHJlbmRlcklzU2NoZWR1bGVkLmN1cnJlbnQgPSB0cnVlOyAvLyBJZiB0aGUgY2hpbGQgcHJvcHMgX2RpZF8gY2hhbmdlIChvciB3ZSBjYXVnaHQgYW4gZXJyb3IpLCB0aGlzIHdyYXBwZXIgY29tcG9uZW50IG5lZWRzIHRvIHJlLXJlbmRlclxuXG4gICAgICAgICAgICBmb3JjZUNvbXBvbmVudFVwZGF0ZURpc3BhdGNoKHtcbiAgICAgICAgICAgICAgdHlwZTogJ1NUT1JFX1VQREFURUQnLFxuICAgICAgICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgICAgICAgbGF0ZXN0U3RvcmVTdGF0ZTogbGF0ZXN0U3RvcmVTdGF0ZSxcbiAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3JcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9OyAvLyBBY3R1YWxseSBzdWJzY3JpYmUgdG8gdGhlIG5lYXJlc3QgY29ubmVjdGVkIGFuY2VzdG9yIChvciBzdG9yZSlcblxuXG4gICAgICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gY2hlY2tGb3JVcGRhdGVzO1xuICAgICAgICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7IC8vIFB1bGwgZGF0YSBmcm9tIHRoZSBzdG9yZSBhZnRlciBmaXJzdCByZW5kZXIgaW4gY2FzZSB0aGUgc3RvcmUgaGFzXG4gICAgICAgIC8vIGNoYW5nZWQgc2luY2Ugd2UgYmVnYW4uXG5cbiAgICAgICAgY2hlY2tGb3JVcGRhdGVzKCk7XG5cbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlV3JhcHBlciA9IGZ1bmN0aW9uIHVuc3Vic2NyaWJlV3JhcHBlcigpIHtcbiAgICAgICAgICBkaWRVbnN1YnNjcmliZSA9IHRydWU7XG4gICAgICAgICAgc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG5cbiAgICAgICAgICBpZiAobGFzdFRocm93bkVycm9yKSB7XG4gICAgICAgICAgICAvLyBJdCdzIHBvc3NpYmxlIHRoYXQgd2UgY2F1Z2h0IGFuIGVycm9yIGR1ZSB0byBhIGJhZCBtYXBTdGF0ZSBmdW5jdGlvbiwgYnV0IHRoZVxuICAgICAgICAgICAgLy8gcGFyZW50IHJlLXJlbmRlcmVkIHdpdGhvdXQgdGhpcyBjb21wb25lbnQgYW5kIHdlJ3JlIGFib3V0IHRvIHVubW91bnQuXG4gICAgICAgICAgICAvLyBUaGlzIHNob3VsZG4ndCBoYXBwZW4gYXMgbG9uZyBhcyB3ZSBkbyB0b3AtZG93biBzdWJzY3JpcHRpb25zIGNvcnJlY3RseSwgYnV0XG4gICAgICAgICAgICAvLyBpZiB3ZSBldmVyIGRvIHRob3NlIHdyb25nLCB0aGlzIHRocm93IHdpbGwgc3VyZmFjZSB0aGUgZXJyb3IgaW4gb3VyIHRlc3RzLlxuICAgICAgICAgICAgLy8gSW4gdGhhdCBjYXNlLCB0aHJvdyB0aGUgZXJyb3IgZnJvbSBoZXJlIHNvIGl0IGRvZXNuJ3QgZ2V0IGxvc3QuXG4gICAgICAgICAgICB0aHJvdyBsYXN0VGhyb3duRXJyb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiB1bnN1YnNjcmliZVdyYXBwZXI7XG4gICAgICB9LCBbc3RvcmUsIHN1YnNjcmlwdGlvbiwgY2hpbGRQcm9wc1NlbGVjdG9yXSk7IC8vIE5vdyB0aGF0IGFsbCB0aGF0J3MgZG9uZSwgd2UgY2FuIGZpbmFsbHkgdHJ5IHRvIGFjdHVhbGx5IHJlbmRlciB0aGUgY2hpbGQgY29tcG9uZW50LlxuICAgICAgLy8gV2UgbWVtb2l6ZSB0aGUgZWxlbWVudHMgZm9yIHRoZSByZW5kZXJlZCBjaGlsZCBjb21wb25lbnQgYXMgYW4gb3B0aW1pemF0aW9uLlxuXG4gICAgICB2YXIgcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50ID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIF9leHRlbmRzKHt9LCBhY3R1YWxDaGlsZFByb3BzLCB7XG4gICAgICAgICAgcmVmOiBmb3J3YXJkZWRSZWZcbiAgICAgICAgfSkpO1xuICAgICAgfSwgW2ZvcndhcmRlZFJlZiwgV3JhcHBlZENvbXBvbmVudCwgYWN0dWFsQ2hpbGRQcm9wc10pOyAvLyBJZiBSZWFjdCBzZWVzIHRoZSBleGFjdCBzYW1lIGVsZW1lbnQgcmVmZXJlbmNlIGFzIGxhc3QgdGltZSwgaXQgYmFpbHMgb3V0IG9mIHJlLXJlbmRlcmluZ1xuICAgICAgLy8gdGhhdCBjaGlsZCwgc2FtZSBhcyBpZiBpdCB3YXMgd3JhcHBlZCBpbiBSZWFjdC5tZW1vKCkgb3IgcmV0dXJuZWQgZmFsc2UgZnJvbSBzaG91bGRDb21wb25lbnRVcGRhdGUuXG5cbiAgICAgIHZhciByZW5kZXJlZENoaWxkID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHtcbiAgICAgICAgICAvLyBJZiB0aGlzIGNvbXBvbmVudCBpcyBzdWJzY3JpYmVkIHRvIHN0b3JlIHVwZGF0ZXMsIHdlIG5lZWQgdG8gcGFzcyBpdHMgb3duXG4gICAgICAgICAgLy8gc3Vic2NyaXB0aW9uIGluc3RhbmNlIGRvd24gdG8gb3VyIGRlc2NlbmRhbnRzLiBUaGF0IG1lYW5zIHJlbmRlcmluZyB0aGUgc2FtZVxuICAgICAgICAgIC8vIENvbnRleHQgaW5zdGFuY2UsIGFuZCBwdXR0aW5nIGEgZGlmZmVyZW50IHZhbHVlIGludG8gdGhlIGNvbnRleHQuXG4gICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dFRvVXNlLlByb3ZpZGVyLCB7XG4gICAgICAgICAgICB2YWx1ZTogb3ZlcnJpZGRlbkNvbnRleHRWYWx1ZVxuICAgICAgICAgIH0sIHJlbmRlcmVkV3JhcHBlZENvbXBvbmVudCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50O1xuICAgICAgfSwgW0NvbnRleHRUb1VzZSwgcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50LCBvdmVycmlkZGVuQ29udGV4dFZhbHVlXSk7XG4gICAgICByZXR1cm4gcmVuZGVyZWRDaGlsZDtcbiAgICB9IC8vIElmIHdlJ3JlIGluIFwicHVyZVwiIG1vZGUsIGVuc3VyZSBvdXIgd3JhcHBlciBjb21wb25lbnQgb25seSByZS1yZW5kZXJzIHdoZW4gaW5jb21pbmcgcHJvcHMgaGF2ZSBjaGFuZ2VkLlxuXG5cbiAgICB2YXIgQ29ubmVjdCA9IHB1cmUgPyBSZWFjdC5tZW1vKENvbm5lY3RGdW5jdGlvbikgOiBDb25uZWN0RnVuY3Rpb247XG4gICAgQ29ubmVjdC5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICBDb25uZWN0LmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG5cbiAgICBpZiAoZm9yd2FyZFJlZikge1xuICAgICAgdmFyIGZvcndhcmRlZCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gZm9yd2FyZENvbm5lY3RSZWYocHJvcHMsIHJlZikge1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb25uZWN0LCBfZXh0ZW5kcyh7fSwgcHJvcHMsIHtcbiAgICAgICAgICBmb3J3YXJkZWRSZWY6IHJlZlxuICAgICAgICB9KSk7XG4gICAgICB9KTtcbiAgICAgIGZvcndhcmRlZC5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICAgICAgZm9yd2FyZGVkLldyYXBwZWRDb21wb25lbnQgPSBXcmFwcGVkQ29tcG9uZW50O1xuICAgICAgcmV0dXJuIGhvaXN0U3RhdGljcyhmb3J3YXJkZWQsIFdyYXBwZWRDb21wb25lbnQpO1xuICAgIH1cblxuICAgIHJldHVybiBob2lzdFN0YXRpY3MoQ29ubmVjdCwgV3JhcHBlZENvbXBvbmVudCk7XG4gIH07XG59IiwidmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkgcmV0dXJuIHRydWU7XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuICBpZiAoa2V5c0EubGVuZ3RoICE9PSBrZXlzQi5sZW5ndGgpIHJldHVybiBmYWxzZTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXNBLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKCFoYXNPd24uY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn0iLCJpbXBvcnQgdmVyaWZ5UGxhaW5PYmplY3QgZnJvbSAnLi4vdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3QnO1xuZXhwb3J0IGZ1bmN0aW9uIHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZ2V0Q29uc3RhbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRDb25zdGFudFNlbGVjdG9yKGRpc3BhdGNoLCBvcHRpb25zKSB7XG4gICAgdmFyIGNvbnN0YW50ID0gZ2V0Q29uc3RhbnQoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuXG4gICAgZnVuY3Rpb24gY29uc3RhbnRTZWxlY3RvcigpIHtcbiAgICAgIHJldHVybiBjb25zdGFudDtcbiAgICB9XG5cbiAgICBjb25zdGFudFNlbGVjdG9yLmRlcGVuZHNPbk93blByb3BzID0gZmFsc2U7XG4gICAgcmV0dXJuIGNvbnN0YW50U2VsZWN0b3I7XG4gIH07XG59IC8vIGRlcGVuZHNPbk93blByb3BzIGlzIHVzZWQgYnkgY3JlYXRlTWFwVG9Qcm9wc1Byb3h5IHRvIGRldGVybWluZSB3aGV0aGVyIHRvIHBhc3MgcHJvcHMgYXMgYXJnc1xuLy8gdG8gdGhlIG1hcFRvUHJvcHMgZnVuY3Rpb24gYmVpbmcgd3JhcHBlZC4gSXQgaXMgYWxzbyB1c2VkIGJ5IG1ha2VQdXJlUHJvcHNTZWxlY3RvciB0byBkZXRlcm1pbmVcbi8vIHdoZXRoZXIgbWFwVG9Qcm9wcyBuZWVkcyB0byBiZSBpbnZva2VkIHdoZW4gcHJvcHMgaGF2ZSBjaGFuZ2VkLlxuLy9cbi8vIEEgbGVuZ3RoIG9mIG9uZSBzaWduYWxzIHRoYXQgbWFwVG9Qcm9wcyBkb2VzIG5vdCBkZXBlbmQgb24gcHJvcHMgZnJvbSB0aGUgcGFyZW50IGNvbXBvbmVudC5cbi8vIEEgbGVuZ3RoIG9mIHplcm8gaXMgYXNzdW1lZCB0byBtZWFuIG1hcFRvUHJvcHMgaXMgZ2V0dGluZyBhcmdzIHZpYSBhcmd1bWVudHMgb3IgLi4uYXJncyBhbmRcbi8vIHRoZXJlZm9yZSBub3QgcmVwb3J0aW5nIGl0cyBsZW5ndGggYWNjdXJhdGVseS4uXG5cbmV4cG9ydCBmdW5jdGlvbiBnZXREZXBlbmRzT25Pd25Qcm9wcyhtYXBUb1Byb3BzKSB7XG4gIHJldHVybiBtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzICE9PSBudWxsICYmIG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMgIT09IHVuZGVmaW5lZCA/IEJvb2xlYW4obWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgOiBtYXBUb1Byb3BzLmxlbmd0aCAhPT0gMTtcbn0gLy8gVXNlZCBieSB3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiBhbmQgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24sXG4vLyB0aGlzIGZ1bmN0aW9uIHdyYXBzIG1hcFRvUHJvcHMgaW4gYSBwcm94eSBmdW5jdGlvbiB3aGljaCBkb2VzIHNldmVyYWwgdGhpbmdzOlxuLy9cbi8vICAqIERldGVjdHMgd2hldGhlciB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyBjYWxsZWQgZGVwZW5kcyBvbiBwcm9wcywgd2hpY2hcbi8vICAgIGlzIHVzZWQgYnkgc2VsZWN0b3JGYWN0b3J5IHRvIGRlY2lkZSBpZiBpdCBzaG91bGQgcmVpbnZva2Ugb24gcHJvcHMgY2hhbmdlcy5cbi8vXG4vLyAgKiBPbiBmaXJzdCBjYWxsLCBoYW5kbGVzIG1hcFRvUHJvcHMgaWYgcmV0dXJucyBhbm90aGVyIGZ1bmN0aW9uLCBhbmQgdHJlYXRzIHRoYXRcbi8vICAgIG5ldyBmdW5jdGlvbiBhcyB0aGUgdHJ1ZSBtYXBUb1Byb3BzIGZvciBzdWJzZXF1ZW50IGNhbGxzLlxuLy9cbi8vICAqIE9uIGZpcnN0IGNhbGwsIHZlcmlmaWVzIHRoZSBmaXJzdCByZXN1bHQgaXMgYSBwbGFpbiBvYmplY3QsIGluIG9yZGVyIHRvIHdhcm5cbi8vICAgIHRoZSBkZXZlbG9wZXIgdGhhdCB0aGVpciBtYXBUb1Byb3BzIGZ1bmN0aW9uIGlzIG5vdCByZXR1cm5pbmcgYSB2YWxpZCByZXN1bHQuXG4vL1xuXG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFRvUHJvcHMsIG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRQcm94eVNlbGVjdG9yKGRpc3BhdGNoLCBfcmVmKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZTtcblxuICAgIHZhciBwcm94eSA9IGZ1bmN0aW9uIG1hcFRvUHJvcHNQcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKSB7XG4gICAgICByZXR1cm4gcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPyBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIDogcHJveHkubWFwVG9Qcm9wcyhzdGF0ZU9yRGlzcGF0Y2gpO1xuICAgIH07IC8vIGFsbG93IGRldGVjdEZhY3RvcnlBbmRWZXJpZnkgdG8gZ2V0IG93blByb3BzXG5cblxuICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gdHJ1ZTtcblxuICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBmdW5jdGlvbiBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBtYXBUb1Byb3BzO1xuICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhtYXBUb1Byb3BzKTtcbiAgICAgIHZhciBwcm9wcyA9IHByb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpO1xuXG4gICAgICBpZiAodHlwZW9mIHByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBwcm9wcztcbiAgICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhwcm9wcyk7XG4gICAgICAgIHByb3BzID0gcHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB2ZXJpZnlQbGFpbk9iamVjdChwcm9wcywgZGlzcGxheU5hbWUsIG1ldGhvZE5hbWUpO1xuICAgICAgcmV0dXJuIHByb3BzO1xuICAgIH07XG5cbiAgICByZXR1cm4gcHJveHk7XG4gIH07XG59IiwiaW1wb3J0IHsgYmluZEFjdGlvbkNyZWF0b3JzIH0gZnJvbSAncmVkdXgnO1xuaW1wb3J0IHsgd3JhcE1hcFRvUHJvcHNDb25zdGFudCwgd3JhcE1hcFRvUHJvcHNGdW5jIH0gZnJvbSAnLi93cmFwTWFwVG9Qcm9wcyc7XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24obWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWFwRGlzcGF0Y2hUb1Byb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcERpc3BhdGNoVG9Qcm9wcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiAhbWFwRGlzcGF0Y2hUb1Byb3BzID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZGlzcGF0Y2g6IGRpc3BhdGNoXG4gICAgfTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzT2JqZWN0KG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gbWFwRGlzcGF0Y2hUb1Byb3BzICYmIHR5cGVvZiBtYXBEaXNwYXRjaFRvUHJvcHMgPT09ICdvYmplY3QnID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3JzKG1hcERpc3BhdGNoVG9Qcm9wcywgZGlzcGF0Y2gpO1xuICB9KSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbiwgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzTWlzc2luZywgd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzT2JqZWN0XTsiLCJpbXBvcnQgeyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50LCB3cmFwTWFwVG9Qcm9wc0Z1bmMgfSBmcm9tICcuL3dyYXBNYXBUb1Byb3BzJztcbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbihtYXBTdGF0ZVRvUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtYXBTdGF0ZVRvUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwU3RhdGVUb1Byb3BzLCAnbWFwU3RhdGVUb1Byb3BzJykgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcFN0YXRlVG9Qcm9wc0lzTWlzc2luZyhtYXBTdGF0ZVRvUHJvcHMpIHtcbiAgcmV0dXJuICFtYXBTdGF0ZVRvUHJvcHMgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge307XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGRlZmF1bHQgW3doZW5NYXBTdGF0ZVRvUHJvcHNJc0Z1bmN0aW9uLCB3aGVuTWFwU3RhdGVUb1Byb3BzSXNNaXNzaW5nXTsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCB2ZXJpZnlQbGFpbk9iamVjdCBmcm9tICcuLi91dGlscy92ZXJpZnlQbGFpbk9iamVjdCc7XG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdE1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpIHtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBvd25Qcm9wcywgc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRNZXJnZVByb3BzUHJveHkoZGlzcGF0Y2gsIF9yZWYpIHtcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lLFxuICAgICAgICBwdXJlID0gX3JlZi5wdXJlLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZi5hcmVNZXJnZWRQcm9wc0VxdWFsO1xuICAgIHZhciBoYXNSdW5PbmNlID0gZmFsc2U7XG4gICAgdmFyIG1lcmdlZFByb3BzO1xuICAgIHJldHVybiBmdW5jdGlvbiBtZXJnZVByb3BzUHJveHkoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpIHtcbiAgICAgIHZhciBuZXh0TWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcblxuICAgICAgaWYgKGhhc1J1bk9uY2UpIHtcbiAgICAgICAgaWYgKCFwdXJlIHx8ICFhcmVNZXJnZWRQcm9wc0VxdWFsKG5leHRNZXJnZWRQcm9wcywgbWVyZ2VkUHJvcHMpKSBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGhhc1J1bk9uY2UgPSB0cnVlO1xuICAgICAgICBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHZlcmlmeVBsYWluT2JqZWN0KG1lcmdlZFByb3BzLCBkaXNwbGF5TmFtZSwgJ21lcmdlUHJvcHMnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICAgIH07XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1lcmdlUHJvcHNJc0Z1bmN0aW9uKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtZXJnZVByb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuICFtZXJnZVByb3BzID8gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkZWZhdWx0TWVyZ2VQcm9wcztcbiAgfSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWVyZ2VQcm9wc0lzRnVuY3Rpb24sIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkXTsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCB2ZXJpZnlTdWJzZWxlY3RvcnMgZnJvbSAnLi92ZXJpZnlTdWJzZWxlY3RvcnMnO1xuZXhwb3J0IGZ1bmN0aW9uIGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3Ioc3RhdGUsIG93blByb3BzKSB7XG4gICAgcmV0dXJuIG1lcmdlUHJvcHMobWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyksIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpLCBvd25Qcm9wcyk7XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoLCBfcmVmKSB7XG4gIHZhciBhcmVTdGF0ZXNFcXVhbCA9IF9yZWYuYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsID0gX3JlZi5hcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsID0gX3JlZi5hcmVTdGF0ZVByb3BzRXF1YWw7XG4gIHZhciBoYXNSdW5BdExlYXN0T25jZSA9IGZhbHNlO1xuICB2YXIgc3RhdGU7XG4gIHZhciBvd25Qcm9wcztcbiAgdmFyIHN0YXRlUHJvcHM7XG4gIHZhciBkaXNwYXRjaFByb3BzO1xuICB2YXIgbWVyZ2VkUHJvcHM7XG5cbiAgZnVuY3Rpb24gaGFuZGxlRmlyc3RDYWxsKGZpcnN0U3RhdGUsIGZpcnN0T3duUHJvcHMpIHtcbiAgICBzdGF0ZSA9IGZpcnN0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBmaXJzdE93blByb3BzO1xuICAgIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICBoYXNSdW5BdExlYXN0T25jZSA9IHRydWU7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHNBbmROZXdTdGF0ZSgpIHtcbiAgICBzdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgaWYgKG1hcERpc3BhdGNoVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgZGlzcGF0Y2hQcm9wcyA9IG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpO1xuICAgIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHMoKSB7XG4gICAgaWYgKG1hcFN0YXRlVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgc3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIGlmIChtYXBEaXNwYXRjaFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIGRpc3BhdGNoUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1N0YXRlKCkge1xuICAgIHZhciBuZXh0U3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZVByb3BzQ2hhbmdlZCA9ICFhcmVTdGF0ZVByb3BzRXF1YWwobmV4dFN0YXRlUHJvcHMsIHN0YXRlUHJvcHMpO1xuICAgIHN0YXRlUHJvcHMgPSBuZXh0U3RhdGVQcm9wcztcbiAgICBpZiAoc3RhdGVQcm9wc0NoYW5nZWQpIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlU3Vic2VxdWVudENhbGxzKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSB7XG4gICAgdmFyIHByb3BzQ2hhbmdlZCA9ICFhcmVPd25Qcm9wc0VxdWFsKG5leHRPd25Qcm9wcywgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZUNoYW5nZWQgPSAhYXJlU3RhdGVzRXF1YWwobmV4dFN0YXRlLCBzdGF0ZSk7XG4gICAgc3RhdGUgPSBuZXh0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBuZXh0T3duUHJvcHM7XG4gICAgaWYgKHByb3BzQ2hhbmdlZCAmJiBzdGF0ZUNoYW5nZWQpIHJldHVybiBoYW5kbGVOZXdQcm9wc0FuZE5ld1N0YXRlKCk7XG4gICAgaWYgKHByb3BzQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1Byb3BzKCk7XG4gICAgaWYgKHN0YXRlQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1N0YXRlKCk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHB1cmVGaW5hbFByb3BzU2VsZWN0b3IobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIHtcbiAgICByZXR1cm4gaGFzUnVuQXRMZWFzdE9uY2UgPyBoYW5kbGVTdWJzZXF1ZW50Q2FsbHMobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIDogaGFuZGxlRmlyc3RDYWxsKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKTtcbiAgfTtcbn0gLy8gVE9ETzogQWRkIG1vcmUgY29tbWVudHNcbi8vIElmIHB1cmUgaXMgdHJ1ZSwgdGhlIHNlbGVjdG9yIHJldHVybmVkIGJ5IHNlbGVjdG9yRmFjdG9yeSB3aWxsIG1lbW9pemUgaXRzIHJlc3VsdHMsXG4vLyBhbGxvd2luZyBjb25uZWN0QWR2YW5jZWQncyBzaG91bGRDb21wb25lbnRVcGRhdGUgdG8gcmV0dXJuIGZhbHNlIGlmIGZpbmFsXG4vLyBwcm9wcyBoYXZlIG5vdCBjaGFuZ2VkLiBJZiBmYWxzZSwgdGhlIHNlbGVjdG9yIHdpbGwgYWx3YXlzIHJldHVybiBhIG5ld1xuLy8gb2JqZWN0IGFuZCBzaG91bGRDb21wb25lbnRVcGRhdGUgd2lsbCBhbHdheXMgcmV0dXJuIHRydWUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkoZGlzcGF0Y2gsIF9yZWYyKSB7XG4gIHZhciBpbml0TWFwU3RhdGVUb1Byb3BzID0gX3JlZjIuaW5pdE1hcFN0YXRlVG9Qcm9wcyxcbiAgICAgIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBfcmVmMi5pbml0TWFwRGlzcGF0Y2hUb1Byb3BzLFxuICAgICAgaW5pdE1lcmdlUHJvcHMgPSBfcmVmMi5pbml0TWVyZ2VQcm9wcyxcbiAgICAgIG9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiaW5pdE1hcFN0YXRlVG9Qcm9wc1wiLCBcImluaXRNYXBEaXNwYXRjaFRvUHJvcHNcIiwgXCJpbml0TWVyZ2VQcm9wc1wiXSk7XG5cbiAgdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGluaXRNYXBTdGF0ZVRvUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuICB2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG4gIHZhciBtZXJnZVByb3BzID0gaW5pdE1lcmdlUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdmVyaWZ5U3Vic2VsZWN0b3JzKG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBvcHRpb25zLmRpc3BsYXlOYW1lKTtcbiAgfVxuXG4gIHZhciBzZWxlY3RvckZhY3RvcnkgPSBvcHRpb25zLnB1cmUgPyBwdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeSA6IGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3Rvcnk7XG4gIHJldHVybiBzZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoLCBvcHRpb25zKTtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IGNvbm5lY3RBZHZhbmNlZCBmcm9tICcuLi9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZCc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4uL3V0aWxzL3NoYWxsb3dFcXVhbCc7XG5pbXBvcnQgZGVmYXVsdE1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcERpc3BhdGNoVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcFN0YXRlVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgZnJvbSAnLi9tZXJnZVByb3BzJztcbmltcG9ydCBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5IGZyb20gJy4vc2VsZWN0b3JGYWN0b3J5Jztcbi8qXHJcbiAgY29ubmVjdCBpcyBhIGZhY2FkZSBvdmVyIGNvbm5lY3RBZHZhbmNlZC4gSXQgdHVybnMgaXRzIGFyZ3MgaW50byBhIGNvbXBhdGlibGVcclxuICBzZWxlY3RvckZhY3RvcnksIHdoaWNoIGhhcyB0aGUgc2lnbmF0dXJlOlxyXG5cclxuICAgIChkaXNwYXRjaCwgb3B0aW9ucykgPT4gKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSA9PiBuZXh0RmluYWxQcm9wc1xyXG4gIFxyXG4gIGNvbm5lY3QgcGFzc2VzIGl0cyBhcmdzIHRvIGNvbm5lY3RBZHZhbmNlZCBhcyBvcHRpb25zLCB3aGljaCB3aWxsIGluIHR1cm4gcGFzcyB0aGVtIHRvXHJcbiAgc2VsZWN0b3JGYWN0b3J5IGVhY2ggdGltZSBhIENvbm5lY3QgY29tcG9uZW50IGluc3RhbmNlIGlzIGluc3RhbnRpYXRlZCBvciBob3QgcmVsb2FkZWQuXHJcblxyXG4gIHNlbGVjdG9yRmFjdG9yeSByZXR1cm5zIGEgZmluYWwgcHJvcHMgc2VsZWN0b3IgZnJvbSBpdHMgbWFwU3RhdGVUb1Byb3BzLFxyXG4gIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMsIG1lcmdlUHJvcHMsXHJcbiAgbWVyZ2VQcm9wc0ZhY3RvcmllcywgYW5kIHB1cmUgYXJncy5cclxuXHJcbiAgVGhlIHJlc3VsdGluZyBmaW5hbCBwcm9wcyBzZWxlY3RvciBpcyBjYWxsZWQgYnkgdGhlIENvbm5lY3QgY29tcG9uZW50IGluc3RhbmNlIHdoZW5ldmVyXHJcbiAgaXQgcmVjZWl2ZXMgbmV3IHByb3BzIG9yIHN0b3JlIHN0YXRlLlxyXG4gKi9cblxuZnVuY3Rpb24gbWF0Y2goYXJnLCBmYWN0b3JpZXMsIG5hbWUpIHtcbiAgZm9yICh2YXIgaSA9IGZhY3Rvcmllcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIHZhciByZXN1bHQgPSBmYWN0b3JpZXNbaV0oYXJnKTtcbiAgICBpZiAocmVzdWx0KSByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChkaXNwYXRjaCwgb3B0aW9ucykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmFsdWUgb2YgdHlwZSBcIiArIHR5cGVvZiBhcmcgKyBcIiBmb3IgXCIgKyBuYW1lICsgXCIgYXJndW1lbnQgd2hlbiBjb25uZWN0aW5nIGNvbXBvbmVudCBcIiArIG9wdGlvbnMud3JhcHBlZENvbXBvbmVudE5hbWUgKyBcIi5cIik7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0cmljdEVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEgPT09IGI7XG59IC8vIGNyZWF0ZUNvbm5lY3Qgd2l0aCBkZWZhdWx0IGFyZ3MgYnVpbGRzIHRoZSAnb2ZmaWNpYWwnIGNvbm5lY3QgYmVoYXZpb3IuIENhbGxpbmcgaXQgd2l0aFxuLy8gZGlmZmVyZW50IG9wdGlvbnMgb3BlbnMgdXAgc29tZSB0ZXN0aW5nIGFuZCBleHRlbnNpYmlsaXR5IHNjZW5hcmlvc1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0KF90ZW1wKSB7XG4gIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBfcmVmJGNvbm5lY3RIT0MgPSBfcmVmLmNvbm5lY3RIT0MsXG4gICAgICBjb25uZWN0SE9DID0gX3JlZiRjb25uZWN0SE9DID09PSB2b2lkIDAgPyBjb25uZWN0QWR2YW5jZWQgOiBfcmVmJGNvbm5lY3RIT0MsXG4gICAgICBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YgPSBfcmVmLm1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWFwU3RhdGVUb1Byb3BzRiA9PT0gdm9pZCAwID8gZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA6IF9yZWYkbWFwU3RhdGVUb1Byb3BzRixcbiAgICAgIF9yZWYkbWFwRGlzcGF0Y2hUb1BybyA9IF9yZWYubWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLFxuICAgICAgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzID0gX3JlZiRtYXBEaXNwYXRjaFRvUHJvID09PSB2b2lkIDAgPyBkZWZhdWx0TWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIDogX3JlZiRtYXBEaXNwYXRjaFRvUHJvLFxuICAgICAgX3JlZiRtZXJnZVByb3BzRmFjdG9yID0gX3JlZi5tZXJnZVByb3BzRmFjdG9yaWVzLFxuICAgICAgbWVyZ2VQcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWVyZ2VQcm9wc0ZhY3RvciA9PT0gdm9pZCAwID8gZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgOiBfcmVmJG1lcmdlUHJvcHNGYWN0b3IsXG4gICAgICBfcmVmJHNlbGVjdG9yRmFjdG9yeSA9IF9yZWYuc2VsZWN0b3JGYWN0b3J5LFxuICAgICAgc2VsZWN0b3JGYWN0b3J5ID0gX3JlZiRzZWxlY3RvckZhY3RvcnkgPT09IHZvaWQgMCA/IGRlZmF1bHRTZWxlY3RvckZhY3RvcnkgOiBfcmVmJHNlbGVjdG9yRmFjdG9yeTtcblxuICByZXR1cm4gZnVuY3Rpb24gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgX3JlZjIpIHtcbiAgICBpZiAoX3JlZjIgPT09IHZvaWQgMCkge1xuICAgICAgX3JlZjIgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgX3JlZjMgPSBfcmVmMixcbiAgICAgICAgX3JlZjMkcHVyZSA9IF9yZWYzLnB1cmUsXG4gICAgICAgIHB1cmUgPSBfcmVmMyRwdXJlID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZjMkcHVyZSxcbiAgICAgICAgX3JlZjMkYXJlU3RhdGVzRXF1YWwgPSBfcmVmMy5hcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgYXJlU3RhdGVzRXF1YWwgPSBfcmVmMyRhcmVTdGF0ZXNFcXVhbCA9PT0gdm9pZCAwID8gc3RyaWN0RXF1YWwgOiBfcmVmMyRhcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgX3JlZjMkYXJlT3duUHJvcHNFcXVhID0gX3JlZjMuYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgICAgYXJlT3duUHJvcHNFcXVhbCA9IF9yZWYzJGFyZU93blByb3BzRXF1YSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlT3duUHJvcHNFcXVhLFxuICAgICAgICBfcmVmMyRhcmVTdGF0ZVByb3BzRXEgPSBfcmVmMy5hcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCA9IF9yZWYzJGFyZVN0YXRlUHJvcHNFcSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlU3RhdGVQcm9wc0VxLFxuICAgICAgICBfcmVmMyRhcmVNZXJnZWRQcm9wc0UgPSBfcmVmMy5hcmVNZXJnZWRQcm9wc0VxdWFsLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZjMkYXJlTWVyZ2VkUHJvcHNFID09PSB2b2lkIDAgPyBzaGFsbG93RXF1YWwgOiBfcmVmMyRhcmVNZXJnZWRQcm9wc0UsXG4gICAgICAgIGV4dHJhT3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYzLCBbXCJwdXJlXCIsIFwiYXJlU3RhdGVzRXF1YWxcIiwgXCJhcmVPd25Qcm9wc0VxdWFsXCIsIFwiYXJlU3RhdGVQcm9wc0VxdWFsXCIsIFwiYXJlTWVyZ2VkUHJvcHNFcXVhbFwiXSk7XG5cbiAgICB2YXIgaW5pdE1hcFN0YXRlVG9Qcm9wcyA9IG1hdGNoKG1hcFN0YXRlVG9Qcm9wcywgbWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzLCAnbWFwU3RhdGVUb1Byb3BzJyk7XG4gICAgdmFyIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBtYXRjaChtYXBEaXNwYXRjaFRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpO1xuICAgIHZhciBpbml0TWVyZ2VQcm9wcyA9IG1hdGNoKG1lcmdlUHJvcHMsIG1lcmdlUHJvcHNGYWN0b3JpZXMsICdtZXJnZVByb3BzJyk7XG4gICAgcmV0dXJuIGNvbm5lY3RIT0Moc2VsZWN0b3JGYWN0b3J5LCBfZXh0ZW5kcyh7XG4gICAgICAvLyB1c2VkIGluIGVycm9yIG1lc3NhZ2VzXG4gICAgICBtZXRob2ROYW1lOiAnY29ubmVjdCcsXG4gICAgICAvLyB1c2VkIHRvIGNvbXB1dGUgQ29ubmVjdCdzIGRpc3BsYXlOYW1lIGZyb20gdGhlIHdyYXBwZWQgY29tcG9uZW50J3MgZGlzcGxheU5hbWUuXG4gICAgICBnZXREaXNwbGF5TmFtZTogZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUobmFtZSkge1xuICAgICAgICByZXR1cm4gXCJDb25uZWN0KFwiICsgbmFtZSArIFwiKVwiO1xuICAgICAgfSxcbiAgICAgIC8vIGlmIG1hcFN0YXRlVG9Qcm9wcyBpcyBmYWxzeSwgdGhlIENvbm5lY3QgY29tcG9uZW50IGRvZXNuJ3Qgc3Vic2NyaWJlIHRvIHN0b3JlIHN0YXRlIGNoYW5nZXNcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlczogQm9vbGVhbihtYXBTdGF0ZVRvUHJvcHMpLFxuICAgICAgLy8gcGFzc2VkIHRocm91Z2ggdG8gc2VsZWN0b3JGYWN0b3J5XG4gICAgICBpbml0TWFwU3RhdGVUb1Byb3BzOiBpbml0TWFwU3RhdGVUb1Byb3BzLFxuICAgICAgaW5pdE1hcERpc3BhdGNoVG9Qcm9wczogaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzOiBpbml0TWVyZ2VQcm9wcyxcbiAgICAgIHB1cmU6IHB1cmUsXG4gICAgICBhcmVTdGF0ZXNFcXVhbDogYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsOiBhcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsOiBhcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsOiBhcmVNZXJnZWRQcm9wc0VxdWFsXG4gICAgfSwgZXh0cmFPcHRpb25zKSk7XG4gIH07XG59XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDb25uZWN0KCk7IiwiaW1wb3J0IFByb3ZpZGVyIGZyb20gJy4vY29tcG9uZW50cy9Qcm92aWRlcic7XG5pbXBvcnQgY29ubmVjdEFkdmFuY2VkIGZyb20gJy4vY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgY29ubmVjdCBmcm9tICcuL2Nvbm5lY3QvY29ubmVjdCc7XG5pbXBvcnQgeyBzZXRCYXRjaCB9IGZyb20gJy4vdXRpbHMvYmF0Y2gnO1xuaW1wb3J0IHsgdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMgYXMgYmF0Y2ggfSBmcm9tICcuL3V0aWxzL3JlYWN0QmF0Y2hlZFVwZGF0ZXMnO1xuc2V0QmF0Y2goYmF0Y2gpO1xuZXhwb3J0IHsgUHJvdmlkZXIsIGNvbm5lY3RBZHZhbmNlZCwgUmVhY3RSZWR1eENvbnRleHQsIGNvbm5lY3QsIGJhdGNoIH07IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgaXNCdWZmZXIgPSByZXF1aXJlKCdpcy1idWZmZXInKTtcblxuLypnbG9iYWwgdG9TdHJpbmc6dHJ1ZSovXG5cbi8vIHV0aWxzIGlzIGEgbGlicmFyeSBvZiBnZW5lcmljIGhlbHBlciBmdW5jdGlvbnMgbm9uLXNwZWNpZmljIHRvIGF4aW9zXG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXkodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXIodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEFycmF5QnVmZmVyXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGb3JtRGF0YVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIEZvcm1EYXRhLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGb3JtRGF0YSh2YWwpIHtcbiAgcmV0dXJuICh0eXBlb2YgRm9ybURhdGEgIT09ICd1bmRlZmluZWQnKSAmJiAodmFsIGluc3RhbmNlb2YgRm9ybURhdGEpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KHZhbCkge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpICYmIChBcnJheUJ1ZmZlci5pc1ZpZXcpKSB7XG4gICAgcmVzdWx0ID0gQXJyYXlCdWZmZXIuaXNWaWV3KHZhbCk7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0ID0gKHZhbCkgJiYgKHZhbC5idWZmZXIpICYmICh2YWwuYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBTdHJpbmdcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFN0cmluZywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzU3RyaW5nKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3N0cmluZyc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBOdW1iZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIE51bWJlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzTnVtYmVyKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ251bWJlcic7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgdW5kZWZpbmVkXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHZhbHVlIGlzIHVuZGVmaW5lZCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYW4gT2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gT2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3QodmFsKSB7XG4gIHJldHVybiB2YWwgIT09IG51bGwgJiYgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBEYXRlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBEYXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNEYXRlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBEYXRlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGaWxlXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGaWxlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGaWxlKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGaWxlXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCbG9iXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBCbG9iLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNCbG9iKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBCbG9iXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBGdW5jdGlvblxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRnVuY3Rpb24sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyZWFtXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJlYW0sIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmVhbSh2YWwpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KHZhbCkgJiYgaXNGdW5jdGlvbih2YWwucGlwZSk7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBVUkxTZWFyY2hQYXJhbXMgb2JqZWN0LCBvdGhlcndpc2UgZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNVUkxTZWFyY2hQYXJhbXModmFsKSB7XG4gIHJldHVybiB0eXBlb2YgVVJMU2VhcmNoUGFyYW1zICE9PSAndW5kZWZpbmVkJyAmJiB2YWwgaW5zdGFuY2VvZiBVUkxTZWFyY2hQYXJhbXM7XG59XG5cbi8qKlxuICogVHJpbSBleGNlc3Mgd2hpdGVzcGFjZSBvZmYgdGhlIGJlZ2lubmluZyBhbmQgZW5kIG9mIGEgc3RyaW5nXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBUaGUgU3RyaW5nIHRvIHRyaW1cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBTdHJpbmcgZnJlZWQgb2YgZXhjZXNzIHdoaXRlc3BhY2VcbiAqL1xuZnVuY3Rpb24gdHJpbShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eXFxzKi8sICcnKS5yZXBsYWNlKC9cXHMqJC8sICcnKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgd2UncmUgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAqXG4gKiBUaGlzIGFsbG93cyBheGlvcyB0byBydW4gaW4gYSB3ZWIgd29ya2VyLCBhbmQgcmVhY3QtbmF0aXZlLlxuICogQm90aCBlbnZpcm9ubWVudHMgc3VwcG9ydCBYTUxIdHRwUmVxdWVzdCwgYnV0IG5vdCBmdWxseSBzdGFuZGFyZCBnbG9iYWxzLlxuICpcbiAqIHdlYiB3b3JrZXJzOlxuICogIHR5cGVvZiB3aW5kb3cgLT4gdW5kZWZpbmVkXG4gKiAgdHlwZW9mIGRvY3VtZW50IC0+IHVuZGVmaW5lZFxuICpcbiAqIHJlYWN0LW5hdGl2ZTpcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnUmVhY3ROYXRpdmUnXG4gKi9cbmZ1bmN0aW9uIGlzU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIChcbiAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCdcbiAgKTtcbn1cblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYW4gQXJyYXkgb3IgYW4gT2JqZWN0IGludm9raW5nIGEgZnVuY3Rpb24gZm9yIGVhY2ggaXRlbS5cbiAqXG4gKiBJZiBgb2JqYCBpcyBhbiBBcnJheSBjYWxsYmFjayB3aWxsIGJlIGNhbGxlZCBwYXNzaW5nXG4gKiB0aGUgdmFsdWUsIGluZGV4LCBhbmQgY29tcGxldGUgYXJyYXkgZm9yIGVhY2ggaXRlbS5cbiAqXG4gKiBJZiAnb2JqJyBpcyBhbiBPYmplY3QgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBrZXksIGFuZCBjb21wbGV0ZSBvYmplY3QgZm9yIGVhY2ggcHJvcGVydHkuXG4gKlxuICogQHBhcmFtIHtPYmplY3R8QXJyYXl9IG9iaiBUaGUgb2JqZWN0IHRvIGl0ZXJhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBjYWxsYmFjayB0byBpbnZva2UgZm9yIGVhY2ggaXRlbVxuICovXG5mdW5jdGlvbiBmb3JFYWNoKG9iaiwgZm4pIHtcbiAgLy8gRG9uJ3QgYm90aGVyIGlmIG5vIHZhbHVlIHByb3ZpZGVkXG4gIGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBGb3JjZSBhbiBhcnJheSBpZiBub3QgYWxyZWFkeSBzb21ldGhpbmcgaXRlcmFibGVcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG4gICAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gICAgb2JqID0gW29ial07XG4gIH1cblxuICBpZiAoaXNBcnJheShvYmopKSB7XG4gICAgLy8gSXRlcmF0ZSBvdmVyIGFycmF5IHZhbHVlc1xuICAgIGZvciAodmFyIGkgPSAwLCBsID0gb2JqLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgZm4uY2FsbChudWxsLCBvYmpbaV0sIGksIG9iaik7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBvYmplY3Qga2V5c1xuICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2tleV0sIGtleSwgb2JqKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBBY2NlcHRzIHZhcmFyZ3MgZXhwZWN0aW5nIGVhY2ggYXJndW1lbnQgdG8gYmUgYW4gb2JqZWN0LCB0aGVuXG4gKiBpbW11dGFibHkgbWVyZ2VzIHRoZSBwcm9wZXJ0aWVzIG9mIGVhY2ggb2JqZWN0IGFuZCByZXR1cm5zIHJlc3VsdC5cbiAqXG4gKiBXaGVuIG11bHRpcGxlIG9iamVjdHMgY29udGFpbiB0aGUgc2FtZSBrZXkgdGhlIGxhdGVyIG9iamVjdCBpblxuICogdGhlIGFyZ3VtZW50cyBsaXN0IHdpbGwgdGFrZSBwcmVjZWRlbmNlLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBganNcbiAqIHZhciByZXN1bHQgPSBtZXJnZSh7Zm9vOiAxMjN9LCB7Zm9vOiA0NTZ9KTtcbiAqIGNvbnNvbGUubG9nKHJlc3VsdC5mb28pOyAvLyBvdXRwdXRzIDQ1NlxuICogYGBgXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9iajEgT2JqZWN0IHRvIG1lcmdlXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXN1bHQgb2YgYWxsIG1lcmdlIHByb3BlcnRpZXNcbiAqL1xuZnVuY3Rpb24gbWVyZ2UoLyogb2JqMSwgb2JqMiwgb2JqMywgLi4uICovKSB7XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgZnVuY3Rpb24gYXNzaWduVmFsdWUodmFsLCBrZXkpIHtcbiAgICBpZiAodHlwZW9mIHJlc3VsdFtrZXldID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdmFsID09PSAnb2JqZWN0Jykge1xuICAgICAgcmVzdWx0W2tleV0gPSBtZXJnZShyZXN1bHRba2V5XSwgdmFsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0W2tleV0gPSB2YWw7XG4gICAgfVxuICB9XG5cbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgZm9yRWFjaChhcmd1bWVudHNbaV0sIGFzc2lnblZhbHVlKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEV4dGVuZHMgb2JqZWN0IGEgYnkgbXV0YWJseSBhZGRpbmcgdG8gaXQgdGhlIHByb3BlcnRpZXMgb2Ygb2JqZWN0IGIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGEgVGhlIG9iamVjdCB0byBiZSBleHRlbmRlZFxuICogQHBhcmFtIHtPYmplY3R9IGIgVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgZnJvbVxuICogQHBhcmFtIHtPYmplY3R9IHRoaXNBcmcgVGhlIG9iamVjdCB0byBiaW5kIGZ1bmN0aW9uIHRvXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSByZXN1bHRpbmcgdmFsdWUgb2Ygb2JqZWN0IGFcbiAqL1xuZnVuY3Rpb24gZXh0ZW5kKGEsIGIsIHRoaXNBcmcpIHtcbiAgZm9yRWFjaChiLCBmdW5jdGlvbiBhc3NpZ25WYWx1ZSh2YWwsIGtleSkge1xuICAgIGlmICh0aGlzQXJnICYmIHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGFba2V5XSA9IGJpbmQodmFsLCB0aGlzQXJnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYVtrZXldID0gdmFsO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBhO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNBcnJheTogaXNBcnJheSxcbiAgaXNBcnJheUJ1ZmZlcjogaXNBcnJheUJ1ZmZlcixcbiAgaXNCdWZmZXI6IGlzQnVmZmVyLFxuICBpc0Zvcm1EYXRhOiBpc0Zvcm1EYXRhLFxuICBpc0FycmF5QnVmZmVyVmlldzogaXNBcnJheUJ1ZmZlclZpZXcsXG4gIGlzU3RyaW5nOiBpc1N0cmluZyxcbiAgaXNOdW1iZXI6IGlzTnVtYmVyLFxuICBpc09iamVjdDogaXNPYmplY3QsXG4gIGlzVW5kZWZpbmVkOiBpc1VuZGVmaW5lZCxcbiAgaXNEYXRlOiBpc0RhdGUsXG4gIGlzRmlsZTogaXNGaWxlLFxuICBpc0Jsb2I6IGlzQmxvYixcbiAgaXNGdW5jdGlvbjogaXNGdW5jdGlvbixcbiAgaXNTdHJlYW06IGlzU3RyZWFtLFxuICBpc1VSTFNlYXJjaFBhcmFtczogaXNVUkxTZWFyY2hQYXJhbXMsXG4gIGlzU3RhbmRhcmRCcm93c2VyRW52OiBpc1N0YW5kYXJkQnJvd3NlckVudixcbiAgZm9yRWFjaDogZm9yRWFjaCxcbiAgbWVyZ2U6IG1lcmdlLFxuICBleHRlbmQ6IGV4dGVuZCxcbiAgdHJpbTogdHJpbVxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIG5vcm1hbGl6ZUhlYWRlck5hbWUgPSByZXF1aXJlKCcuL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZScpO1xuXG52YXIgREVGQVVMVF9DT05URU5UX1RZUEUgPSB7XG4gICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xufTtcblxuZnVuY3Rpb24gc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsIHZhbHVlKSB7XG4gIGlmICghdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVycykgJiYgdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVyc1snQ29udGVudC1UeXBlJ10pKSB7XG4gICAgaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSB2YWx1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0QWRhcHRlcigpIHtcbiAgdmFyIGFkYXB0ZXI7XG4gIGlmICh0eXBlb2YgWE1MSHR0cFJlcXVlc3QgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gRm9yIGJyb3dzZXJzIHVzZSBYSFIgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuL2FkYXB0ZXJzL3hocicpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBub2RlIHVzZSBIVFRQIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy9odHRwJyk7XG4gIH1cbiAgcmV0dXJuIGFkYXB0ZXI7XG59XG5cbnZhciBkZWZhdWx0cyA9IHtcbiAgYWRhcHRlcjogZ2V0RGVmYXVsdEFkYXB0ZXIoKSxcblxuICB0cmFuc2Zvcm1SZXF1ZXN0OiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVxdWVzdChkYXRhLCBoZWFkZXJzKSB7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQ29udGVudC1UeXBlJyk7XG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQXJyYXlCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc1N0cmVhbShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNGaWxlKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0Jsb2IoZGF0YSlcbiAgICApIHtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNBcnJheUJ1ZmZlclZpZXcoZGF0YSkpIHtcbiAgICAgIHJldHVybiBkYXRhLmJ1ZmZlcjtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PXV0Zi04Jyk7XG4gICAgICByZXR1cm4gZGF0YS50b1N0cmluZygpO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNPYmplY3QoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04Jyk7XG4gICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICB0cmFuc2Zvcm1SZXNwb25zZTogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlc3BvbnNlKGRhdGEpIHtcbiAgICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0cnkge1xuICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsgLyogSWdub3JlICovIH1cbiAgICB9XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIC8qKlxuICAgKiBBIHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzIHRvIGFib3J0IGEgcmVxdWVzdC4gSWYgc2V0IHRvIDAgKGRlZmF1bHQpIGFcbiAgICogdGltZW91dCBpcyBub3QgY3JlYXRlZC5cbiAgICovXG4gIHRpbWVvdXQ6IDAsXG5cbiAgeHNyZkNvb2tpZU5hbWU6ICdYU1JGLVRPS0VOJyxcbiAgeHNyZkhlYWRlck5hbWU6ICdYLVhTUkYtVE9LRU4nLFxuXG4gIG1heENvbnRlbnRMZW5ndGg6IC0xLFxuXG4gIHZhbGlkYXRlU3RhdHVzOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG4gIH1cbn07XG5cbmRlZmF1bHRzLmhlYWRlcnMgPSB7XG4gIGNvbW1vbjoge1xuICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJ1xuICB9XG59O1xuXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHt9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHV0aWxzLm1lcmdlKERFRkFVTFRfQ09OVEVOVF9UWVBFKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRzO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgc2V0dGxlID0gcmVxdWlyZSgnLi8uLi9jb3JlL3NldHRsZScpO1xudmFyIGJ1aWxkVVJMID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcbnZhciBidG9hID0gKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5idG9hICYmIHdpbmRvdy5idG9hLmJpbmQod2luZG93KSkgfHwgcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2J0b2EnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICB2YXIgbG9hZEV2ZW50ID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSc7XG4gICAgdmFyIHhEb21haW4gPSBmYWxzZTtcblxuICAgIC8vIEZvciBJRSA4LzkgQ09SUyBzdXBwb3J0XG4gICAgLy8gT25seSBzdXBwb3J0cyBQT1NUIGFuZCBHRVQgY2FsbHMgYW5kIGRvZXNuJ3QgcmV0dXJucyB0aGUgcmVzcG9uc2UgaGVhZGVycy5cbiAgICAvLyBET04nVCBkbyB0aGlzIGZvciB0ZXN0aW5nIGIvYyBYTUxIdHRwUmVxdWVzdCBpcyBtb2NrZWQsIG5vdCBYRG9tYWluUmVxdWVzdC5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICd0ZXN0JyAmJlxuICAgICAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICB3aW5kb3cuWERvbWFpblJlcXVlc3QgJiYgISgnd2l0aENyZWRlbnRpYWxzJyBpbiByZXF1ZXN0KSAmJlxuICAgICAgICAhaXNVUkxTYW1lT3JpZ2luKGNvbmZpZy51cmwpKSB7XG4gICAgICByZXF1ZXN0ID0gbmV3IHdpbmRvdy5YRG9tYWluUmVxdWVzdCgpO1xuICAgICAgbG9hZEV2ZW50ID0gJ29ubG9hZCc7XG4gICAgICB4RG9tYWluID0gdHJ1ZTtcbiAgICAgIHJlcXVlc3Qub25wcm9ncmVzcyA9IGZ1bmN0aW9uIGhhbmRsZVByb2dyZXNzKCkge307XG4gICAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7fTtcbiAgICB9XG5cbiAgICAvLyBIVFRQIGJhc2ljIGF1dGhlbnRpY2F0aW9uXG4gICAgaWYgKGNvbmZpZy5hdXRoKSB7XG4gICAgICB2YXIgdXNlcm5hbWUgPSBjb25maWcuYXV0aC51c2VybmFtZSB8fCAnJztcbiAgICAgIHZhciBwYXNzd29yZCA9IGNvbmZpZy5hdXRoLnBhc3N3b3JkIHx8ICcnO1xuICAgICAgcmVxdWVzdEhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICdCYXNpYyAnICsgYnRvYSh1c2VybmFtZSArICc6JyArIHBhc3N3b3JkKTtcbiAgICB9XG5cbiAgICByZXF1ZXN0Lm9wZW4oY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBidWlsZFVSTChjb25maWcudXJsLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplciksIHRydWUpO1xuXG4gICAgLy8gU2V0IHRoZSByZXF1ZXN0IHRpbWVvdXQgaW4gTVNcbiAgICByZXF1ZXN0LnRpbWVvdXQgPSBjb25maWcudGltZW91dDtcblxuICAgIC8vIExpc3RlbiBmb3IgcmVhZHkgc3RhdGVcbiAgICByZXF1ZXN0W2xvYWRFdmVudF0gPSBmdW5jdGlvbiBoYW5kbGVMb2FkKCkge1xuICAgICAgaWYgKCFyZXF1ZXN0IHx8IChyZXF1ZXN0LnJlYWR5U3RhdGUgIT09IDQgJiYgIXhEb21haW4pKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gVGhlIHJlcXVlc3QgZXJyb3JlZCBvdXQgYW5kIHdlIGRpZG4ndCBnZXQgYSByZXNwb25zZSwgdGhpcyB3aWxsIGJlXG4gICAgICAvLyBoYW5kbGVkIGJ5IG9uZXJyb3IgaW5zdGVhZFxuICAgICAgLy8gV2l0aCBvbmUgZXhjZXB0aW9uOiByZXF1ZXN0IHRoYXQgdXNpbmcgZmlsZTogcHJvdG9jb2wsIG1vc3QgYnJvd3NlcnNcbiAgICAgIC8vIHdpbGwgcmV0dXJuIHN0YXR1cyBhcyAwIGV2ZW4gdGhvdWdoIGl0J3MgYSBzdWNjZXNzZnVsIHJlcXVlc3RcbiAgICAgIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gMCAmJiAhKHJlcXVlc3QucmVzcG9uc2VVUkwgJiYgcmVxdWVzdC5yZXNwb25zZVVSTC5pbmRleE9mKCdmaWxlOicpID09PSAwKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIFByZXBhcmUgdGhlIHJlc3BvbnNlXG4gICAgICB2YXIgcmVzcG9uc2VIZWFkZXJzID0gJ2dldEFsbFJlc3BvbnNlSGVhZGVycycgaW4gcmVxdWVzdCA/IHBhcnNlSGVhZGVycyhyZXF1ZXN0LmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSA6IG51bGw7XG4gICAgICB2YXIgcmVzcG9uc2VEYXRhID0gIWNvbmZpZy5yZXNwb25zZVR5cGUgfHwgY29uZmlnLnJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnID8gcmVxdWVzdC5yZXNwb25zZVRleHQgOiByZXF1ZXN0LnJlc3BvbnNlO1xuICAgICAgdmFyIHJlc3BvbnNlID0ge1xuICAgICAgICBkYXRhOiByZXNwb25zZURhdGEsXG4gICAgICAgIC8vIElFIHNlbmRzIDEyMjMgaW5zdGVhZCBvZiAyMDQgKGh0dHBzOi8vZ2l0aHViLmNvbS9heGlvcy9heGlvcy9pc3N1ZXMvMjAxKVxuICAgICAgICBzdGF0dXM6IHJlcXVlc3Quc3RhdHVzID09PSAxMjIzID8gMjA0IDogcmVxdWVzdC5zdGF0dXMsXG4gICAgICAgIHN0YXR1c1RleHQ6IHJlcXVlc3Quc3RhdHVzID09PSAxMjIzID8gJ05vIENvbnRlbnQnIDogcmVxdWVzdC5zdGF0dXNUZXh0LFxuICAgICAgICBoZWFkZXJzOiByZXNwb25zZUhlYWRlcnMsXG4gICAgICAgIGNvbmZpZzogY29uZmlnLFxuICAgICAgICByZXF1ZXN0OiByZXF1ZXN0XG4gICAgICB9O1xuXG4gICAgICBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgbG93IGxldmVsIG5ldHdvcmsgZXJyb3JzXG4gICAgcmVxdWVzdC5vbmVycm9yID0gZnVuY3Rpb24gaGFuZGxlRXJyb3IoKSB7XG4gICAgICAvLyBSZWFsIGVycm9ycyBhcmUgaGlkZGVuIGZyb20gdXMgYnkgdGhlIGJyb3dzZXJcbiAgICAgIC8vIG9uZXJyb3Igc2hvdWxkIG9ubHkgZmlyZSBpZiBpdCdzIGEgbmV0d29yayBlcnJvclxuICAgICAgcmVqZWN0KGNyZWF0ZUVycm9yKCdOZXR3b3JrIEVycm9yJywgY29uZmlnLCBudWxsLCByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgdGltZW91dFxuICAgIHJlcXVlc3Qub250aW1lb3V0ID0gZnVuY3Rpb24gaGFuZGxlVGltZW91dCgpIHtcbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcigndGltZW91dCBvZiAnICsgY29uZmlnLnRpbWVvdXQgKyAnbXMgZXhjZWVkZWQnLCBjb25maWcsICdFQ09OTkFCT1JURUQnLFxuICAgICAgICByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAvLyBUaGlzIGlzIG9ubHkgZG9uZSBpZiBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAgICAvLyBTcGVjaWZpY2FsbHkgbm90IGlmIHdlJ3JlIGluIGEgd2ViIHdvcmtlciwgb3IgcmVhY3QtbmF0aXZlLlxuICAgIGlmICh1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpKSB7XG4gICAgICB2YXIgY29va2llcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb29raWVzJyk7XG5cbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgdmFyIHhzcmZWYWx1ZSA9IChjb25maWcud2l0aENyZWRlbnRpYWxzIHx8IGlzVVJMU2FtZU9yaWdpbihjb25maWcudXJsKSkgJiYgY29uZmlnLnhzcmZDb29raWVOYW1lID9cbiAgICAgICAgICBjb29raWVzLnJlYWQoY29uZmlnLnhzcmZDb29raWVOYW1lKSA6XG4gICAgICAgICAgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoeHNyZlZhbHVlKSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzW2NvbmZpZy54c3JmSGVhZGVyTmFtZV0gPSB4c3JmVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIGhlYWRlcnMgdG8gdGhlIHJlcXVlc3RcbiAgICBpZiAoJ3NldFJlcXVlc3RIZWFkZXInIGluIHJlcXVlc3QpIHtcbiAgICAgIHV0aWxzLmZvckVhY2gocmVxdWVzdEhlYWRlcnMsIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIodmFsLCBrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0RGF0YSA9PT0gJ3VuZGVmaW5lZCcgJiYga2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgLy8gUmVtb3ZlIENvbnRlbnQtVHlwZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1trZXldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE90aGVyd2lzZSBhZGQgaGVhZGVyIHRvIHRoZSByZXF1ZXN0XG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhDcmVkZW50aWFscyB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmIChjb25maWcud2l0aENyZWRlbnRpYWxzKSB7XG4gICAgICByZXF1ZXN0LndpdGhDcmVkZW50aWFscyA9IHRydWU7XG4gICAgfVxuXG4gICAgLy8gQWRkIHJlc3BvbnNlVHlwZSB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmIChjb25maWcucmVzcG9uc2VUeXBlKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXF1ZXN0LnJlc3BvbnNlVHlwZSA9IGNvbmZpZy5yZXNwb25zZVR5cGU7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIEV4cGVjdGVkIERPTUV4Y2VwdGlvbiB0aHJvd24gYnkgYnJvd3NlcnMgbm90IGNvbXBhdGlibGUgWE1MSHR0cFJlcXVlc3QgTGV2ZWwgMi5cbiAgICAgICAgLy8gQnV0LCB0aGlzIGNhbiBiZSBzdXBwcmVzc2VkIGZvciAnanNvbicgdHlwZSBhcyBpdCBjYW4gYmUgcGFyc2VkIGJ5IGRlZmF1bHQgJ3RyYW5zZm9ybVJlc3BvbnNlJyBmdW5jdGlvbi5cbiAgICAgICAgaWYgKGNvbmZpZy5yZXNwb25zZVR5cGUgIT09ICdqc29uJykge1xuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgcHJvZ3Jlc3MgaWYgbmVlZGVkXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25Eb3dubG9hZFByb2dyZXNzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXF1ZXN0LmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgLy8gTm90IGFsbCBicm93c2VycyBzdXBwb3J0IHVwbG9hZCBldmVudHNcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5vblVwbG9hZFByb2dyZXNzID09PSAnZnVuY3Rpb24nICYmIHJlcXVlc3QudXBsb2FkKSB7XG4gICAgICByZXF1ZXN0LnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vblVwbG9hZFByb2dyZXNzKTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgICAvLyBIYW5kbGUgY2FuY2VsbGF0aW9uXG4gICAgICBjb25maWcuY2FuY2VsVG9rZW4ucHJvbWlzZS50aGVuKGZ1bmN0aW9uIG9uQ2FuY2VsZWQoY2FuY2VsKSB7XG4gICAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlcXVlc3QuYWJvcnQoKTtcbiAgICAgICAgcmVqZWN0KGNhbmNlbCk7XG4gICAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAocmVxdWVzdERhdGEgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmVxdWVzdERhdGEgPSBudWxsO1xuICAgIH1cblxuICAgIC8vIFNlbmQgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LnNlbmQocmVxdWVzdERhdGEpO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBlbmhhbmNlRXJyb3IgPSByZXF1aXJlKCcuL2VuaGFuY2VFcnJvcicpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSwgY29uZmlnLCBlcnJvciBjb2RlLCByZXF1ZXN0IGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVFcnJvcihtZXNzYWdlLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIHZhciBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgcmV0dXJuIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQ2FuY2VsKHZhbHVlKSB7XG4gIHJldHVybiAhISh2YWx1ZSAmJiB2YWx1ZS5fX0NBTkNFTF9fKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSBgQ2FuY2VsYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge3N0cmluZz19IG1lc3NhZ2UgVGhlIG1lc3NhZ2UuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbChtZXNzYWdlKSB7XG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG59XG5cbkNhbmNlbC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuICdDYW5jZWwnICsgKHRoaXMubWVzc2FnZSA/ICc6ICcgKyB0aGlzLm1lc3NhZ2UgOiAnJyk7XG59O1xuXG5DYW5jZWwucHJvdG90eXBlLl9fQ0FOQ0VMX18gPSB0cnVlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgeyBBcHBTdGF0ZSB9IGZyb20gXCIuLi9zdG9yZVwiO1xyXG5pbXBvcnQgeyBmZXRjaFVzZXJzIH0gZnJvbSBcIi4uL3N0b3JlL3VzZXIvYWN0aW9uc1wiO1xyXG5cclxudHlwZSBQcm9wcyA9IHtcclxuICBmZXRjaFVzZXJzOiAoKSA9PiB2b2lkO1xyXG4gIHVzZXJzOiB7IGlkOiBzdHJpbmc7IG5hbWU6IHN0cmluZyB9W107XHJcbn07XHJcblxyXG5mdW5jdGlvbiBVc2Vyc0xpc3QocHJvcHM6IFByb3BzKSB7XHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHByb3BzLmZldGNoVXNlcnMoKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIGNvbnN0IHJlbmRlclVzZXJzID0gKCkgPT4ge1xyXG4gICAgcmV0dXJuIHByb3BzLnVzZXJzLm1hcCh1c2VyID0+IHtcclxuICAgICAgcmV0dXJuIDxsaSBrZXk9e3VzZXIuaWR9Pnt1c2VyLm5hbWV9PC9saT47XHJcbiAgICB9KTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPHA+SGVyZSBpcyBhIGJpZyBsaXN0IG9mIHVzZXJzPC9wPlxyXG4gICAgICA8dWw+e3JlbmRlclVzZXJzKCl9PC91bD5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuXHJcbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdGF0ZTogQXBwU3RhdGUpID0+IHtcclxuICByZXR1cm4geyB1c2Vyczogc3RhdGUudXNlcnMgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXHJcbiAgbWFwU3RhdGVUb1Byb3BzLFxyXG4gIHsgZmV0Y2hVc2VycyB9XHJcbikoVXNlcnNMaXN0KTtcclxuIiwiaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xyXG5pbXBvcnQgeyBEaXNwYXRjaCB9IGZyb20gXCJyZWR1eFwiO1xyXG5pbXBvcnQgeyBGRVRDSF9VU0VSUyB9IGZyb20gXCIuL3R5cGVzXCI7XHJcblxyXG5leHBvcnQgY29uc3QgZmV0Y2hVc2VycyA9ICgpID0+IGFzeW5jIChkaXNwYXRjaDogRGlzcGF0Y2gpID0+IHtcclxuICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5nZXQoXCJodHRwOi8vcmVhY3Qtc3NyLWFwaS5oZXJva3VhcHAuY29tL3VzZXJzXCIpO1xyXG5cclxuICBkaXNwYXRjaCh7IHR5cGU6IEZFVENIX1VTRVJTLCBwYXlsb2FkOiByZXMgfSk7XHJcbn07XHJcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcbnZhciBBeGlvcyA9IHJlcXVpcmUoJy4vY29yZS9BeGlvcycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuYXhpb3MuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gIHJldHVybiBjcmVhdGVJbnN0YW5jZSh1dGlscy5tZXJnZShkZWZhdWx0cywgaW5zdGFuY2VDb25maWcpKTtcbn07XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIiwiLyohXG4gKiBEZXRlcm1pbmUgaWYgYW4gb2JqZWN0IGlzIGEgQnVmZmVyXG4gKlxuICogQGF1dGhvciAgIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuXG4vLyBUaGUgX2lzQnVmZmVyIGNoZWNrIGlzIGZvciBTYWZhcmkgNS03IHN1cHBvcnQsIGJlY2F1c2UgaXQncyBtaXNzaW5nXG4vLyBPYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yLiBSZW1vdmUgdGhpcyBldmVudHVhbGx5XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPSBudWxsICYmIChpc0J1ZmZlcihvYmopIHx8IGlzU2xvd0J1ZmZlcihvYmopIHx8ICEhb2JqLl9pc0J1ZmZlcilcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKG9iaikge1xuICByZXR1cm4gISFvYmouY29uc3RydWN0b3IgJiYgdHlwZW9mIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKVxufVxuXG4vLyBGb3IgTm9kZSB2MC4xMCBzdXBwb3J0LiBSZW1vdmUgdGhpcyBldmVudHVhbGx5LlxuZnVuY3Rpb24gaXNTbG93QnVmZmVyIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmoucmVhZEZsb2F0TEUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIG9iai5zbGljZSA9PT0gJ2Z1bmN0aW9uJyAmJiBpc0J1ZmZlcihvYmouc2xpY2UoMCwgMCkpXG59XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vLi4vZGVmYXVsdHMnKTtcbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBJbnRlcmNlcHRvck1hbmFnZXIgPSByZXF1aXJlKCcuL0ludGVyY2VwdG9yTWFuYWdlcicpO1xudmFyIGRpc3BhdGNoUmVxdWVzdCA9IHJlcXVpcmUoJy4vZGlzcGF0Y2hSZXF1ZXN0Jyk7XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGluc3RhbmNlQ29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIEF4aW9zKGluc3RhbmNlQ29uZmlnKSB7XG4gIHRoaXMuZGVmYXVsdHMgPSBpbnN0YW5jZUNvbmZpZztcbiAgdGhpcy5pbnRlcmNlcHRvcnMgPSB7XG4gICAgcmVxdWVzdDogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpLFxuICAgIHJlc3BvbnNlOiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKClcbiAgfTtcbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcgc3BlY2lmaWMgZm9yIHRoaXMgcmVxdWVzdCAobWVyZ2VkIHdpdGggdGhpcy5kZWZhdWx0cylcbiAqL1xuQXhpb3MucHJvdG90eXBlLnJlcXVlc3QgPSBmdW5jdGlvbiByZXF1ZXN0KGNvbmZpZykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgLy8gQWxsb3cgZm9yIGF4aW9zKCdleGFtcGxlL3VybCdbLCBjb25maWddKSBhIGxhIGZldGNoIEFQSVxuICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycpIHtcbiAgICBjb25maWcgPSB1dGlscy5tZXJnZSh7XG4gICAgICB1cmw6IGFyZ3VtZW50c1swXVxuICAgIH0sIGFyZ3VtZW50c1sxXSk7XG4gIH1cblxuICBjb25maWcgPSB1dGlscy5tZXJnZShkZWZhdWx0cywge21ldGhvZDogJ2dldCd9LCB0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuICBjb25maWcubWV0aG9kID0gY29uZmlnLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuXG4gIC8vIEhvb2sgdXAgaW50ZXJjZXB0b3JzIG1pZGRsZXdhcmVcbiAgdmFyIGNoYWluID0gW2Rpc3BhdGNoUmVxdWVzdCwgdW5kZWZpbmVkXTtcbiAgdmFyIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoY29uZmlnKTtcblxuICB0aGlzLmludGVyY2VwdG9ycy5yZXF1ZXN0LmZvckVhY2goZnVuY3Rpb24gdW5zaGlmdFJlcXVlc3RJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi51bnNoaWZ0KGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB0aGlzLmludGVyY2VwdG9ycy5yZXNwb25zZS5mb3JFYWNoKGZ1bmN0aW9uIHB1c2hSZXNwb25zZUludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGNoYWluLnB1c2goaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHdoaWxlIChjaGFpbi5sZW5ndGgpIHtcbiAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKGNoYWluLnNoaWZ0KCksIGNoYWluLnNoaWZ0KCkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuXG4vLyBQcm92aWRlIGFsaWFzZXMgZm9yIHN1cHBvcnRlZCByZXF1ZXN0IG1ldGhvZHNcbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAnb3B0aW9ucyddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdCh1dGlscy5tZXJnZShjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmxcbiAgICB9KSk7XG4gIH07XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGRhdGEsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QodXRpbHMubWVyZ2UoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF4aW9zO1xuIiwiLy8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyXG52YXIgcHJvY2VzcyA9IG1vZHVsZS5leHBvcnRzID0ge307XG5cbi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdFxuLy8gZG9uJ3QgYnJlYWsgdGhpbmdzLiAgQnV0IHdlIG5lZWQgdG8gd3JhcCBpdCBpbiBhIHRyeSBjYXRjaCBpbiBjYXNlIGl0IGlzXG4vLyB3cmFwcGVkIGluIHN0cmljdCBtb2RlIGNvZGUgd2hpY2ggZG9lc24ndCBkZWZpbmUgYW55IGdsb2JhbHMuICBJdCdzIGluc2lkZSBhXG4vLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLlxuXG52YXIgY2FjaGVkU2V0VGltZW91dDtcbnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG5mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0ICgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuKGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHNldFRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIGNsZWFyVGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDtcbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgLy8gaWYgc2V0VGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZFNldFRpbWVvdXQgPT09IGRlZmF1bHRTZXRUaW1vdXQgfHwgIWNhY2hlZFNldFRpbWVvdXQpICYmIHNldFRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0IHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKG51bGwsIGZ1biwgMCk7XG4gICAgICAgIH0gY2F0Y2goZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvclxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbCh0aGlzLCBmdW4sIDApO1xuICAgICAgICB9XG4gICAgfVxuXG5cbn1cbmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHtcbiAgICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgLy8gaWYgY2xlYXJUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBkZWZhdWx0Q2xlYXJUaW1lb3V0IHx8ICFjYWNoZWRDbGVhclRpbWVvdXQpICYmIGNsZWFyVGltZW91dCkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIHJldHVybiBjbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfSBjYXRjaCAoZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgIHRydXN0IHRoZSBnbG9iYWwgb2JqZWN0IHdoZW4gY2FsbGVkIG5vcm1hbGx5XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTtcbiAgICAgICAgfSBjYXRjaCAoZSl7XG4gICAgICAgICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvci5cbiAgICAgICAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXRcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLCBtYXJrZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufVxudmFyIHF1ZXVlID0gW107XG52YXIgZHJhaW5pbmcgPSBmYWxzZTtcbnZhciBjdXJyZW50UXVldWU7XG52YXIgcXVldWVJbmRleCA9IC0xO1xuXG5mdW5jdGlvbiBjbGVhblVwTmV4dFRpY2soKSB7XG4gICAgaWYgKCFkcmFpbmluZyB8fCAhY3VycmVudFF1ZXVlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBpZiAoY3VycmVudFF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICB9XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBkcmFpblF1ZXVlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBkcmFpblF1ZXVlKCkge1xuICAgIGlmIChkcmFpbmluZykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciB0aW1lb3V0ID0gcnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO1xuICAgIGRyYWluaW5nID0gdHJ1ZTtcblxuICAgIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgd2hpbGUobGVuKSB7XG4gICAgICAgIGN1cnJlbnRRdWV1ZSA9IHF1ZXVlO1xuICAgICAgICBxdWV1ZSA9IFtdO1xuICAgICAgICB3aGlsZSAoKytxdWV1ZUluZGV4IDwgbGVuKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHF1ZXVlSW5kZXggPSAtMTtcbiAgICAgICAgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBjdXJyZW50UXVldWUgPSBudWxsO1xuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgcnVuQ2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xufVxuXG5wcm9jZXNzLm5leHRUaWNrID0gZnVuY3Rpb24gKGZ1bikge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGggLSAxKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLCBhcmdzKSk7XG4gICAgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMSAmJiAhZHJhaW5pbmcpIHtcbiAgICAgICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTtcbiAgICB9XG59O1xuXG4vLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzXG5mdW5jdGlvbiBJdGVtKGZ1biwgYXJyYXkpIHtcbiAgICB0aGlzLmZ1biA9IGZ1bjtcbiAgICB0aGlzLmFycmF5ID0gYXJyYXk7XG59XG5JdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7XG59O1xucHJvY2Vzcy50aXRsZSA9ICdicm93c2VyJztcbnByb2Nlc3MuYnJvd3NlciA9IHRydWU7XG5wcm9jZXNzLmVudiA9IHt9O1xucHJvY2Vzcy5hcmd2ID0gW107XG5wcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXNcbnByb2Nlc3MudmVyc2lvbnMgPSB7fTtcblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnByb2Nlc3Mub24gPSBub29wO1xucHJvY2Vzcy5hZGRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLm9uY2UgPSBub29wO1xucHJvY2Vzcy5vZmYgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7XG5wcm9jZXNzLmVtaXQgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDtcblxucHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gW10gfVxuXG5wcm9jZXNzLmJpbmRpbmcgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5cbnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJy8nIH07XG5wcm9jZXNzLmNoZGlyID0gZnVuY3Rpb24gKGRpcikge1xuICAgIHRocm93IG5ldyBFcnJvcigncHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xucHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMDsgfTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgLy8gTm90ZTogc3RhdHVzIGlzIG5vdCBleHBvc2VkIGJ5IFhEb21haW5SZXF1ZXN0XG4gIGlmICghcmVzcG9uc2Uuc3RhdHVzIHx8ICF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVcGRhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGNvbmZpZywgZXJyb3IgY29kZSwgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yIFRoZSBlcnJvciB0byB1cGRhdGUuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBlcnJvci5jb25maWcgPSBjb25maWc7XG4gIGlmIChjb2RlKSB7XG4gICAgZXJyb3IuY29kZSA9IGNvZGU7XG4gIH1cbiAgZXJyb3IucmVxdWVzdCA9IHJlcXVlc3Q7XG4gIGVycm9yLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gIHJldHVybiBlcnJvcjtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gZW5jb2RlKHZhbCkge1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkuXG4gICAgcmVwbGFjZSgvJTQwL2dpLCAnQCcpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAnPycgOiAnJicpICsgc2VyaWFsaXplZFBhcmFtcztcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIGhhdmUgZnVsbCBzdXBwb3J0IG9mIHRoZSBBUElzIG5lZWRlZCB0byB0ZXN0XG4gIC8vIHdoZXRoZXIgdGhlIHJlcXVlc3QgVVJMIGlzIG9mIHRoZSBzYW1lIG9yaWdpbiBhcyBjdXJyZW50IGxvY2F0aW9uLlxuICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgIHZhciBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICB2YXIgdXJsUGFyc2luZ05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gICAgdmFyIG9yaWdpblVSTDtcblxuICAgIC8qKlxuICAgICogUGFyc2UgYSBVUkwgdG8gZGlzY292ZXIgaXQncyBjb21wb25lbnRzXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgVVJMIHRvIGJlIHBhcnNlZFxuICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAqL1xuICAgIGZ1bmN0aW9uIHJlc29sdmVVUkwodXJsKSB7XG4gICAgICB2YXIgaHJlZiA9IHVybDtcblxuICAgICAgaWYgKG1zaWUpIHtcbiAgICAgICAgLy8gSUUgbmVlZHMgYXR0cmlidXRlIHNldCB0d2ljZSB0byBub3JtYWxpemUgcHJvcGVydGllc1xuICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcbiAgICAgICAgaHJlZiA9IHVybFBhcnNpbmdOb2RlLmhyZWY7XG4gICAgICB9XG5cbiAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuXG4gICAgICAvLyB1cmxQYXJzaW5nTm9kZSBwcm92aWRlcyB0aGUgVXJsVXRpbHMgaW50ZXJmYWNlIC0gaHR0cDovL3VybC5zcGVjLndoYXR3Zy5vcmcvI3VybHV0aWxzXG4gICAgICByZXR1cm4ge1xuICAgICAgICBocmVmOiB1cmxQYXJzaW5nTm9kZS5ocmVmLFxuICAgICAgICBwcm90b2NvbDogdXJsUGFyc2luZ05vZGUucHJvdG9jb2wgPyB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKSA6ICcnLFxuICAgICAgICBob3N0OiB1cmxQYXJzaW5nTm9kZS5ob3N0LFxuICAgICAgICBzZWFyY2g6IHVybFBhcnNpbmdOb2RlLnNlYXJjaCA/IHVybFBhcnNpbmdOb2RlLnNlYXJjaC5yZXBsYWNlKC9eXFw/LywgJycpIDogJycsXG4gICAgICAgIGhhc2g6IHVybFBhcnNpbmdOb2RlLmhhc2ggPyB1cmxQYXJzaW5nTm9kZS5oYXNoLnJlcGxhY2UoL14jLywgJycpIDogJycsXG4gICAgICAgIGhvc3RuYW1lOiB1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxcbiAgICAgICAgcG9ydDogdXJsUGFyc2luZ05vZGUucG9ydCxcbiAgICAgICAgcGF0aG5hbWU6ICh1cmxQYXJzaW5nTm9kZS5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJykgP1xuICAgICAgICAgICAgICAgICAgdXJsUGFyc2luZ05vZGUucGF0aG5hbWUgOlxuICAgICAgICAgICAgICAgICAgJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWVcbiAgICAgIH07XG4gICAgfVxuXG4gICAgb3JpZ2luVVJMID0gcmVzb2x2ZVVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5cbiAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKHJlcXVlc3RVUkwpIHtcbiAgICAgIHZhciBwYXJzZWQgPSAodXRpbHMuaXNTdHJpbmcocmVxdWVzdFVSTCkpID8gcmVzb2x2ZVVSTChyZXF1ZXN0VVJMKSA6IHJlcXVlc3RVUkw7XG4gICAgICByZXR1cm4gKHBhcnNlZC5wcm90b2NvbCA9PT0gb3JpZ2luVVJMLnByb3RvY29sICYmXG4gICAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgIH07XG4gIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudnMgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbigpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gIH0pKClcbik7XG4iLCIndXNlIHN0cmljdCc7XG5cbi8vIGJ0b2EgcG9seWZpbGwgZm9yIElFPDEwIGNvdXJ0ZXN5IGh0dHBzOi8vZ2l0aHViLmNvbS9kYXZpZGNoYW1iZXJzL0Jhc2U2NC5qc1xuXG52YXIgY2hhcnMgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nO1xuXG5mdW5jdGlvbiBFKCkge1xuICB0aGlzLm1lc3NhZ2UgPSAnU3RyaW5nIGNvbnRhaW5zIGFuIGludmFsaWQgY2hhcmFjdGVyJztcbn1cbkUucHJvdG90eXBlID0gbmV3IEVycm9yO1xuRS5wcm90b3R5cGUuY29kZSA9IDU7XG5FLnByb3RvdHlwZS5uYW1lID0gJ0ludmFsaWRDaGFyYWN0ZXJFcnJvcic7XG5cbmZ1bmN0aW9uIGJ0b2EoaW5wdXQpIHtcbiAgdmFyIHN0ciA9IFN0cmluZyhpbnB1dCk7XG4gIHZhciBvdXRwdXQgPSAnJztcbiAgZm9yIChcbiAgICAvLyBpbml0aWFsaXplIHJlc3VsdCBhbmQgY291bnRlclxuICAgIHZhciBibG9jaywgY2hhckNvZGUsIGlkeCA9IDAsIG1hcCA9IGNoYXJzO1xuICAgIC8vIGlmIHRoZSBuZXh0IHN0ciBpbmRleCBkb2VzIG5vdCBleGlzdDpcbiAgICAvLyAgIGNoYW5nZSB0aGUgbWFwcGluZyB0YWJsZSB0byBcIj1cIlxuICAgIC8vICAgY2hlY2sgaWYgZCBoYXMgbm8gZnJhY3Rpb25hbCBkaWdpdHNcbiAgICBzdHIuY2hhckF0KGlkeCB8IDApIHx8IChtYXAgPSAnPScsIGlkeCAlIDEpO1xuICAgIC8vIFwiOCAtIGlkeCAlIDEgKiA4XCIgZ2VuZXJhdGVzIHRoZSBzZXF1ZW5jZSAyLCA0LCA2LCA4XG4gICAgb3V0cHV0ICs9IG1hcC5jaGFyQXQoNjMgJiBibG9jayA+PiA4IC0gaWR4ICUgMSAqIDgpXG4gICkge1xuICAgIGNoYXJDb2RlID0gc3RyLmNoYXJDb2RlQXQoaWR4ICs9IDMgLyA0KTtcbiAgICBpZiAoY2hhckNvZGUgPiAweEZGKSB7XG4gICAgICB0aHJvdyBuZXcgRSgpO1xuICAgIH1cbiAgICBibG9jayA9IGJsb2NrIDw8IDggfCBjaGFyQ29kZTtcbiAgfVxuICByZXR1cm4gb3V0cHV0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJ0b2E7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBzdXBwb3J0IGRvY3VtZW50LmNvb2tpZVxuICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgIHJldHVybiB7XG4gICAgICB3cml0ZTogZnVuY3Rpb24gd3JpdGUobmFtZSwgdmFsdWUsIGV4cGlyZXMsIHBhdGgsIGRvbWFpbiwgc2VjdXJlKSB7XG4gICAgICAgIHZhciBjb29raWUgPSBbXTtcbiAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgIGlmICh1dGlscy5pc051bWJlcihleHBpcmVzKSkge1xuICAgICAgICAgIGNvb2tpZS5wdXNoKCdleHBpcmVzPScgKyBuZXcgRGF0ZShleHBpcmVzKS50b0dNVFN0cmluZygpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhwYXRoKSkge1xuICAgICAgICAgIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh1dGlscy5pc1N0cmluZyhkb21haW4pKSB7XG4gICAgICAgICAgY29va2llLnB1c2goJ2RvbWFpbj0nICsgZG9tYWluKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzZWN1cmUgPT09IHRydWUpIHtcbiAgICAgICAgICBjb29raWUucHVzaCgnc2VjdXJlJyk7XG4gICAgICAgIH1cblxuICAgICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWUuam9pbignOyAnKTtcbiAgICAgIH0sXG5cbiAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICB2YXIgbWF0Y2ggPSBkb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cCgnKF58O1xcXFxzKikoJyArIG5hbWUgKyAnKT0oW147XSopJykpO1xuICAgICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgICAgfSxcblxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUobmFtZSkge1xuICAgICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgICAgfVxuICAgIH07XG4gIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudiAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKCkge30sXG4gICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9KSgpXG4pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIEludGVyY2VwdG9yTWFuYWdlcigpIHtcbiAgdGhpcy5oYW5kbGVycyA9IFtdO1xufVxuXG4vKipcbiAqIEFkZCBhIG5ldyBpbnRlcmNlcHRvciB0byB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdWxmaWxsZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgdGhlbmAgZm9yIGEgYFByb21pc2VgXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3RlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGByZWplY3RgIGZvciBhIGBQcm9taXNlYFxuICpcbiAqIEByZXR1cm4ge051bWJlcn0gQW4gSUQgdXNlZCB0byByZW1vdmUgaW50ZXJjZXB0b3IgbGF0ZXJcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS51c2UgPSBmdW5jdGlvbiB1c2UoZnVsZmlsbGVkLCByZWplY3RlZCkge1xuICB0aGlzLmhhbmRsZXJzLnB1c2goe1xuICAgIGZ1bGZpbGxlZDogZnVsZmlsbGVkLFxuICAgIHJlamVjdGVkOiByZWplY3RlZFxuICB9KTtcbiAgcmV0dXJuIHRoaXMuaGFuZGxlcnMubGVuZ3RoIC0gMTtcbn07XG5cbi8qKlxuICogUmVtb3ZlIGFuIGludGVyY2VwdG9yIGZyb20gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGlkIFRoZSBJRCB0aGF0IHdhcyByZXR1cm5lZCBieSBgdXNlYFxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmVqZWN0ID0gZnVuY3Rpb24gZWplY3QoaWQpIHtcbiAgaWYgKHRoaXMuaGFuZGxlcnNbaWRdKSB7XG4gICAgdGhpcy5oYW5kbGVyc1tpZF0gPSBudWxsO1xuICB9XG59O1xuXG4vKipcbiAqIEl0ZXJhdGUgb3ZlciBhbGwgdGhlIHJlZ2lzdGVyZWQgaW50ZXJjZXB0b3JzXG4gKlxuICogVGhpcyBtZXRob2QgaXMgcGFydGljdWxhcmx5IHVzZWZ1bCBmb3Igc2tpcHBpbmcgb3ZlciBhbnlcbiAqIGludGVyY2VwdG9ycyB0aGF0IG1heSBoYXZlIGJlY29tZSBgbnVsbGAgY2FsbGluZyBgZWplY3RgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBjYWxsIGZvciBlYWNoIGludGVyY2VwdG9yXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uIGZvckVhY2goZm4pIHtcbiAgdXRpbHMuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLCBmdW5jdGlvbiBmb3JFYWNoSGFuZGxlcihoKSB7XG4gICAgaWYgKGggIT09IG51bGwpIHtcbiAgICAgIGZuKGgpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEludGVyY2VwdG9yTWFuYWdlcjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIHRyYW5zZm9ybURhdGEgPSByZXF1aXJlKCcuL3RyYW5zZm9ybURhdGEnKTtcbnZhciBpc0NhbmNlbCA9IHJlcXVpcmUoJy4uL2NhbmNlbC9pc0NhbmNlbCcpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi4vZGVmYXVsdHMnKTtcbnZhciBpc0Fic29sdXRlVVJMID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwnKTtcbnZhciBjb21iaW5lVVJMcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIFRocm93cyBhIGBDYW5jZWxgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gKi9cbmZ1bmN0aW9uIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKSB7XG4gIGlmIChjb25maWcuY2FuY2VsVG9rZW4pIHtcbiAgICBjb25maWcuY2FuY2VsVG9rZW4udGhyb3dJZlJlcXVlc3RlZCgpO1xuICB9XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdXNpbmcgdGhlIGNvbmZpZ3VyZWQgYWRhcHRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICogQHJldHVybnMge1Byb21pc2V9IFRoZSBQcm9taXNlIHRvIGJlIGZ1bGZpbGxlZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRpc3BhdGNoUmVxdWVzdChjb25maWcpIHtcbiAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gIC8vIFN1cHBvcnQgYmFzZVVSTCBjb25maWdcbiAgaWYgKGNvbmZpZy5iYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKGNvbmZpZy51cmwpKSB7XG4gICAgY29uZmlnLnVybCA9IGNvbWJpbmVVUkxzKGNvbmZpZy5iYXNlVVJMLCBjb25maWcudXJsKTtcbiAgfVxuXG4gIC8vIEVuc3VyZSBoZWFkZXJzIGV4aXN0XG4gIGNvbmZpZy5oZWFkZXJzID0gY29uZmlnLmhlYWRlcnMgfHwge307XG5cbiAgLy8gVHJhbnNmb3JtIHJlcXVlc3QgZGF0YVxuICBjb25maWcuZGF0YSA9IHRyYW5zZm9ybURhdGEoXG4gICAgY29uZmlnLmRhdGEsXG4gICAgY29uZmlnLmhlYWRlcnMsXG4gICAgY29uZmlnLnRyYW5zZm9ybVJlcXVlc3RcbiAgKTtcblxuICAvLyBGbGF0dGVuIGhlYWRlcnNcbiAgY29uZmlnLmhlYWRlcnMgPSB1dGlscy5tZXJnZShcbiAgICBjb25maWcuaGVhZGVycy5jb21tb24gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNbY29uZmlnLm1ldGhvZF0gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnMgfHwge31cbiAgKTtcblxuICB1dGlscy5mb3JFYWNoKFxuICAgIFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJywgJ2NvbW1vbiddLFxuICAgIGZ1bmN0aW9uIGNsZWFuSGVhZGVyQ29uZmlnKG1ldGhvZCkge1xuICAgICAgZGVsZXRlIGNvbmZpZy5oZWFkZXJzW21ldGhvZF07XG4gICAgfVxuICApO1xuXG4gIHZhciBhZGFwdGVyID0gY29uZmlnLmFkYXB0ZXIgfHwgZGVmYXVsdHMuYWRhcHRlcjtcblxuICByZXR1cm4gYWRhcHRlcihjb25maWcpLnRoZW4oZnVuY3Rpb24gb25BZGFwdGVyUmVzb2x1dGlvbihyZXNwb25zZSkge1xuICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgcmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEoXG4gICAgICByZXNwb25zZS5kYXRhLFxuICAgICAgcmVzcG9uc2UuaGVhZGVycyxcbiAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICk7XG5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH0sIGZ1bmN0aW9uIG9uQWRhcHRlclJlamVjdGlvbihyZWFzb24pIHtcbiAgICBpZiAoIWlzQ2FuY2VsKHJlYXNvbikpIHtcbiAgICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICAgIGlmIChyZWFzb24gJiYgcmVhc29uLnJlc3BvbnNlKSB7XG4gICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSxcbiAgICAgICAgICByZWFzb24ucmVzcG9uc2UuaGVhZGVycyxcbiAgICAgICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2VcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVhc29uKTtcbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbihkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGRcXCtcXC1cXC5dKjopP1xcL1xcLy9pLnRlc3QodXJsKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvKyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWwobWVzc2FnZSk7XG4gICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICovXG5DYW5jZWxUb2tlbi5zb3VyY2UgPSBmdW5jdGlvbiBzb3VyY2UoKSB7XG4gIHZhciBjYW5jZWw7XG4gIHZhciB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgY2FuY2VsID0gYztcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdG9rZW46IHRva2VuLFxuICAgIGNhbmNlbDogY2FuY2VsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbFRva2VuO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFN5bnRhY3RpYyBzdWdhciBmb3IgaW52b2tpbmcgYSBmdW5jdGlvbiBhbmQgZXhwYW5kaW5nIGFuIGFycmF5IGZvciBhcmd1bWVudHMuXG4gKlxuICogQ29tbW9uIHVzZSBjYXNlIHdvdWxkIGJlIHRvIHVzZSBgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5YC5cbiAqXG4gKiAgYGBganNcbiAqICBmdW5jdGlvbiBmKHgsIHksIHopIHt9XG4gKiAgdmFyIGFyZ3MgPSBbMSwgMiwgM107XG4gKiAgZi5hcHBseShudWxsLCBhcmdzKTtcbiAqICBgYGBcbiAqXG4gKiBXaXRoIGBzcHJlYWRgIHRoaXMgZXhhbXBsZSBjYW4gYmUgcmUtd3JpdHRlbi5cbiAqXG4gKiAgYGBganNcbiAqICBzcHJlYWQoZnVuY3Rpb24oeCwgeSwgeikge30pKFsxLCAyLCAzXSk7XG4gKiAgYGBgXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzcHJlYWQoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoYXJyKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFycik7XG4gIH07XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==